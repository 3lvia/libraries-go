// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100159_3.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullEventContentTypeEnum int

const (
	UnionNullEventContentTypeEnumEventContent UnionNullEventContentTypeEnum = 1
)

type UnionNullEventContent struct {
	Null         *types.NullVal
	EventContent EventContent
	UnionType    UnionNullEventContentTypeEnum
}

func writeUnionNullEventContent(r *UnionNullEventContent, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullEventContentTypeEnumEventContent:
		return writeEventContent(r.EventContent, w)
	}
	return fmt.Errorf("invalid value for *UnionNullEventContent")
}

func NewUnionNullEventContent() *UnionNullEventContent {
	return &UnionNullEventContent{}
}

func (r *UnionNullEventContent) Serialize(w io.Writer) error {
	return writeUnionNullEventContent(r, w)
}

func DeserializeUnionNullEventContent(r io.Reader) (*UnionNullEventContent, error) {
	t := NewUnionNullEventContent()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullEventContentFromSchema(r io.Reader, schema string) (*UnionNullEventContent, error) {
	t := NewUnionNullEventContent()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullEventContent) Schema() string {
	return "[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Customer\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Communications\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"name\":\"CommucationType\",\"type\":{\"name\":\"CommunicationType\",\"symbols\":[\"Email\",\"Phone\"],\"type\":\"enum\"}},{\"name\":\"CommunicationId\",\"type\":\"int\"},{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Value\",\"type\":[\"null\",\"string\"]}],\"name\":\"Communication\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"Contracts\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"name\":\"ContractId\",\"type\":\"int\"},{\"default\":null,\"name\":\"EndTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"InvoiceAddress\",\"type\":[\"null\",{\"fields\":[{\"name\":\"AddressId\",\"type\":\"int\"},{\"default\":null,\"name\":\"AttentionOf\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CareOf\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CountryCode\",\"type\":[\"null\",\"string\"]},{\"name\":\"FakedAddressId\",\"type\":\"int\"},{\"default\":null,\"name\":\"Floor\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"HouseLetter\",\"type\":[\"null\",\"string\"]},{\"name\":\"HouseNumber\",\"type\":\"int\"},{\"default\":null,\"name\":\"Municipality\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"OnBehalf\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PostBox\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PostCode\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"StreetName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Updated\",\"type\":[\"null\",\"string\"]}],\"name\":\"Address\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"MeteringPointId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MeterValueProfile\",\"type\":[\"null\",{\"fields\":[{\"name\":\"MeterValueProfileId\",\"type\":\"int\"},{\"default\":null,\"name\":\"Method\",\"type\":[\"null\",{\"name\":\"Method\",\"symbols\":[\"Automatic\",\"Manual\"],\"type\":\"enum\"}]},{\"default\":null,\"name\":\"Resolution\",\"type\":[\"null\",{\"name\":\"MeterValueResolution\",\"symbols\":[\"Quarterly\",\"Hourly\"],\"type\":\"enum\"}]}],\"name\":\"MeterValueProfile\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"NetProduct\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Name\",\"type\":[\"null\",\"string\"]},{\"name\":\"NetProductId\",\"type\":\"int\"}],\"name\":\"NetProduct\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"PostalAddress\",\"type\":[\"null\",\"Skogshorn.Kunde.Schemas.Entities.Address\"]},{\"name\":\"SettlementMethod\",\"type\":{\"name\":\"SettlementMethod\",\"symbols\":[\"Hourly\",\"Profile\"],\"type\":\"enum\"}},{\"name\":\"StartTime\",\"type\":\"string\"}],\"name\":\"Contract\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"CustomerId\",\"type\":[\"null\",\"string\"]},{\"name\":\"CustomerType\",\"type\":{\"name\":\"CustomerType\",\"symbols\":[\"Person\",\"Company\"],\"type\":\"enum\"}},{\"default\":null,\"name\":\"FirstName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IdentificationNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Name\",\"type\":[\"null\",\"string\"]},{\"name\":\"Updated\",\"type\":\"string\"}],\"name\":\"Customer\",\"namespace\":\"Skogshorn.Kunde.Schemas.Entities\",\"type\":\"record\"}]}],\"name\":\"EventContent\",\"type\":\"record\"}]"
}

func (_ *UnionNullEventContent) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullEventContent) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullEventContent) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullEventContent) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullEventContent) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullEventContent) SetString(v string)  { panic("Unsupported operation") }

func (r *UnionNullEventContent) SetLong(v int64) {

	r.UnionType = (UnionNullEventContentTypeEnum)(v)
}

func (r *UnionNullEventContent) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.EventContent = NewEventContent()
		return &types.Record{Target: (&r.EventContent)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullEventContent) NullField(i int)                  { panic("Unsupported operation") }
func (_ *UnionNullEventContent) HintSize(i int)                   { panic("Unsupported operation") }
func (_ *UnionNullEventContent) SetDefault(i int)                 { panic("Unsupported operation") }
func (_ *UnionNullEventContent) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullEventContent) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *UnionNullEventContent) Finalize()                        {}

func (r *UnionNullEventContent) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullEventContentTypeEnumEventContent:
		return json.Marshal(map[string]interface{}{"Skogshorn.Kunde.Schemas.Events.EventContent": r.EventContent})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullEventContent")
}

func (r *UnionNullEventContent) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["Skogshorn.Kunde.Schemas.Events.EventContent"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.EventContent)
	}
	return fmt.Errorf("invalid value for *UnionNullEventContent")
}
