// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100062_2.avsc
 */
package avro

import (
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

func writeArrayUnionNullKsqlDataSourceSchema_HOUSES(r []*UnionNullKsqlDataSourceSchema_HOUSES, w io.Writer) error {
	err := vm.WriteLong(int64(len(r)), w)
	if err != nil || len(r) == 0 {
		return err
	}
	for _, e := range r {
		err = writeUnionNullKsqlDataSourceSchema_HOUSES(e, w)
		if err != nil {
			return err
		}
	}
	return vm.WriteLong(0, w)
}

type ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper struct {
	Target *[]*UnionNullKsqlDataSourceSchema_HOUSES
}

func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) SetBoolean(v bool) {
	panic("Unsupported operation")
}
func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) SetInt(v int32) {
	panic("Unsupported operation")
}
func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) SetLong(v int64) {
	panic("Unsupported operation")
}
func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) SetFloat(v float32) {
	panic("Unsupported operation")
}
func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) SetDouble(v float64) {
	panic("Unsupported operation")
}
func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) SetBytes(v []byte) {
	panic("Unsupported operation")
}
func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) SetString(v string) {
	panic("Unsupported operation")
}
func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) SetUnionElem(v int64) {
	panic("Unsupported operation")
}
func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) Get(i int) types.Field {
	panic("Unsupported operation")
}
func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) Finalize() {}
func (_ ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) SetDefault(i int) {
	panic("Unsupported operation")
}
func (r ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) HintSize(s int) {
	if len(*r.Target) == 0 {
		*r.Target = make([]*UnionNullKsqlDataSourceSchema_HOUSES, 0, s)
	}
}
func (r ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) NullField(i int) {
	(*r.Target)[len(*r.Target)-1] = nil
}

func (r ArrayUnionNullKsqlDataSourceSchema_HOUSESWrapper) AppendArray() types.Field {
	var v *UnionNullKsqlDataSourceSchema_HOUSES
	v = NewUnionNullKsqlDataSourceSchema_HOUSES()

	*r.Target = append(*r.Target, v)

	return (*r.Target)[len(*r.Target)-1]
}
