// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100375_2.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type CustomerNotificationResponseDto struct {
	CorrelationId *UnionNullString `json:"CorrelationId"`

	Id *UnionNullString `json:"Id"`

	MessageId *UnionNullString `json:"MessageId"`

	Payload *UnionNullArrayUnionNullCustomerNotificationTypeCustomerNotificationDto `json:"Payload"`

	PublishedDateTime string `json:"PublishedDateTime"`
}

const CustomerNotificationResponseDtoAvroCRC64Fingerprint = "\x97c\xc8h\rO\xf3\x98"

func NewCustomerNotificationResponseDto() CustomerNotificationResponseDto {
	r := CustomerNotificationResponseDto{}
	r.CorrelationId = nil
	r.Id = nil
	r.MessageId = nil
	r.Payload = nil
	return r
}

func DeserializeCustomerNotificationResponseDto(r io.Reader) (CustomerNotificationResponseDto, error) {
	t := NewCustomerNotificationResponseDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeCustomerNotificationResponseDtoFromSchema(r io.Reader, schema string) (CustomerNotificationResponseDto, error) {
	t := NewCustomerNotificationResponseDto()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeCustomerNotificationResponseDto(r CustomerNotificationResponseDto, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.CorrelationId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Id, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.MessageId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayUnionNullCustomerNotificationTypeCustomerNotificationDto(r.Payload, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.PublishedDateTime, w)
	if err != nil {
		return err
	}
	return err
}

func (r CustomerNotificationResponseDto) Serialize(w io.Writer) error {
	return writeCustomerNotificationResponseDto(r, w)
}

func (r CustomerNotificationResponseDto) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"CorrelationId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MessageId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Payload\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"MessageText\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NotificationData\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"CancelMessage\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NotificationID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NotificationType\",\"type\":[\"null\",\"string\"]}],\"name\":\"NotificationDataDto\",\"type\":\"record\"}]},{\"name\":\"OutageEnd\",\"type\":\"string\"},{\"name\":\"OutageEndSpecified\",\"type\":\"boolean\"},{\"name\":\"OutageStart\",\"type\":\"string\"},{\"name\":\"OutageStartSpecified\",\"type\":\"boolean\"},{\"default\":null,\"name\":\"RecordNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TechnicalAsset\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"B1\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"B2\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"B3\",\"type\":[\"null\",\"string\"]}],\"name\":\"TechnicalAssetDto\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"CustomerNotificationTypeCustomerNotificationDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"name\":\"PublishedDateTime\",\"type\":\"string\"}],\"name\":\"CustomerNotificationSafConsumer.CustomerNotificationResponseDto\",\"type\":\"record\"}"
}

func (r CustomerNotificationResponseDto) SchemaName() string {
	return "CustomerNotificationSafConsumer.CustomerNotificationResponseDto"
}

func (_ CustomerNotificationResponseDto) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ CustomerNotificationResponseDto) SetInt(v int32)       { panic("Unsupported operation") }
func (_ CustomerNotificationResponseDto) SetLong(v int64)      { panic("Unsupported operation") }
func (_ CustomerNotificationResponseDto) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ CustomerNotificationResponseDto) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ CustomerNotificationResponseDto) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ CustomerNotificationResponseDto) SetString(v string)   { panic("Unsupported operation") }
func (_ CustomerNotificationResponseDto) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *CustomerNotificationResponseDto) Get(i int) types.Field {
	switch i {
	case 0:
		r.CorrelationId = NewUnionNullString()

		return r.CorrelationId
	case 1:
		r.Id = NewUnionNullString()

		return r.Id
	case 2:
		r.MessageId = NewUnionNullString()

		return r.MessageId
	case 3:
		r.Payload = NewUnionNullArrayUnionNullCustomerNotificationTypeCustomerNotificationDto()

		return r.Payload
	case 4:
		w := types.String{Target: &r.PublishedDateTime}

		return w

	}
	panic("Unknown field index")
}

func (r *CustomerNotificationResponseDto) SetDefault(i int) {
	switch i {
	case 0:
		r.CorrelationId = nil
		return
	case 1:
		r.Id = nil
		return
	case 2:
		r.MessageId = nil
		return
	case 3:
		r.Payload = nil
		return
	}
	panic("Unknown field index")
}

func (r *CustomerNotificationResponseDto) NullField(i int) {
	switch i {
	case 0:
		r.CorrelationId = nil
		return
	case 1:
		r.Id = nil
		return
	case 2:
		r.MessageId = nil
		return
	case 3:
		r.Payload = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ CustomerNotificationResponseDto) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ CustomerNotificationResponseDto) AppendArray() types.Field { panic("Unsupported operation") }
func (_ CustomerNotificationResponseDto) HintSize(int)             { panic("Unsupported operation") }
func (_ CustomerNotificationResponseDto) Finalize()                {}

func (_ CustomerNotificationResponseDto) AvroCRC64Fingerprint() []byte {
	return []byte(CustomerNotificationResponseDtoAvroCRC64Fingerprint)
}

func (r CustomerNotificationResponseDto) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["CorrelationId"], err = json.Marshal(r.CorrelationId)
	if err != nil {
		return nil, err
	}
	output["Id"], err = json.Marshal(r.Id)
	if err != nil {
		return nil, err
	}
	output["MessageId"], err = json.Marshal(r.MessageId)
	if err != nil {
		return nil, err
	}
	output["Payload"], err = json.Marshal(r.Payload)
	if err != nil {
		return nil, err
	}
	output["PublishedDateTime"], err = json.Marshal(r.PublishedDateTime)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *CustomerNotificationResponseDto) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["CorrelationId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CorrelationId); err != nil {
			return err
		}
	} else {
		r.CorrelationId = NewUnionNullString()

		r.CorrelationId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Id"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Id); err != nil {
			return err
		}
	} else {
		r.Id = NewUnionNullString()

		r.Id = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["MessageId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MessageId); err != nil {
			return err
		}
	} else {
		r.MessageId = NewUnionNullString()

		r.MessageId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Payload"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Payload); err != nil {
			return err
		}
	} else {
		r.Payload = NewUnionNullArrayUnionNullCustomerNotificationTypeCustomerNotificationDto()

		r.Payload = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["PublishedDateTime"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PublishedDateTime); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for PublishedDateTime")
	}
	return nil
}
