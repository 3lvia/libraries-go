// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100487_5.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullArrayUnionNullWorkAssetDtoTypeEnum int

const (
	UnionNullArrayUnionNullWorkAssetDtoTypeEnumArrayUnionNullWorkAssetDto UnionNullArrayUnionNullWorkAssetDtoTypeEnum = 1
)

type UnionNullArrayUnionNullWorkAssetDto struct {
	Null                       *types.NullVal
	ArrayUnionNullWorkAssetDto []*UnionNullWorkAssetDto
	UnionType                  UnionNullArrayUnionNullWorkAssetDtoTypeEnum
}

func writeUnionNullArrayUnionNullWorkAssetDto(r *UnionNullArrayUnionNullWorkAssetDto, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullArrayUnionNullWorkAssetDtoTypeEnumArrayUnionNullWorkAssetDto:
		return writeArrayUnionNullWorkAssetDto(r.ArrayUnionNullWorkAssetDto, w)
	}
	return fmt.Errorf("invalid value for *UnionNullArrayUnionNullWorkAssetDto")
}

func NewUnionNullArrayUnionNullWorkAssetDto() *UnionNullArrayUnionNullWorkAssetDto {
	return &UnionNullArrayUnionNullWorkAssetDto{}
}

func (r *UnionNullArrayUnionNullWorkAssetDto) Serialize(w io.Writer) error {
	return writeUnionNullArrayUnionNullWorkAssetDto(r, w)
}

func DeserializeUnionNullArrayUnionNullWorkAssetDto(r io.Reader) (*UnionNullArrayUnionNullWorkAssetDto, error) {
	t := NewUnionNullArrayUnionNullWorkAssetDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullArrayUnionNullWorkAssetDtoFromSchema(r io.Reader, schema string) (*UnionNullArrayUnionNullWorkAssetDto, error) {
	t := NewUnionNullArrayUnionNullWorkAssetDto()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullArrayUnionNullWorkAssetDto) Schema() string {
	return "[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Location\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"CoordinateSystem\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"crsUrn\",\"type\":[\"null\",\"string\"]}],\"name\":\"WorkLocationCoordinateSystemDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"PositionPoints\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"sequenceNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"xPosition\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"yPosition\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"zPosition\",\"type\":[\"null\",\"string\"]}],\"name\":\"WorkLocationPositionPointsDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"mRID\",\"type\":[\"null\",\"string\"]}],\"name\":\"WorkLocationDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Names\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"name\",\"type\":[\"null\",\"string\"]}],\"name\":\"AssetNamesDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"critical\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"lastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"mRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"status\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"dateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"value\",\"type\":[\"null\",\"string\"]}],\"name\":\"StatusDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"type\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"usageKind\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"utcNumber\",\"type\":[\"null\",\"string\"]}],\"name\":\"WorkAssetDto\",\"type\":\"record\"}],\"type\":\"array\"}]"
}

func (_ *UnionNullArrayUnionNullWorkAssetDto) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullWorkAssetDto) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullWorkAssetDto) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullWorkAssetDto) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullWorkAssetDto) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullWorkAssetDto) SetString(v string)  { panic("Unsupported operation") }

func (r *UnionNullArrayUnionNullWorkAssetDto) SetLong(v int64) {

	r.UnionType = (UnionNullArrayUnionNullWorkAssetDtoTypeEnum)(v)
}

func (r *UnionNullArrayUnionNullWorkAssetDto) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.ArrayUnionNullWorkAssetDto = make([]*UnionNullWorkAssetDto, 0)
		return &ArrayUnionNullWorkAssetDtoWrapper{Target: (&r.ArrayUnionNullWorkAssetDto)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullArrayUnionNullWorkAssetDto) NullField(i int)  { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullWorkAssetDto) HintSize(i int)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullWorkAssetDto) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullWorkAssetDto) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullArrayUnionNullWorkAssetDto) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullArrayUnionNullWorkAssetDto) Finalize() {}

func (r *UnionNullArrayUnionNullWorkAssetDto) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullArrayUnionNullWorkAssetDtoTypeEnumArrayUnionNullWorkAssetDto:
		return json.Marshal(map[string]interface{}{"array": r.ArrayUnionNullWorkAssetDto})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullArrayUnionNullWorkAssetDto")
}

func (r *UnionNullArrayUnionNullWorkAssetDto) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["array"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.ArrayUnionNullWorkAssetDto)
	}
	return fmt.Errorf("invalid value for *UnionNullArrayUnionNullWorkAssetDto")
}
