// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100487_5.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullWorkLocationCoordinateSystemDtoTypeEnum int

const (
	UnionNullWorkLocationCoordinateSystemDtoTypeEnumWorkLocationCoordinateSystemDto UnionNullWorkLocationCoordinateSystemDtoTypeEnum = 1
)

type UnionNullWorkLocationCoordinateSystemDto struct {
	Null                            *types.NullVal
	WorkLocationCoordinateSystemDto WorkLocationCoordinateSystemDto
	UnionType                       UnionNullWorkLocationCoordinateSystemDtoTypeEnum
}

func writeUnionNullWorkLocationCoordinateSystemDto(r *UnionNullWorkLocationCoordinateSystemDto, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullWorkLocationCoordinateSystemDtoTypeEnumWorkLocationCoordinateSystemDto:
		return writeWorkLocationCoordinateSystemDto(r.WorkLocationCoordinateSystemDto, w)
	}
	return fmt.Errorf("invalid value for *UnionNullWorkLocationCoordinateSystemDto")
}

func NewUnionNullWorkLocationCoordinateSystemDto() *UnionNullWorkLocationCoordinateSystemDto {
	return &UnionNullWorkLocationCoordinateSystemDto{}
}

func (r *UnionNullWorkLocationCoordinateSystemDto) Serialize(w io.Writer) error {
	return writeUnionNullWorkLocationCoordinateSystemDto(r, w)
}

func DeserializeUnionNullWorkLocationCoordinateSystemDto(r io.Reader) (*UnionNullWorkLocationCoordinateSystemDto, error) {
	t := NewUnionNullWorkLocationCoordinateSystemDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullWorkLocationCoordinateSystemDtoFromSchema(r io.Reader, schema string) (*UnionNullWorkLocationCoordinateSystemDto, error) {
	t := NewUnionNullWorkLocationCoordinateSystemDto()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullWorkLocationCoordinateSystemDto) Schema() string {
	return "[\"null\",{\"fields\":[{\"default\":null,\"name\":\"crsUrn\",\"type\":[\"null\",\"string\"]}],\"name\":\"WorkLocationCoordinateSystemDto\",\"type\":\"record\"}]"
}

func (_ *UnionNullWorkLocationCoordinateSystemDto) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationCoordinateSystemDto) SetInt(v int32)    { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationCoordinateSystemDto) SetFloat(v float32) {
	panic("Unsupported operation")
}
func (_ *UnionNullWorkLocationCoordinateSystemDto) SetDouble(v float64) {
	panic("Unsupported operation")
}
func (_ *UnionNullWorkLocationCoordinateSystemDto) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationCoordinateSystemDto) SetString(v string) {
	panic("Unsupported operation")
}

func (r *UnionNullWorkLocationCoordinateSystemDto) SetLong(v int64) {

	r.UnionType = (UnionNullWorkLocationCoordinateSystemDtoTypeEnum)(v)
}

func (r *UnionNullWorkLocationCoordinateSystemDto) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.WorkLocationCoordinateSystemDto = NewWorkLocationCoordinateSystemDto()
		return &types.Record{Target: (&r.WorkLocationCoordinateSystemDto)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullWorkLocationCoordinateSystemDto) NullField(i int)  { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationCoordinateSystemDto) HintSize(i int)   { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationCoordinateSystemDto) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationCoordinateSystemDto) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullWorkLocationCoordinateSystemDto) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullWorkLocationCoordinateSystemDto) Finalize() {}

func (r *UnionNullWorkLocationCoordinateSystemDto) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullWorkLocationCoordinateSystemDtoTypeEnumWorkLocationCoordinateSystemDto:
		return json.Marshal(map[string]interface{}{"SesamResponseServices.SesamDomainObjects.WorkLocationCoordinateSystemDto": r.WorkLocationCoordinateSystemDto})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullWorkLocationCoordinateSystemDto")
}

func (r *UnionNullWorkLocationCoordinateSystemDto) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["SesamResponseServices.SesamDomainObjects.WorkLocationCoordinateSystemDto"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.WorkLocationCoordinateSystemDto)
	}
	return fmt.Errorf("invalid value for *UnionNullWorkLocationCoordinateSystemDto")
}
