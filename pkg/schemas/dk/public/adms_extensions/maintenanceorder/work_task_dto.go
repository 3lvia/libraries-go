// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100487_5.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type WorkTaskDto struct {
	Assets *UnionNullArrayUnionNullAssetDto `json:"Assets"`

	Crews *UnionNullArrayUnionNullCrewDto `json:"Crews"`

	IFSStatus *UnionNullString `json:"IFSStatus"`

	Names *UnionNullArrayUnionNullWorkTaskNamesDto `json:"Names"`

	TaskIFSID *UnionNullString `json:"TaskIFSID"`

	TimeSchedules *UnionNullArrayUnionNullWorkTimeScheduleDto `json:"TimeSchedules"`

	CreationDateTime *UnionNullString `json:"creationDateTime"`

	CreationDateTimeSpecified *UnionNullBool `json:"creationDateTimeSpecified"`

	CrewATA *UnionNullString `json:"crewATA"`

	CrewATASpecified *UnionNullBool `json:"crewATASpecified"`

	CrewATC *UnionNullString `json:"crewATC"`

	CrewATCSpecified *UnionNullBool `json:"crewATCSpecified"`

	CrewETA *UnionNullString `json:"crewETA"`

	CrewETASpecified *UnionNullBool `json:"crewETASpecified"`

	CrewETC *UnionNullString `json:"crewETC"`

	CrewETCSpecified *UnionNullBool `json:"crewETCSpecified"`

	CrewType *UnionNullString `json:"crewType"`

	CrewTypeSpecified *UnionNullBool `json:"crewTypeSpecified"`

	DeviceType *UnionNullString `json:"deviceType"`

	DeviceTypeSpecified *UnionNullBool `json:"deviceTypeSpecified"`

	Editable *UnionNullString `json:"editable"`

	Instruction *UnionNullString `json:"instruction"`

	LastModifiedDateTime *UnionNullString `json:"lastModifiedDateTime"`

	LastModifiedDateTimeSpecified *UnionNullBool `json:"lastModifiedDateTimeSpecified"`

	MRID *UnionNullString `json:"mRID"`

	RepairSequence *UnionNullString `json:"repairSequence"`

	SequenceNumber *UnionNullString `json:"sequenceNumber"`

	StatusKind *UnionNullString `json:"statusKind"`

	Subject *UnionNullString `json:"subject"`

	TaskKind *UnionNullString `json:"taskKind"`
}

const WorkTaskDtoAvroCRC64Fingerprint = "P\x05)\xd7Nj\xaaT"

func NewWorkTaskDto() WorkTaskDto {
	r := WorkTaskDto{}
	r.Assets = nil
	r.Crews = nil
	r.IFSStatus = nil
	r.Names = nil
	r.TaskIFSID = nil
	r.TimeSchedules = nil
	r.CreationDateTime = nil
	r.CreationDateTimeSpecified = nil
	r.CrewATA = nil
	r.CrewATASpecified = nil
	r.CrewATC = nil
	r.CrewATCSpecified = nil
	r.CrewETA = nil
	r.CrewETASpecified = nil
	r.CrewETC = nil
	r.CrewETCSpecified = nil
	r.CrewType = nil
	r.CrewTypeSpecified = nil
	r.DeviceType = nil
	r.DeviceTypeSpecified = nil
	r.Editable = nil
	r.Instruction = nil
	r.LastModifiedDateTime = nil
	r.LastModifiedDateTimeSpecified = nil
	r.MRID = nil
	r.RepairSequence = nil
	r.SequenceNumber = nil
	r.StatusKind = nil
	r.Subject = nil
	r.TaskKind = nil
	return r
}

func DeserializeWorkTaskDto(r io.Reader) (WorkTaskDto, error) {
	t := NewWorkTaskDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeWorkTaskDtoFromSchema(r io.Reader, schema string) (WorkTaskDto, error) {
	t := NewWorkTaskDto()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeWorkTaskDto(r WorkTaskDto, w io.Writer) error {
	var err error
	err = writeUnionNullArrayUnionNullAssetDto(r.Assets, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayUnionNullCrewDto(r.Crews, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.IFSStatus, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayUnionNullWorkTaskNamesDto(r.Names, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TaskIFSID, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayUnionNullWorkTimeScheduleDto(r.TimeSchedules, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CreationDateTime, w)
	if err != nil {
		return err
	}
	err = writeUnionNullBool(r.CreationDateTimeSpecified, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CrewATA, w)
	if err != nil {
		return err
	}
	err = writeUnionNullBool(r.CrewATASpecified, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CrewATC, w)
	if err != nil {
		return err
	}
	err = writeUnionNullBool(r.CrewATCSpecified, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CrewETA, w)
	if err != nil {
		return err
	}
	err = writeUnionNullBool(r.CrewETASpecified, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CrewETC, w)
	if err != nil {
		return err
	}
	err = writeUnionNullBool(r.CrewETCSpecified, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CrewType, w)
	if err != nil {
		return err
	}
	err = writeUnionNullBool(r.CrewTypeSpecified, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DeviceType, w)
	if err != nil {
		return err
	}
	err = writeUnionNullBool(r.DeviceTypeSpecified, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Editable, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Instruction, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.LastModifiedDateTime, w)
	if err != nil {
		return err
	}
	err = writeUnionNullBool(r.LastModifiedDateTimeSpecified, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.MRID, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RepairSequence, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SequenceNumber, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.StatusKind, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Subject, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TaskKind, w)
	if err != nil {
		return err
	}
	return err
}

func (r WorkTaskDto) Serialize(w io.Writer) error {
	return writeWorkTaskDto(r, w)
}

func (r WorkTaskDto) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"Assets\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Location\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"CoordinateSystem\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"crsUrn\",\"type\":[\"null\",\"string\"]}],\"name\":\"WorkLocationCoordinateSystemDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"PositionPoints\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"sequenceNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"xPosition\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"yPosition\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"zPosition\",\"type\":[\"null\",\"string\"]}],\"name\":\"WorkLocationPositionPointsDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"mRID\",\"type\":[\"null\",\"string\"]}],\"name\":\"WorkLocationDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Names\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"name\",\"type\":[\"null\",\"string\"]}],\"name\":\"AssetNamesDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"critical\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"lastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"mRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"status\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"dateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"value\",\"type\":[\"null\",\"string\"]}],\"name\":\"StatusDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"type\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"utcNumber\",\"type\":[\"null\",\"string\"]}],\"name\":\"AssetDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"Crews\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"CrewMembers\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Person\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"electronicAddress\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"email1\",\"type\":[\"null\",\"string\"]}],\"name\":\"ElectronicAddressDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"employeeId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"firstName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"lastName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"mRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"mobilePhone\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"localNumber\",\"type\":[\"null\",\"string\"]}],\"name\":\"TelephoneNumberDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"prefix\",\"type\":[\"null\",\"string\"]}],\"name\":\"CrewMemberPersonDto\",\"type\":\"record\"}]}],\"name\":\"CrewMemberDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"Names\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"NameType\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"NameTypeAuthority\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"name\",\"type\":[\"null\",\"string\"]}],\"name\":\"CrewNamesNameTypeNameTypeAuthorityDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"name\",\"type\":[\"null\",\"string\"]}],\"name\":\"CrewNamesNameTypeDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"name\",\"type\":[\"null\",\"string\"]}],\"name\":\"CrewNamesDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"WorkAssets\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Location\",\"type\":[\"null\",\"SesamResponseServices.SesamDomainObjects.WorkLocationDto\"]},{\"default\":null,\"name\":\"Names\",\"type\":[\"null\",{\"items\":[\"null\",\"SesamResponseServices.SesamDomainObjects.AssetNamesDto\"],\"type\":\"array\"}]},{\"default\":null,\"name\":\"critical\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"lastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"mRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"status\",\"type\":[\"null\",\"SesamResponseServices.SesamDomainObjects.StatusDto\"]},{\"default\":null,\"name\":\"type\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"usageKind\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"utcNumber\",\"type\":[\"null\",\"string\"]}],\"name\":\"WorkAssetDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"lastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"mRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"status\",\"type\":[\"null\",\"SesamResponseServices.SesamDomainObjects.StatusDto\"]}],\"name\":\"CrewDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"IFSStatus\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Names\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"name\",\"type\":[\"null\",\"string\"]}],\"name\":\"WorkTaskNamesDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"TaskIFSID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TimeSchedules\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"kind\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"scheduleInterval\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"end\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"endSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"start\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"startSpecified\",\"type\":[\"null\",\"boolean\"]}],\"name\":\"WorkTimeScheduleScheduleIntervalDto\",\"type\":\"record\"}]}],\"name\":\"WorkTimeScheduleDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"creationDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"creationDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"crewATA\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"crewATASpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"crewATC\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"crewATCSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"crewETA\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"crewETASpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"crewETC\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"crewETCSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"crewType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"crewTypeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"deviceType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"deviceTypeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"editable\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"instruction\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"mRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"repairSequence\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"sequenceNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"statusKind\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"subject\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"taskKind\",\"type\":[\"null\",\"string\"]}],\"name\":\"SesamResponseServices.SesamDomainObjects.WorkTaskDto\",\"type\":\"record\"}"
}

func (r WorkTaskDto) SchemaName() string {
	return "SesamResponseServices.SesamDomainObjects.WorkTaskDto"
}

func (_ WorkTaskDto) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ WorkTaskDto) SetInt(v int32)       { panic("Unsupported operation") }
func (_ WorkTaskDto) SetLong(v int64)      { panic("Unsupported operation") }
func (_ WorkTaskDto) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ WorkTaskDto) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ WorkTaskDto) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ WorkTaskDto) SetString(v string)   { panic("Unsupported operation") }
func (_ WorkTaskDto) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *WorkTaskDto) Get(i int) types.Field {
	switch i {
	case 0:
		r.Assets = NewUnionNullArrayUnionNullAssetDto()

		return r.Assets
	case 1:
		r.Crews = NewUnionNullArrayUnionNullCrewDto()

		return r.Crews
	case 2:
		r.IFSStatus = NewUnionNullString()

		return r.IFSStatus
	case 3:
		r.Names = NewUnionNullArrayUnionNullWorkTaskNamesDto()

		return r.Names
	case 4:
		r.TaskIFSID = NewUnionNullString()

		return r.TaskIFSID
	case 5:
		r.TimeSchedules = NewUnionNullArrayUnionNullWorkTimeScheduleDto()

		return r.TimeSchedules
	case 6:
		r.CreationDateTime = NewUnionNullString()

		return r.CreationDateTime
	case 7:
		r.CreationDateTimeSpecified = NewUnionNullBool()

		return r.CreationDateTimeSpecified
	case 8:
		r.CrewATA = NewUnionNullString()

		return r.CrewATA
	case 9:
		r.CrewATASpecified = NewUnionNullBool()

		return r.CrewATASpecified
	case 10:
		r.CrewATC = NewUnionNullString()

		return r.CrewATC
	case 11:
		r.CrewATCSpecified = NewUnionNullBool()

		return r.CrewATCSpecified
	case 12:
		r.CrewETA = NewUnionNullString()

		return r.CrewETA
	case 13:
		r.CrewETASpecified = NewUnionNullBool()

		return r.CrewETASpecified
	case 14:
		r.CrewETC = NewUnionNullString()

		return r.CrewETC
	case 15:
		r.CrewETCSpecified = NewUnionNullBool()

		return r.CrewETCSpecified
	case 16:
		r.CrewType = NewUnionNullString()

		return r.CrewType
	case 17:
		r.CrewTypeSpecified = NewUnionNullBool()

		return r.CrewTypeSpecified
	case 18:
		r.DeviceType = NewUnionNullString()

		return r.DeviceType
	case 19:
		r.DeviceTypeSpecified = NewUnionNullBool()

		return r.DeviceTypeSpecified
	case 20:
		r.Editable = NewUnionNullString()

		return r.Editable
	case 21:
		r.Instruction = NewUnionNullString()

		return r.Instruction
	case 22:
		r.LastModifiedDateTime = NewUnionNullString()

		return r.LastModifiedDateTime
	case 23:
		r.LastModifiedDateTimeSpecified = NewUnionNullBool()

		return r.LastModifiedDateTimeSpecified
	case 24:
		r.MRID = NewUnionNullString()

		return r.MRID
	case 25:
		r.RepairSequence = NewUnionNullString()

		return r.RepairSequence
	case 26:
		r.SequenceNumber = NewUnionNullString()

		return r.SequenceNumber
	case 27:
		r.StatusKind = NewUnionNullString()

		return r.StatusKind
	case 28:
		r.Subject = NewUnionNullString()

		return r.Subject
	case 29:
		r.TaskKind = NewUnionNullString()

		return r.TaskKind
	}
	panic("Unknown field index")
}

func (r *WorkTaskDto) SetDefault(i int) {
	switch i {
	case 0:
		r.Assets = nil
		return
	case 1:
		r.Crews = nil
		return
	case 2:
		r.IFSStatus = nil
		return
	case 3:
		r.Names = nil
		return
	case 4:
		r.TaskIFSID = nil
		return
	case 5:
		r.TimeSchedules = nil
		return
	case 6:
		r.CreationDateTime = nil
		return
	case 7:
		r.CreationDateTimeSpecified = nil
		return
	case 8:
		r.CrewATA = nil
		return
	case 9:
		r.CrewATASpecified = nil
		return
	case 10:
		r.CrewATC = nil
		return
	case 11:
		r.CrewATCSpecified = nil
		return
	case 12:
		r.CrewETA = nil
		return
	case 13:
		r.CrewETASpecified = nil
		return
	case 14:
		r.CrewETC = nil
		return
	case 15:
		r.CrewETCSpecified = nil
		return
	case 16:
		r.CrewType = nil
		return
	case 17:
		r.CrewTypeSpecified = nil
		return
	case 18:
		r.DeviceType = nil
		return
	case 19:
		r.DeviceTypeSpecified = nil
		return
	case 20:
		r.Editable = nil
		return
	case 21:
		r.Instruction = nil
		return
	case 22:
		r.LastModifiedDateTime = nil
		return
	case 23:
		r.LastModifiedDateTimeSpecified = nil
		return
	case 24:
		r.MRID = nil
		return
	case 25:
		r.RepairSequence = nil
		return
	case 26:
		r.SequenceNumber = nil
		return
	case 27:
		r.StatusKind = nil
		return
	case 28:
		r.Subject = nil
		return
	case 29:
		r.TaskKind = nil
		return
	}
	panic("Unknown field index")
}

func (r *WorkTaskDto) NullField(i int) {
	switch i {
	case 0:
		r.Assets = nil
		return
	case 1:
		r.Crews = nil
		return
	case 2:
		r.IFSStatus = nil
		return
	case 3:
		r.Names = nil
		return
	case 4:
		r.TaskIFSID = nil
		return
	case 5:
		r.TimeSchedules = nil
		return
	case 6:
		r.CreationDateTime = nil
		return
	case 7:
		r.CreationDateTimeSpecified = nil
		return
	case 8:
		r.CrewATA = nil
		return
	case 9:
		r.CrewATASpecified = nil
		return
	case 10:
		r.CrewATC = nil
		return
	case 11:
		r.CrewATCSpecified = nil
		return
	case 12:
		r.CrewETA = nil
		return
	case 13:
		r.CrewETASpecified = nil
		return
	case 14:
		r.CrewETC = nil
		return
	case 15:
		r.CrewETCSpecified = nil
		return
	case 16:
		r.CrewType = nil
		return
	case 17:
		r.CrewTypeSpecified = nil
		return
	case 18:
		r.DeviceType = nil
		return
	case 19:
		r.DeviceTypeSpecified = nil
		return
	case 20:
		r.Editable = nil
		return
	case 21:
		r.Instruction = nil
		return
	case 22:
		r.LastModifiedDateTime = nil
		return
	case 23:
		r.LastModifiedDateTimeSpecified = nil
		return
	case 24:
		r.MRID = nil
		return
	case 25:
		r.RepairSequence = nil
		return
	case 26:
		r.SequenceNumber = nil
		return
	case 27:
		r.StatusKind = nil
		return
	case 28:
		r.Subject = nil
		return
	case 29:
		r.TaskKind = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ WorkTaskDto) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ WorkTaskDto) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ WorkTaskDto) HintSize(int)                     { panic("Unsupported operation") }
func (_ WorkTaskDto) Finalize()                        {}

func (_ WorkTaskDto) AvroCRC64Fingerprint() []byte {
	return []byte(WorkTaskDtoAvroCRC64Fingerprint)
}

func (r WorkTaskDto) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Assets"], err = json.Marshal(r.Assets)
	if err != nil {
		return nil, err
	}
	output["Crews"], err = json.Marshal(r.Crews)
	if err != nil {
		return nil, err
	}
	output["IFSStatus"], err = json.Marshal(r.IFSStatus)
	if err != nil {
		return nil, err
	}
	output["Names"], err = json.Marshal(r.Names)
	if err != nil {
		return nil, err
	}
	output["TaskIFSID"], err = json.Marshal(r.TaskIFSID)
	if err != nil {
		return nil, err
	}
	output["TimeSchedules"], err = json.Marshal(r.TimeSchedules)
	if err != nil {
		return nil, err
	}
	output["creationDateTime"], err = json.Marshal(r.CreationDateTime)
	if err != nil {
		return nil, err
	}
	output["creationDateTimeSpecified"], err = json.Marshal(r.CreationDateTimeSpecified)
	if err != nil {
		return nil, err
	}
	output["crewATA"], err = json.Marshal(r.CrewATA)
	if err != nil {
		return nil, err
	}
	output["crewATASpecified"], err = json.Marshal(r.CrewATASpecified)
	if err != nil {
		return nil, err
	}
	output["crewATC"], err = json.Marshal(r.CrewATC)
	if err != nil {
		return nil, err
	}
	output["crewATCSpecified"], err = json.Marshal(r.CrewATCSpecified)
	if err != nil {
		return nil, err
	}
	output["crewETA"], err = json.Marshal(r.CrewETA)
	if err != nil {
		return nil, err
	}
	output["crewETASpecified"], err = json.Marshal(r.CrewETASpecified)
	if err != nil {
		return nil, err
	}
	output["crewETC"], err = json.Marshal(r.CrewETC)
	if err != nil {
		return nil, err
	}
	output["crewETCSpecified"], err = json.Marshal(r.CrewETCSpecified)
	if err != nil {
		return nil, err
	}
	output["crewType"], err = json.Marshal(r.CrewType)
	if err != nil {
		return nil, err
	}
	output["crewTypeSpecified"], err = json.Marshal(r.CrewTypeSpecified)
	if err != nil {
		return nil, err
	}
	output["deviceType"], err = json.Marshal(r.DeviceType)
	if err != nil {
		return nil, err
	}
	output["deviceTypeSpecified"], err = json.Marshal(r.DeviceTypeSpecified)
	if err != nil {
		return nil, err
	}
	output["editable"], err = json.Marshal(r.Editable)
	if err != nil {
		return nil, err
	}
	output["instruction"], err = json.Marshal(r.Instruction)
	if err != nil {
		return nil, err
	}
	output["lastModifiedDateTime"], err = json.Marshal(r.LastModifiedDateTime)
	if err != nil {
		return nil, err
	}
	output["lastModifiedDateTimeSpecified"], err = json.Marshal(r.LastModifiedDateTimeSpecified)
	if err != nil {
		return nil, err
	}
	output["mRID"], err = json.Marshal(r.MRID)
	if err != nil {
		return nil, err
	}
	output["repairSequence"], err = json.Marshal(r.RepairSequence)
	if err != nil {
		return nil, err
	}
	output["sequenceNumber"], err = json.Marshal(r.SequenceNumber)
	if err != nil {
		return nil, err
	}
	output["statusKind"], err = json.Marshal(r.StatusKind)
	if err != nil {
		return nil, err
	}
	output["subject"], err = json.Marshal(r.Subject)
	if err != nil {
		return nil, err
	}
	output["taskKind"], err = json.Marshal(r.TaskKind)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *WorkTaskDto) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Assets"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Assets); err != nil {
			return err
		}
	} else {
		r.Assets = NewUnionNullArrayUnionNullAssetDto()

		r.Assets = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Crews"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Crews); err != nil {
			return err
		}
	} else {
		r.Crews = NewUnionNullArrayUnionNullCrewDto()

		r.Crews = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["IFSStatus"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IFSStatus); err != nil {
			return err
		}
	} else {
		r.IFSStatus = NewUnionNullString()

		r.IFSStatus = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Names"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Names); err != nil {
			return err
		}
	} else {
		r.Names = NewUnionNullArrayUnionNullWorkTaskNamesDto()

		r.Names = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TaskIFSID"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TaskIFSID); err != nil {
			return err
		}
	} else {
		r.TaskIFSID = NewUnionNullString()

		r.TaskIFSID = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TimeSchedules"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TimeSchedules); err != nil {
			return err
		}
	} else {
		r.TimeSchedules = NewUnionNullArrayUnionNullWorkTimeScheduleDto()

		r.TimeSchedules = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["creationDateTime"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CreationDateTime); err != nil {
			return err
		}
	} else {
		r.CreationDateTime = NewUnionNullString()

		r.CreationDateTime = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["creationDateTimeSpecified"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CreationDateTimeSpecified); err != nil {
			return err
		}
	} else {
		r.CreationDateTimeSpecified = NewUnionNullBool()

		r.CreationDateTimeSpecified = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["crewATA"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CrewATA); err != nil {
			return err
		}
	} else {
		r.CrewATA = NewUnionNullString()

		r.CrewATA = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["crewATASpecified"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CrewATASpecified); err != nil {
			return err
		}
	} else {
		r.CrewATASpecified = NewUnionNullBool()

		r.CrewATASpecified = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["crewATC"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CrewATC); err != nil {
			return err
		}
	} else {
		r.CrewATC = NewUnionNullString()

		r.CrewATC = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["crewATCSpecified"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CrewATCSpecified); err != nil {
			return err
		}
	} else {
		r.CrewATCSpecified = NewUnionNullBool()

		r.CrewATCSpecified = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["crewETA"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CrewETA); err != nil {
			return err
		}
	} else {
		r.CrewETA = NewUnionNullString()

		r.CrewETA = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["crewETASpecified"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CrewETASpecified); err != nil {
			return err
		}
	} else {
		r.CrewETASpecified = NewUnionNullBool()

		r.CrewETASpecified = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["crewETC"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CrewETC); err != nil {
			return err
		}
	} else {
		r.CrewETC = NewUnionNullString()

		r.CrewETC = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["crewETCSpecified"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CrewETCSpecified); err != nil {
			return err
		}
	} else {
		r.CrewETCSpecified = NewUnionNullBool()

		r.CrewETCSpecified = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["crewType"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CrewType); err != nil {
			return err
		}
	} else {
		r.CrewType = NewUnionNullString()

		r.CrewType = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["crewTypeSpecified"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CrewTypeSpecified); err != nil {
			return err
		}
	} else {
		r.CrewTypeSpecified = NewUnionNullBool()

		r.CrewTypeSpecified = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["deviceType"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DeviceType); err != nil {
			return err
		}
	} else {
		r.DeviceType = NewUnionNullString()

		r.DeviceType = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["deviceTypeSpecified"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DeviceTypeSpecified); err != nil {
			return err
		}
	} else {
		r.DeviceTypeSpecified = NewUnionNullBool()

		r.DeviceTypeSpecified = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["editable"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Editable); err != nil {
			return err
		}
	} else {
		r.Editable = NewUnionNullString()

		r.Editable = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["instruction"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Instruction); err != nil {
			return err
		}
	} else {
		r.Instruction = NewUnionNullString()

		r.Instruction = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["lastModifiedDateTime"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.LastModifiedDateTime); err != nil {
			return err
		}
	} else {
		r.LastModifiedDateTime = NewUnionNullString()

		r.LastModifiedDateTime = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["lastModifiedDateTimeSpecified"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.LastModifiedDateTimeSpecified); err != nil {
			return err
		}
	} else {
		r.LastModifiedDateTimeSpecified = NewUnionNullBool()

		r.LastModifiedDateTimeSpecified = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["mRID"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MRID); err != nil {
			return err
		}
	} else {
		r.MRID = NewUnionNullString()

		r.MRID = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["repairSequence"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RepairSequence); err != nil {
			return err
		}
	} else {
		r.RepairSequence = NewUnionNullString()

		r.RepairSequence = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["sequenceNumber"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SequenceNumber); err != nil {
			return err
		}
	} else {
		r.SequenceNumber = NewUnionNullString()

		r.SequenceNumber = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["statusKind"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.StatusKind); err != nil {
			return err
		}
	} else {
		r.StatusKind = NewUnionNullString()

		r.StatusKind = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["subject"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Subject); err != nil {
			return err
		}
	} else {
		r.Subject = NewUnionNullString()

		r.Subject = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["taskKind"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TaskKind); err != nil {
			return err
		}
	} else {
		r.TaskKind = NewUnionNullString()

		r.TaskKind = nil
	}
	return nil
}
