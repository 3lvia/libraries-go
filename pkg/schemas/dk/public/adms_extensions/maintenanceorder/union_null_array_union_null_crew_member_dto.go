// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100487_5.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullArrayUnionNullCrewMemberDtoTypeEnum int

const (
	UnionNullArrayUnionNullCrewMemberDtoTypeEnumArrayUnionNullCrewMemberDto UnionNullArrayUnionNullCrewMemberDtoTypeEnum = 1
)

type UnionNullArrayUnionNullCrewMemberDto struct {
	Null                        *types.NullVal
	ArrayUnionNullCrewMemberDto []*UnionNullCrewMemberDto
	UnionType                   UnionNullArrayUnionNullCrewMemberDtoTypeEnum
}

func writeUnionNullArrayUnionNullCrewMemberDto(r *UnionNullArrayUnionNullCrewMemberDto, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullArrayUnionNullCrewMemberDtoTypeEnumArrayUnionNullCrewMemberDto:
		return writeArrayUnionNullCrewMemberDto(r.ArrayUnionNullCrewMemberDto, w)
	}
	return fmt.Errorf("invalid value for *UnionNullArrayUnionNullCrewMemberDto")
}

func NewUnionNullArrayUnionNullCrewMemberDto() *UnionNullArrayUnionNullCrewMemberDto {
	return &UnionNullArrayUnionNullCrewMemberDto{}
}

func (r *UnionNullArrayUnionNullCrewMemberDto) Serialize(w io.Writer) error {
	return writeUnionNullArrayUnionNullCrewMemberDto(r, w)
}

func DeserializeUnionNullArrayUnionNullCrewMemberDto(r io.Reader) (*UnionNullArrayUnionNullCrewMemberDto, error) {
	t := NewUnionNullArrayUnionNullCrewMemberDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullArrayUnionNullCrewMemberDtoFromSchema(r io.Reader, schema string) (*UnionNullArrayUnionNullCrewMemberDto, error) {
	t := NewUnionNullArrayUnionNullCrewMemberDto()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullArrayUnionNullCrewMemberDto) Schema() string {
	return "[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Person\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"electronicAddress\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"email1\",\"type\":[\"null\",\"string\"]}],\"name\":\"ElectronicAddressDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"employeeId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"firstName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"lastName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"mRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"mobilePhone\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"localNumber\",\"type\":[\"null\",\"string\"]}],\"name\":\"TelephoneNumberDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"prefix\",\"type\":[\"null\",\"string\"]}],\"name\":\"CrewMemberPersonDto\",\"type\":\"record\"}]}],\"name\":\"CrewMemberDto\",\"type\":\"record\"}],\"type\":\"array\"}]"
}

func (_ *UnionNullArrayUnionNullCrewMemberDto) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullCrewMemberDto) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullCrewMemberDto) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullCrewMemberDto) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullCrewMemberDto) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullCrewMemberDto) SetString(v string)  { panic("Unsupported operation") }

func (r *UnionNullArrayUnionNullCrewMemberDto) SetLong(v int64) {

	r.UnionType = (UnionNullArrayUnionNullCrewMemberDtoTypeEnum)(v)
}

func (r *UnionNullArrayUnionNullCrewMemberDto) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.ArrayUnionNullCrewMemberDto = make([]*UnionNullCrewMemberDto, 0)
		return &ArrayUnionNullCrewMemberDtoWrapper{Target: (&r.ArrayUnionNullCrewMemberDto)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullArrayUnionNullCrewMemberDto) NullField(i int)  { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullCrewMemberDto) HintSize(i int)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullCrewMemberDto) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullCrewMemberDto) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullArrayUnionNullCrewMemberDto) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullArrayUnionNullCrewMemberDto) Finalize() {}

func (r *UnionNullArrayUnionNullCrewMemberDto) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullArrayUnionNullCrewMemberDtoTypeEnumArrayUnionNullCrewMemberDto:
		return json.Marshal(map[string]interface{}{"array": r.ArrayUnionNullCrewMemberDto})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullArrayUnionNullCrewMemberDto")
}

func (r *UnionNullArrayUnionNullCrewMemberDto) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["array"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.ArrayUnionNullCrewMemberDto)
	}
	return fmt.Errorf("invalid value for *UnionNullArrayUnionNullCrewMemberDto")
}
