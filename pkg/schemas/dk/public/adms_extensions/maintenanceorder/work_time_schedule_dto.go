// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100487_5.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type WorkTimeScheduleDto struct {
	Kind *UnionNullString `json:"kind"`

	ScheduleInterval *UnionNullWorkTimeScheduleScheduleIntervalDto `json:"scheduleInterval"`
}

const WorkTimeScheduleDtoAvroCRC64Fingerprint = "\x91Sz\xb6\x99\x15\xaa\xb2"

func NewWorkTimeScheduleDto() WorkTimeScheduleDto {
	r := WorkTimeScheduleDto{}
	r.Kind = nil
	r.ScheduleInterval = nil
	return r
}

func DeserializeWorkTimeScheduleDto(r io.Reader) (WorkTimeScheduleDto, error) {
	t := NewWorkTimeScheduleDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeWorkTimeScheduleDtoFromSchema(r io.Reader, schema string) (WorkTimeScheduleDto, error) {
	t := NewWorkTimeScheduleDto()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeWorkTimeScheduleDto(r WorkTimeScheduleDto, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.Kind, w)
	if err != nil {
		return err
	}
	err = writeUnionNullWorkTimeScheduleScheduleIntervalDto(r.ScheduleInterval, w)
	if err != nil {
		return err
	}
	return err
}

func (r WorkTimeScheduleDto) Serialize(w io.Writer) error {
	return writeWorkTimeScheduleDto(r, w)
}

func (r WorkTimeScheduleDto) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"kind\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"scheduleInterval\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"end\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"endSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"start\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"startSpecified\",\"type\":[\"null\",\"boolean\"]}],\"name\":\"WorkTimeScheduleScheduleIntervalDto\",\"type\":\"record\"}]}],\"name\":\"SesamResponseServices.SesamDomainObjects.WorkTimeScheduleDto\",\"type\":\"record\"}"
}

func (r WorkTimeScheduleDto) SchemaName() string {
	return "SesamResponseServices.SesamDomainObjects.WorkTimeScheduleDto"
}

func (_ WorkTimeScheduleDto) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ WorkTimeScheduleDto) SetInt(v int32)       { panic("Unsupported operation") }
func (_ WorkTimeScheduleDto) SetLong(v int64)      { panic("Unsupported operation") }
func (_ WorkTimeScheduleDto) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ WorkTimeScheduleDto) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ WorkTimeScheduleDto) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ WorkTimeScheduleDto) SetString(v string)   { panic("Unsupported operation") }
func (_ WorkTimeScheduleDto) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *WorkTimeScheduleDto) Get(i int) types.Field {
	switch i {
	case 0:
		r.Kind = NewUnionNullString()

		return r.Kind
	case 1:
		r.ScheduleInterval = NewUnionNullWorkTimeScheduleScheduleIntervalDto()

		return r.ScheduleInterval
	}
	panic("Unknown field index")
}

func (r *WorkTimeScheduleDto) SetDefault(i int) {
	switch i {
	case 0:
		r.Kind = nil
		return
	case 1:
		r.ScheduleInterval = nil
		return
	}
	panic("Unknown field index")
}

func (r *WorkTimeScheduleDto) NullField(i int) {
	switch i {
	case 0:
		r.Kind = nil
		return
	case 1:
		r.ScheduleInterval = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ WorkTimeScheduleDto) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ WorkTimeScheduleDto) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ WorkTimeScheduleDto) HintSize(int)                     { panic("Unsupported operation") }
func (_ WorkTimeScheduleDto) Finalize()                        {}

func (_ WorkTimeScheduleDto) AvroCRC64Fingerprint() []byte {
	return []byte(WorkTimeScheduleDtoAvroCRC64Fingerprint)
}

func (r WorkTimeScheduleDto) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["kind"], err = json.Marshal(r.Kind)
	if err != nil {
		return nil, err
	}
	output["scheduleInterval"], err = json.Marshal(r.ScheduleInterval)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *WorkTimeScheduleDto) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["kind"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Kind); err != nil {
			return err
		}
	} else {
		r.Kind = NewUnionNullString()

		r.Kind = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["scheduleInterval"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ScheduleInterval); err != nil {
			return err
		}
	} else {
		r.ScheduleInterval = NewUnionNullWorkTimeScheduleScheduleIntervalDto()

		r.ScheduleInterval = nil
	}
	return nil
}
