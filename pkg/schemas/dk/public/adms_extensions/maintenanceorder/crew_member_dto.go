// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100487_5.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type CrewMemberDto struct {
	Person *UnionNullCrewMemberPersonDto `json:"Person"`
}

const CrewMemberDtoAvroCRC64Fingerprint = "5[\xa4Y\xac\xe6\xc1r"

func NewCrewMemberDto() CrewMemberDto {
	r := CrewMemberDto{}
	r.Person = nil
	return r
}

func DeserializeCrewMemberDto(r io.Reader) (CrewMemberDto, error) {
	t := NewCrewMemberDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeCrewMemberDtoFromSchema(r io.Reader, schema string) (CrewMemberDto, error) {
	t := NewCrewMemberDto()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeCrewMemberDto(r CrewMemberDto, w io.Writer) error {
	var err error
	err = writeUnionNullCrewMemberPersonDto(r.Person, w)
	if err != nil {
		return err
	}
	return err
}

func (r CrewMemberDto) Serialize(w io.Writer) error {
	return writeCrewMemberDto(r, w)
}

func (r CrewMemberDto) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"Person\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"electronicAddress\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"email1\",\"type\":[\"null\",\"string\"]}],\"name\":\"ElectronicAddressDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"employeeId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"firstName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"lastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"lastName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"mRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"mobilePhone\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"localNumber\",\"type\":[\"null\",\"string\"]}],\"name\":\"TelephoneNumberDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"prefix\",\"type\":[\"null\",\"string\"]}],\"name\":\"CrewMemberPersonDto\",\"type\":\"record\"}]}],\"name\":\"SesamResponseServices.SesamDomainObjects.CrewMemberDto\",\"type\":\"record\"}"
}

func (r CrewMemberDto) SchemaName() string {
	return "SesamResponseServices.SesamDomainObjects.CrewMemberDto"
}

func (_ CrewMemberDto) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ CrewMemberDto) SetInt(v int32)       { panic("Unsupported operation") }
func (_ CrewMemberDto) SetLong(v int64)      { panic("Unsupported operation") }
func (_ CrewMemberDto) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ CrewMemberDto) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ CrewMemberDto) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ CrewMemberDto) SetString(v string)   { panic("Unsupported operation") }
func (_ CrewMemberDto) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *CrewMemberDto) Get(i int) types.Field {
	switch i {
	case 0:
		r.Person = NewUnionNullCrewMemberPersonDto()

		return r.Person
	}
	panic("Unknown field index")
}

func (r *CrewMemberDto) SetDefault(i int) {
	switch i {
	case 0:
		r.Person = nil
		return
	}
	panic("Unknown field index")
}

func (r *CrewMemberDto) NullField(i int) {
	switch i {
	case 0:
		r.Person = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ CrewMemberDto) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ CrewMemberDto) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ CrewMemberDto) HintSize(int)                     { panic("Unsupported operation") }
func (_ CrewMemberDto) Finalize()                        {}

func (_ CrewMemberDto) AvroCRC64Fingerprint() []byte {
	return []byte(CrewMemberDtoAvroCRC64Fingerprint)
}

func (r CrewMemberDto) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Person"], err = json.Marshal(r.Person)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *CrewMemberDto) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Person"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Person); err != nil {
			return err
		}
	} else {
		r.Person = NewUnionNullCrewMemberPersonDto()

		r.Person = nil
	}
	return nil
}
