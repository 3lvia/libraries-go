// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100487_5.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullWorkLocationPositionPointsDtoTypeEnum int

const (
	UnionNullWorkLocationPositionPointsDtoTypeEnumWorkLocationPositionPointsDto UnionNullWorkLocationPositionPointsDtoTypeEnum = 1
)

type UnionNullWorkLocationPositionPointsDto struct {
	Null                          *types.NullVal
	WorkLocationPositionPointsDto WorkLocationPositionPointsDto
	UnionType                     UnionNullWorkLocationPositionPointsDtoTypeEnum
}

func writeUnionNullWorkLocationPositionPointsDto(r *UnionNullWorkLocationPositionPointsDto, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullWorkLocationPositionPointsDtoTypeEnumWorkLocationPositionPointsDto:
		return writeWorkLocationPositionPointsDto(r.WorkLocationPositionPointsDto, w)
	}
	return fmt.Errorf("invalid value for *UnionNullWorkLocationPositionPointsDto")
}

func NewUnionNullWorkLocationPositionPointsDto() *UnionNullWorkLocationPositionPointsDto {
	return &UnionNullWorkLocationPositionPointsDto{}
}

func (r *UnionNullWorkLocationPositionPointsDto) Serialize(w io.Writer) error {
	return writeUnionNullWorkLocationPositionPointsDto(r, w)
}

func DeserializeUnionNullWorkLocationPositionPointsDto(r io.Reader) (*UnionNullWorkLocationPositionPointsDto, error) {
	t := NewUnionNullWorkLocationPositionPointsDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullWorkLocationPositionPointsDtoFromSchema(r io.Reader, schema string) (*UnionNullWorkLocationPositionPointsDto, error) {
	t := NewUnionNullWorkLocationPositionPointsDto()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullWorkLocationPositionPointsDto) Schema() string {
	return "[\"null\",{\"fields\":[{\"default\":null,\"name\":\"sequenceNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"xPosition\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"yPosition\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"zPosition\",\"type\":[\"null\",\"string\"]}],\"name\":\"WorkLocationPositionPointsDto\",\"type\":\"record\"}]"
}

func (_ *UnionNullWorkLocationPositionPointsDto) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationPositionPointsDto) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationPositionPointsDto) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationPositionPointsDto) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationPositionPointsDto) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationPositionPointsDto) SetString(v string)  { panic("Unsupported operation") }

func (r *UnionNullWorkLocationPositionPointsDto) SetLong(v int64) {

	r.UnionType = (UnionNullWorkLocationPositionPointsDtoTypeEnum)(v)
}

func (r *UnionNullWorkLocationPositionPointsDto) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.WorkLocationPositionPointsDto = NewWorkLocationPositionPointsDto()
		return &types.Record{Target: (&r.WorkLocationPositionPointsDto)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullWorkLocationPositionPointsDto) NullField(i int)  { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationPositionPointsDto) HintSize(i int)   { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationPositionPointsDto) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullWorkLocationPositionPointsDto) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullWorkLocationPositionPointsDto) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullWorkLocationPositionPointsDto) Finalize() {}

func (r *UnionNullWorkLocationPositionPointsDto) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullWorkLocationPositionPointsDtoTypeEnumWorkLocationPositionPointsDto:
		return json.Marshal(map[string]interface{}{"SesamResponseServices.SesamDomainObjects.WorkLocationPositionPointsDto": r.WorkLocationPositionPointsDto})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullWorkLocationPositionPointsDto")
}

func (r *UnionNullWorkLocationPositionPointsDto) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["SesamResponseServices.SesamDomainObjects.WorkLocationPositionPointsDto"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.WorkLocationPositionPointsDto)
	}
	return fmt.Errorf("invalid value for *UnionNullWorkLocationPositionPointsDto")
}
