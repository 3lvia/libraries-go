// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100486_7.avsc
 */
package avro

import (
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

func writeArrayUnionNullSwitchingPlanDto(r []*UnionNullSwitchingPlanDto, w io.Writer) error {
	err := vm.WriteLong(int64(len(r)), w)
	if err != nil || len(r) == 0 {
		return err
	}
	for _, e := range r {
		err = writeUnionNullSwitchingPlanDto(e, w)
		if err != nil {
			return err
		}
	}
	return vm.WriteLong(0, w)
}

type ArrayUnionNullSwitchingPlanDtoWrapper struct {
	Target *[]*UnionNullSwitchingPlanDto
}

func (_ ArrayUnionNullSwitchingPlanDtoWrapper) SetBoolean(v bool)     { panic("Unsupported operation") }
func (_ ArrayUnionNullSwitchingPlanDtoWrapper) SetInt(v int32)        { panic("Unsupported operation") }
func (_ ArrayUnionNullSwitchingPlanDtoWrapper) SetLong(v int64)       { panic("Unsupported operation") }
func (_ ArrayUnionNullSwitchingPlanDtoWrapper) SetFloat(v float32)    { panic("Unsupported operation") }
func (_ ArrayUnionNullSwitchingPlanDtoWrapper) SetDouble(v float64)   { panic("Unsupported operation") }
func (_ ArrayUnionNullSwitchingPlanDtoWrapper) SetBytes(v []byte)     { panic("Unsupported operation") }
func (_ ArrayUnionNullSwitchingPlanDtoWrapper) SetString(v string)    { panic("Unsupported operation") }
func (_ ArrayUnionNullSwitchingPlanDtoWrapper) SetUnionElem(v int64)  { panic("Unsupported operation") }
func (_ ArrayUnionNullSwitchingPlanDtoWrapper) Get(i int) types.Field { panic("Unsupported operation") }
func (_ ArrayUnionNullSwitchingPlanDtoWrapper) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ ArrayUnionNullSwitchingPlanDtoWrapper) Finalize()        {}
func (_ ArrayUnionNullSwitchingPlanDtoWrapper) SetDefault(i int) { panic("Unsupported operation") }
func (r ArrayUnionNullSwitchingPlanDtoWrapper) HintSize(s int) {
	if len(*r.Target) == 0 {
		*r.Target = make([]*UnionNullSwitchingPlanDto, 0, s)
	}
}
func (r ArrayUnionNullSwitchingPlanDtoWrapper) NullField(i int) {
	(*r.Target)[len(*r.Target)-1] = nil
}

func (r ArrayUnionNullSwitchingPlanDtoWrapper) AppendArray() types.Field {
	var v *UnionNullSwitchingPlanDto
	v = NewUnionNullSwitchingPlanDto()

	*r.Target = append(*r.Target, v)

	return (*r.Target)[len(*r.Target)-1]
}
