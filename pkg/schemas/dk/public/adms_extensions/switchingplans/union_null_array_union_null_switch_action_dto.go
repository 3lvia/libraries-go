// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100486_7.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullArrayUnionNullSwitchActionDtoTypeEnum int

const (
	UnionNullArrayUnionNullSwitchActionDtoTypeEnumArrayUnionNullSwitchActionDto UnionNullArrayUnionNullSwitchActionDtoTypeEnum = 1
)

type UnionNullArrayUnionNullSwitchActionDto struct {
	Null                          *types.NullVal
	ArrayUnionNullSwitchActionDto []*UnionNullSwitchActionDto
	UnionType                     UnionNullArrayUnionNullSwitchActionDtoTypeEnum
}

func writeUnionNullArrayUnionNullSwitchActionDto(r *UnionNullArrayUnionNullSwitchActionDto, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullArrayUnionNullSwitchActionDtoTypeEnumArrayUnionNullSwitchActionDto:
		return writeArrayUnionNullSwitchActionDto(r.ArrayUnionNullSwitchActionDto, w)
	}
	return fmt.Errorf("invalid value for *UnionNullArrayUnionNullSwitchActionDto")
}

func NewUnionNullArrayUnionNullSwitchActionDto() *UnionNullArrayUnionNullSwitchActionDto {
	return &UnionNullArrayUnionNullSwitchActionDto{}
}

func (r *UnionNullArrayUnionNullSwitchActionDto) Serialize(w io.Writer) error {
	return writeUnionNullArrayUnionNullSwitchActionDto(r, w)
}

func DeserializeUnionNullArrayUnionNullSwitchActionDto(r io.Reader) (*UnionNullArrayUnionNullSwitchActionDto, error) {
	t := NewUnionNullArrayUnionNullSwitchActionDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullArrayUnionNullSwitchActionDtoFromSchema(r io.Reader, schema string) (*UnionNullArrayUnionNullSwitchActionDto, error) {
	t := NewUnionNullArrayUnionNullSwitchActionDto()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullArrayUnionNullSwitchActionDto) Schema() string {
	return "[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"CrewMember\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Person\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]}],\"name\":\"PersonDto\",\"type\":\"record\"}]}],\"name\":\"CrewMemberSDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ExecutedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ExecutedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"IsFreeSequence\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IssuedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IssuedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"Kind\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"OperatedSwitch\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Assets\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]}],\"name\":\"AssetSDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SwitchPhase\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"PhaseSide1\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PhaseSide2\",\"type\":[\"null\",\"string\"]}],\"name\":\"SwitchPhaseDto\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"SwitchDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Operator\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Person\",\"type\":[\"null\",\"SesamResponseServices.SesamDomainObjects.PersonDto\"]}],\"name\":\"OperatorDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"PlannedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PlannedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"SequenceNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Status\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"DateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Value\",\"type\":[\"null\",\"string\"]}],\"name\":\"StatusSDto\",\"type\":\"record\"}]}],\"name\":\"SwitchActionDto\",\"type\":\"record\"}],\"type\":\"array\"}]"
}

func (_ *UnionNullArrayUnionNullSwitchActionDto) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullSwitchActionDto) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullSwitchActionDto) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullSwitchActionDto) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullSwitchActionDto) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullSwitchActionDto) SetString(v string)  { panic("Unsupported operation") }

func (r *UnionNullArrayUnionNullSwitchActionDto) SetLong(v int64) {

	r.UnionType = (UnionNullArrayUnionNullSwitchActionDtoTypeEnum)(v)
}

func (r *UnionNullArrayUnionNullSwitchActionDto) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.ArrayUnionNullSwitchActionDto = make([]*UnionNullSwitchActionDto, 0)
		return &ArrayUnionNullSwitchActionDtoWrapper{Target: (&r.ArrayUnionNullSwitchActionDto)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullArrayUnionNullSwitchActionDto) NullField(i int)  { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullSwitchActionDto) HintSize(i int)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullSwitchActionDto) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullSwitchActionDto) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullArrayUnionNullSwitchActionDto) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullArrayUnionNullSwitchActionDto) Finalize() {}

func (r *UnionNullArrayUnionNullSwitchActionDto) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullArrayUnionNullSwitchActionDtoTypeEnumArrayUnionNullSwitchActionDto:
		return json.Marshal(map[string]interface{}{"array": r.ArrayUnionNullSwitchActionDto})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullArrayUnionNullSwitchActionDto")
}

func (r *UnionNullArrayUnionNullSwitchActionDto) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["array"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.ArrayUnionNullSwitchActionDto)
	}
	return fmt.Errorf("invalid value for *UnionNullArrayUnionNullSwitchActionDto")
}
