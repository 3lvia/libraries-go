// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100486_7.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type SwitchingPlansResponseDto struct {
	MessageId *UnionNullString `json:"MessageId"`

	Payload *UnionNullSwitchingPlansPayloadTypeDto `json:"Payload"`

	PublishedDateTime *UnionNullString `json:"PublishedDateTime"`

	Id *UnionNullString `json:"_id"`
}

const SwitchingPlansResponseDtoAvroCRC64Fingerprint = "_z{\f\xb5\x03\xb0`"

func NewSwitchingPlansResponseDto() SwitchingPlansResponseDto {
	r := SwitchingPlansResponseDto{}
	r.MessageId = nil
	r.Payload = nil
	r.PublishedDateTime = nil
	r.Id = nil
	return r
}

func DeserializeSwitchingPlansResponseDto(r io.Reader) (SwitchingPlansResponseDto, error) {
	t := NewSwitchingPlansResponseDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeSwitchingPlansResponseDtoFromSchema(r io.Reader, schema string) (SwitchingPlansResponseDto, error) {
	t := NewSwitchingPlansResponseDto()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeSwitchingPlansResponseDto(r SwitchingPlansResponseDto, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.MessageId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullSwitchingPlansPayloadTypeDto(r.Payload, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.PublishedDateTime, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Id, w)
	if err != nil {
		return err
	}
	return err
}

func (r SwitchingPlansResponseDto) Serialize(w io.Writer) error {
	return writeSwitchingPlansResponseDto(r, w)
}

func (r SwitchingPlansResponseDto) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"MessageId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Payload\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Compressed\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Format\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"OperationSet\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"EnforceMsgSequence\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"EnforceMsgSequenceSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"EnforceTransactionalIntegrity\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"EnforceTransactionalIntegritySpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"Operation\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Any\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ElementOperation\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"Noun\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"OperationId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Verb\",\"type\":[\"null\",\"string\"]}],\"name\":\"OperationTypeDto\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"OperationSetDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"SwitchingPlans\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"AuthorName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CreatedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Name\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Outage\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]}],\"name\":\"OutageDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Purpose\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Rank\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SwitchActions\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"CrewMember\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Person\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]}],\"name\":\"PersonDto\",\"type\":\"record\"}]}],\"name\":\"CrewMemberSDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ExecutedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ExecutedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"IsFreeSequence\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IssuedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IssuedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"Kind\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"OperatedSwitch\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Assets\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]}],\"name\":\"AssetSDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SwitchPhase\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"PhaseSide1\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PhaseSide2\",\"type\":[\"null\",\"string\"]}],\"name\":\"SwitchPhaseDto\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"SwitchDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Operator\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Person\",\"type\":[\"null\",\"SesamResponseServices.SesamDomainObjects.PersonDto\"]}],\"name\":\"OperatorDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"PlannedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PlannedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"SequenceNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Status\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"DateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Value\",\"type\":[\"null\",\"string\"]}],\"name\":\"StatusSDto\",\"type\":\"record\"}]}],\"name\":\"SwitchActionDto\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"SwitchingPlanDto\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"SwitchingPlansPayloadTypeDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"PublishedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"_id\",\"type\":[\"null\",\"string\"]}],\"name\":\"SesamResponseServices.SesamDomainObjects.SwitchingPlansResponseDto\",\"type\":\"record\"}"
}

func (r SwitchingPlansResponseDto) SchemaName() string {
	return "SesamResponseServices.SesamDomainObjects.SwitchingPlansResponseDto"
}

func (_ SwitchingPlansResponseDto) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ SwitchingPlansResponseDto) SetInt(v int32)       { panic("Unsupported operation") }
func (_ SwitchingPlansResponseDto) SetLong(v int64)      { panic("Unsupported operation") }
func (_ SwitchingPlansResponseDto) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ SwitchingPlansResponseDto) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ SwitchingPlansResponseDto) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ SwitchingPlansResponseDto) SetString(v string)   { panic("Unsupported operation") }
func (_ SwitchingPlansResponseDto) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *SwitchingPlansResponseDto) Get(i int) types.Field {
	switch i {
	case 0:
		r.MessageId = NewUnionNullString()

		return r.MessageId
	case 1:
		r.Payload = NewUnionNullSwitchingPlansPayloadTypeDto()

		return r.Payload
	case 2:
		r.PublishedDateTime = NewUnionNullString()

		return r.PublishedDateTime
	case 3:
		r.Id = NewUnionNullString()

		return r.Id
	}
	panic("Unknown field index")
}

func (r *SwitchingPlansResponseDto) SetDefault(i int) {
	switch i {
	case 0:
		r.MessageId = nil
		return
	case 1:
		r.Payload = nil
		return
	case 2:
		r.PublishedDateTime = nil
		return
	case 3:
		r.Id = nil
		return
	}
	panic("Unknown field index")
}

func (r *SwitchingPlansResponseDto) NullField(i int) {
	switch i {
	case 0:
		r.MessageId = nil
		return
	case 1:
		r.Payload = nil
		return
	case 2:
		r.PublishedDateTime = nil
		return
	case 3:
		r.Id = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ SwitchingPlansResponseDto) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ SwitchingPlansResponseDto) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ SwitchingPlansResponseDto) HintSize(int)                     { panic("Unsupported operation") }
func (_ SwitchingPlansResponseDto) Finalize()                        {}

func (_ SwitchingPlansResponseDto) AvroCRC64Fingerprint() []byte {
	return []byte(SwitchingPlansResponseDtoAvroCRC64Fingerprint)
}

func (r SwitchingPlansResponseDto) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["MessageId"], err = json.Marshal(r.MessageId)
	if err != nil {
		return nil, err
	}
	output["Payload"], err = json.Marshal(r.Payload)
	if err != nil {
		return nil, err
	}
	output["PublishedDateTime"], err = json.Marshal(r.PublishedDateTime)
	if err != nil {
		return nil, err
	}
	output["_id"], err = json.Marshal(r.Id)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *SwitchingPlansResponseDto) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["MessageId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MessageId); err != nil {
			return err
		}
	} else {
		r.MessageId = NewUnionNullString()

		r.MessageId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Payload"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Payload); err != nil {
			return err
		}
	} else {
		r.Payload = NewUnionNullSwitchingPlansPayloadTypeDto()

		r.Payload = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["PublishedDateTime"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PublishedDateTime); err != nil {
			return err
		}
	} else {
		r.PublishedDateTime = NewUnionNullString()

		r.PublishedDateTime = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["_id"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Id); err != nil {
			return err
		}
	} else {
		r.Id = NewUnionNullString()

		r.Id = nil
	}
	return nil
}
