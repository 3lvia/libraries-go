// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100486_7.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type SwitchingPlansPayloadTypeDto struct {
	Compressed *UnionNullString `json:"Compressed"`

	Format *UnionNullString `json:"Format"`

	OperationSet *UnionNullOperationSetDto `json:"OperationSet"`

	SwitchingPlans *UnionNullArrayUnionNullSwitchingPlanDto `json:"SwitchingPlans"`
}

const SwitchingPlansPayloadTypeDtoAvroCRC64Fingerprint = "\xf5\xd2R\x13\r\xd39\x80"

func NewSwitchingPlansPayloadTypeDto() SwitchingPlansPayloadTypeDto {
	r := SwitchingPlansPayloadTypeDto{}
	r.Compressed = nil
	r.Format = nil
	r.OperationSet = nil
	r.SwitchingPlans = nil
	return r
}

func DeserializeSwitchingPlansPayloadTypeDto(r io.Reader) (SwitchingPlansPayloadTypeDto, error) {
	t := NewSwitchingPlansPayloadTypeDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeSwitchingPlansPayloadTypeDtoFromSchema(r io.Reader, schema string) (SwitchingPlansPayloadTypeDto, error) {
	t := NewSwitchingPlansPayloadTypeDto()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeSwitchingPlansPayloadTypeDto(r SwitchingPlansPayloadTypeDto, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.Compressed, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Format, w)
	if err != nil {
		return err
	}
	err = writeUnionNullOperationSetDto(r.OperationSet, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayUnionNullSwitchingPlanDto(r.SwitchingPlans, w)
	if err != nil {
		return err
	}
	return err
}

func (r SwitchingPlansPayloadTypeDto) Serialize(w io.Writer) error {
	return writeSwitchingPlansPayloadTypeDto(r, w)
}

func (r SwitchingPlansPayloadTypeDto) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"Compressed\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Format\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"OperationSet\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"EnforceMsgSequence\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"EnforceMsgSequenceSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"EnforceTransactionalIntegrity\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"EnforceTransactionalIntegritySpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"Operation\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Any\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ElementOperation\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"Noun\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"OperationId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Verb\",\"type\":[\"null\",\"string\"]}],\"name\":\"OperationTypeDto\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"OperationSetDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"SwitchingPlans\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"AuthorName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CreatedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Name\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Outage\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]}],\"name\":\"OutageDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Purpose\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Rank\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SwitchActions\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"CrewMember\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Person\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]}],\"name\":\"PersonDto\",\"type\":\"record\"}]}],\"name\":\"CrewMemberSDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ExecutedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ExecutedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"IsFreeSequence\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IssuedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IssuedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"Kind\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastModifiedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastModifiedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"OperatedSwitch\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Assets\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]}],\"name\":\"AssetSDto\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"MRID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SwitchPhase\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"PhaseSide1\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PhaseSide2\",\"type\":[\"null\",\"string\"]}],\"name\":\"SwitchPhaseDto\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"SwitchDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Operator\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Person\",\"type\":[\"null\",\"SesamResponseServices.SesamDomainObjects.PersonDto\"]}],\"name\":\"OperatorDto\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"PlannedDateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PlannedDateTimeSpecified\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"SequenceNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Status\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"DateTime\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Value\",\"type\":[\"null\",\"string\"]}],\"name\":\"StatusSDto\",\"type\":\"record\"}]}],\"name\":\"SwitchActionDto\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"SwitchingPlanDto\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"SesamResponseServices.SesamDomainObjects.SwitchingPlansPayloadTypeDto\",\"type\":\"record\"}"
}

func (r SwitchingPlansPayloadTypeDto) SchemaName() string {
	return "SesamResponseServices.SesamDomainObjects.SwitchingPlansPayloadTypeDto"
}

func (_ SwitchingPlansPayloadTypeDto) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ SwitchingPlansPayloadTypeDto) SetInt(v int32)       { panic("Unsupported operation") }
func (_ SwitchingPlansPayloadTypeDto) SetLong(v int64)      { panic("Unsupported operation") }
func (_ SwitchingPlansPayloadTypeDto) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ SwitchingPlansPayloadTypeDto) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ SwitchingPlansPayloadTypeDto) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ SwitchingPlansPayloadTypeDto) SetString(v string)   { panic("Unsupported operation") }
func (_ SwitchingPlansPayloadTypeDto) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *SwitchingPlansPayloadTypeDto) Get(i int) types.Field {
	switch i {
	case 0:
		r.Compressed = NewUnionNullString()

		return r.Compressed
	case 1:
		r.Format = NewUnionNullString()

		return r.Format
	case 2:
		r.OperationSet = NewUnionNullOperationSetDto()

		return r.OperationSet
	case 3:
		r.SwitchingPlans = NewUnionNullArrayUnionNullSwitchingPlanDto()

		return r.SwitchingPlans
	}
	panic("Unknown field index")
}

func (r *SwitchingPlansPayloadTypeDto) SetDefault(i int) {
	switch i {
	case 0:
		r.Compressed = nil
		return
	case 1:
		r.Format = nil
		return
	case 2:
		r.OperationSet = nil
		return
	case 3:
		r.SwitchingPlans = nil
		return
	}
	panic("Unknown field index")
}

func (r *SwitchingPlansPayloadTypeDto) NullField(i int) {
	switch i {
	case 0:
		r.Compressed = nil
		return
	case 1:
		r.Format = nil
		return
	case 2:
		r.OperationSet = nil
		return
	case 3:
		r.SwitchingPlans = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ SwitchingPlansPayloadTypeDto) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ SwitchingPlansPayloadTypeDto) AppendArray() types.Field { panic("Unsupported operation") }
func (_ SwitchingPlansPayloadTypeDto) HintSize(int)             { panic("Unsupported operation") }
func (_ SwitchingPlansPayloadTypeDto) Finalize()                {}

func (_ SwitchingPlansPayloadTypeDto) AvroCRC64Fingerprint() []byte {
	return []byte(SwitchingPlansPayloadTypeDtoAvroCRC64Fingerprint)
}

func (r SwitchingPlansPayloadTypeDto) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Compressed"], err = json.Marshal(r.Compressed)
	if err != nil {
		return nil, err
	}
	output["Format"], err = json.Marshal(r.Format)
	if err != nil {
		return nil, err
	}
	output["OperationSet"], err = json.Marshal(r.OperationSet)
	if err != nil {
		return nil, err
	}
	output["SwitchingPlans"], err = json.Marshal(r.SwitchingPlans)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *SwitchingPlansPayloadTypeDto) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Compressed"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Compressed); err != nil {
			return err
		}
	} else {
		r.Compressed = NewUnionNullString()

		r.Compressed = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Format"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Format); err != nil {
			return err
		}
	} else {
		r.Format = NewUnionNullString()

		r.Format = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["OperationSet"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OperationSet); err != nil {
			return err
		}
	} else {
		r.OperationSet = NewUnionNullOperationSetDto()

		r.OperationSet = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SwitchingPlans"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SwitchingPlans); err != nil {
			return err
		}
	} else {
		r.SwitchingPlans = NewUnionNullArrayUnionNullSwitchingPlanDto()

		r.SwitchingPlans = nil
	}
	return nil
}
