// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100467_3.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Customer struct {
	ContactType *UnionNullString `json:"ContactType"`

	ContactValue *UnionNullString `json:"ContactValue"`

	InstallationOid *UnionNullString `json:"InstallationOid"`

	Trigger *UnionNullTrigger `json:"Trigger"`
}

const CustomerAvroCRC64Fingerprint = "Y\xd6 \x95R\x01\x1b\x02"

func NewCustomer() Customer {
	r := Customer{}
	r.ContactType = nil
	r.ContactValue = nil
	r.InstallationOid = nil
	r.Trigger = nil
	return r
}

func DeserializeCustomer(r io.Reader) (Customer, error) {
	t := NewCustomer()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeCustomerFromSchema(r io.Reader, schema string) (Customer, error) {
	t := NewCustomer()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeCustomer(r Customer, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.ContactType, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ContactValue, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.InstallationOid, w)
	if err != nil {
		return err
	}
	err = writeUnionNullTrigger(r.Trigger, w)
	if err != nil {
		return err
	}
	return err
}

func (r Customer) Serialize(w io.Writer) error {
	return writeCustomer(r, w)
}

func (r Customer) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"ContactType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ContactValue\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"InstallationOid\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Trigger\",\"type\":[\"null\",{\"name\":\"Trigger\",\"symbols\":[\"EtrChange\",\"InformDispatched\",\"InitialEtr\",\"PowerOut\",\"PowerRestored\"],\"type\":\"enum\"}]}],\"name\":\"kunde_extensions_wop_api.Model.Customer\",\"type\":\"record\"}"
}

func (r Customer) SchemaName() string {
	return "kunde_extensions_wop_api.Model.Customer"
}

func (_ Customer) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Customer) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Customer) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Customer) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Customer) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Customer) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Customer) SetString(v string)   { panic("Unsupported operation") }
func (_ Customer) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Customer) Get(i int) types.Field {
	switch i {
	case 0:
		r.ContactType = NewUnionNullString()

		return r.ContactType
	case 1:
		r.ContactValue = NewUnionNullString()

		return r.ContactValue
	case 2:
		r.InstallationOid = NewUnionNullString()

		return r.InstallationOid
	case 3:
		r.Trigger = NewUnionNullTrigger()

		return r.Trigger
	}
	panic("Unknown field index")
}

func (r *Customer) SetDefault(i int) {
	switch i {
	case 0:
		r.ContactType = nil
		return
	case 1:
		r.ContactValue = nil
		return
	case 2:
		r.InstallationOid = nil
		return
	case 3:
		r.Trigger = nil
		return
	}
	panic("Unknown field index")
}

func (r *Customer) NullField(i int) {
	switch i {
	case 0:
		r.ContactType = nil
		return
	case 1:
		r.ContactValue = nil
		return
	case 2:
		r.InstallationOid = nil
		return
	case 3:
		r.Trigger = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ Customer) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Customer) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Customer) HintSize(int)                     { panic("Unsupported operation") }
func (_ Customer) Finalize()                        {}

func (_ Customer) AvroCRC64Fingerprint() []byte {
	return []byte(CustomerAvroCRC64Fingerprint)
}

func (r Customer) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["ContactType"], err = json.Marshal(r.ContactType)
	if err != nil {
		return nil, err
	}
	output["ContactValue"], err = json.Marshal(r.ContactValue)
	if err != nil {
		return nil, err
	}
	output["InstallationOid"], err = json.Marshal(r.InstallationOid)
	if err != nil {
		return nil, err
	}
	output["Trigger"], err = json.Marshal(r.Trigger)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Customer) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["ContactType"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ContactType); err != nil {
			return err
		}
	} else {
		r.ContactType = NewUnionNullString()

		r.ContactType = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ContactValue"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ContactValue); err != nil {
			return err
		}
	} else {
		r.ContactValue = NewUnionNullString()

		r.ContactValue = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["InstallationOid"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.InstallationOid); err != nil {
			return err
		}
	} else {
		r.InstallationOid = NewUnionNullString()

		r.InstallationOid = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Trigger"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Trigger); err != nil {
			return err
		}
	} else {
		r.Trigger = NewUnionNullTrigger()

		r.Trigger = nil
	}
	return nil
}
