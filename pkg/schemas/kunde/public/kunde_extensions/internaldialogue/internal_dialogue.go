// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100207_1.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type InternalDialogue struct {
	CaseNumber int32 `json:"CaseNumber"`

	Message *UnionNullString `json:"Message"`

	Sender *UnionNullString `json:"Sender"`
}

const InternalDialogueAvroCRC64Fingerprint = "\x00k√ê\x1e\xfb\xa7,"

func NewInternalDialogue() InternalDialogue {
	r := InternalDialogue{}
	r.Message = nil
	r.Sender = nil
	return r
}

func DeserializeInternalDialogue(r io.Reader) (InternalDialogue, error) {
	t := NewInternalDialogue()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeInternalDialogueFromSchema(r io.Reader, schema string) (InternalDialogue, error) {
	t := NewInternalDialogue()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeInternalDialogue(r InternalDialogue, w io.Writer) error {
	var err error
	err = vm.WriteInt(r.CaseNumber, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Message, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Sender, w)
	if err != nil {
		return err
	}
	return err
}

func (r InternalDialogue) Serialize(w io.Writer) error {
	return writeInternalDialogue(r, w)
}

func (r InternalDialogue) Schema() string {
	return "{\"fields\":[{\"name\":\"CaseNumber\",\"type\":\"int\"},{\"default\":null,\"name\":\"Message\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Sender\",\"type\":[\"null\",\"string\"]}],\"name\":\"kunde_extensions_external_data_api.Model.InternalDialogue\",\"type\":\"record\"}"
}

func (r InternalDialogue) SchemaName() string {
	return "kunde_extensions_external_data_api.Model.InternalDialogue"
}

func (_ InternalDialogue) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ InternalDialogue) SetInt(v int32)       { panic("Unsupported operation") }
func (_ InternalDialogue) SetLong(v int64)      { panic("Unsupported operation") }
func (_ InternalDialogue) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ InternalDialogue) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ InternalDialogue) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ InternalDialogue) SetString(v string)   { panic("Unsupported operation") }
func (_ InternalDialogue) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *InternalDialogue) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.Int{Target: &r.CaseNumber}

		return w

	case 1:
		r.Message = NewUnionNullString()

		return r.Message
	case 2:
		r.Sender = NewUnionNullString()

		return r.Sender
	}
	panic("Unknown field index")
}

func (r *InternalDialogue) SetDefault(i int) {
	switch i {
	case 1:
		r.Message = nil
		return
	case 2:
		r.Sender = nil
		return
	}
	panic("Unknown field index")
}

func (r *InternalDialogue) NullField(i int) {
	switch i {
	case 1:
		r.Message = nil
		return
	case 2:
		r.Sender = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ InternalDialogue) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ InternalDialogue) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ InternalDialogue) HintSize(int)                     { panic("Unsupported operation") }
func (_ InternalDialogue) Finalize()                        {}

func (_ InternalDialogue) AvroCRC64Fingerprint() []byte {
	return []byte(InternalDialogueAvroCRC64Fingerprint)
}

func (r InternalDialogue) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["CaseNumber"], err = json.Marshal(r.CaseNumber)
	if err != nil {
		return nil, err
	}
	output["Message"], err = json.Marshal(r.Message)
	if err != nil {
		return nil, err
	}
	output["Sender"], err = json.Marshal(r.Sender)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *InternalDialogue) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["CaseNumber"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CaseNumber); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CaseNumber")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Message"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Message); err != nil {
			return err
		}
	} else {
		r.Message = NewUnionNullString()

		r.Message = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Sender"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Sender); err != nil {
			return err
		}
	} else {
		r.Sender = NewUnionNullString()

		r.Sender = nil
	}
	return nil
}
