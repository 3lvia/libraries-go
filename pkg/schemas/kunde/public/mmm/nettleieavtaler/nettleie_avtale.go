// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100479_10.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type NettleieAvtale struct {
	Avtale *UnionNullAvtale `json:"Avtale"`

	AvtaleId string `json:"AvtaleId"`

	MaalepunktId string `json:"MaalepunktId"`
}

const NettleieAvtaleAvroCRC64Fingerprint = "\xed~\xf4\xec{\x83\xfb\xe5"

func NewNettleieAvtale() NettleieAvtale {
	r := NettleieAvtale{}
	r.Avtale = nil
	return r
}

func DeserializeNettleieAvtale(r io.Reader) (NettleieAvtale, error) {
	t := NewNettleieAvtale()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeNettleieAvtaleFromSchema(r io.Reader, schema string) (NettleieAvtale, error) {
	t := NewNettleieAvtale()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeNettleieAvtale(r NettleieAvtale, w io.Writer) error {
	var err error
	err = writeUnionNullAvtale(r.Avtale, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.AvtaleId, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.MaalepunktId, w)
	if err != nil {
		return err
	}
	return err
}

func (r NettleieAvtale) Serialize(w io.Writer) error {
	return writeNettleieAvtale(r, w)
}

func (r NettleieAvtale) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"Avtale\",\"type\":[\"null\",{\"fields\":[{\"name\":\"AvtaleId\",\"type\":{\"logicalType\":\"uuid\",\"type\":\"string\"}},{\"name\":\"FakturaAdresse\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"Bruksenhetsnummer\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CoAdresse\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Etasje\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Gatenavn\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Husnummer\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Kommunenummer\",\"type\":[\"null\",\"string\"]},{\"name\":\"Landkode\",\"type\":\"string\"},{\"default\":null,\"name\":\"Postboks\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PostboksAnleggsnavn\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Postnummer\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Poststed\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PaaVegneAv\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"VedPerson\",\"type\":[\"null\",\"string\"]}],\"name\":\"Adresse\",\"type\":\"record\"}},{\"name\":\"Kontaktinformasjon\",\"type\":{\"items\":{\"fields\":[{\"default\":null,\"name\":\"Beskrivelse\",\"type\":[\"null\",\"string\"]},{\"name\":\"KommunikasjonsType\",\"type\":{\"name\":\"KommunikasjonsType\",\"symbols\":[\"Mobil\",\"Telefon\",\"Epost\",\"Telefax\"],\"type\":\"enum\"}},{\"name\":\"Verdi\",\"type\":\"string\"}],\"name\":\"Kontaktinformasjon\",\"type\":\"record\"},\"type\":\"array\"}},{\"name\":\"Kunde\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"Etternavn\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Foedselsnummer\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Fornavn\",\"type\":[\"null\",\"string\"]},{\"name\":\"KundeGuid\",\"type\":{\"logicalType\":\"uuid\",\"type\":\"string\"}},{\"default\":null,\"name\":\"Organisasjonsnummer\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Virksomhetsnavn\",\"type\":[\"null\",\"string\"]}],\"name\":\"Kunde\",\"type\":\"record\"}},{\"name\":\"Leverandoerer\",\"type\":{\"items\":{\"fields\":[{\"name\":\"Gln\",\"type\":\"string\"},{\"name\":\"Startdato\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}}],\"name\":\"Leverandoer\",\"type\":\"record\"},\"type\":\"array\"}},{\"name\":\"MaalepunktId\",\"type\":\"string\"},{\"default\":null,\"name\":\"PostAdresse\",\"type\":[\"null\",\"Mmm.Schemas.NettleieAvtale.V1.Adresse\"]},{\"default\":null,\"name\":\"Sluttdato\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"Startdato\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}}],\"name\":\"Avtale\",\"type\":\"record\"}]},{\"name\":\"AvtaleId\",\"type\":{\"logicalType\":\"uuid\",\"type\":\"string\"}},{\"name\":\"MaalepunktId\",\"type\":\"string\"}],\"name\":\"Mmm.Schemas.NettleieAvtale.V1.NettleieAvtale\",\"type\":\"record\"}"
}

func (r NettleieAvtale) SchemaName() string {
	return "Mmm.Schemas.NettleieAvtale.V1.NettleieAvtale"
}

func (_ NettleieAvtale) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ NettleieAvtale) SetInt(v int32)       { panic("Unsupported operation") }
func (_ NettleieAvtale) SetLong(v int64)      { panic("Unsupported operation") }
func (_ NettleieAvtale) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ NettleieAvtale) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ NettleieAvtale) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ NettleieAvtale) SetString(v string)   { panic("Unsupported operation") }
func (_ NettleieAvtale) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *NettleieAvtale) Get(i int) types.Field {
	switch i {
	case 0:
		r.Avtale = NewUnionNullAvtale()

		return r.Avtale
	case 1:
		w := types.String{Target: &r.AvtaleId}

		return w

	case 2:
		w := types.String{Target: &r.MaalepunktId}

		return w

	}
	panic("Unknown field index")
}

func (r *NettleieAvtale) SetDefault(i int) {
	switch i {
	case 0:
		r.Avtale = nil
		return
	}
	panic("Unknown field index")
}

func (r *NettleieAvtale) NullField(i int) {
	switch i {
	case 0:
		r.Avtale = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ NettleieAvtale) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ NettleieAvtale) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ NettleieAvtale) HintSize(int)                     { panic("Unsupported operation") }
func (_ NettleieAvtale) Finalize()                        {}

func (_ NettleieAvtale) AvroCRC64Fingerprint() []byte {
	return []byte(NettleieAvtaleAvroCRC64Fingerprint)
}

func (r NettleieAvtale) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Avtale"], err = json.Marshal(r.Avtale)
	if err != nil {
		return nil, err
	}
	output["AvtaleId"], err = json.Marshal(r.AvtaleId)
	if err != nil {
		return nil, err
	}
	output["MaalepunktId"], err = json.Marshal(r.MaalepunktId)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *NettleieAvtale) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Avtale"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Avtale); err != nil {
			return err
		}
	} else {
		r.Avtale = NewUnionNullAvtale()

		r.Avtale = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["AvtaleId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AvtaleId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for AvtaleId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["MaalepunktId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MaalepunktId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for MaalepunktId")
	}
	return nil
}
