// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100479_10.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type KommunikasjonsType int32

const (
	KommunikasjonsTypeMobil   KommunikasjonsType = 0
	KommunikasjonsTypeTelefon KommunikasjonsType = 1
	KommunikasjonsTypeEpost   KommunikasjonsType = 2
	KommunikasjonsTypeTelefax KommunikasjonsType = 3
)

func (e KommunikasjonsType) String() string {
	switch e {
	case KommunikasjonsTypeMobil:
		return "Mobil"
	case KommunikasjonsTypeTelefon:
		return "Telefon"
	case KommunikasjonsTypeEpost:
		return "Epost"
	case KommunikasjonsTypeTelefax:
		return "Telefax"
	}
	return "unknown"
}

func writeKommunikasjonsType(r KommunikasjonsType, w io.Writer) error {
	return vm.WriteInt(int32(r), w)
}

func NewKommunikasjonsTypeValue(raw string) (r KommunikasjonsType, err error) {
	switch raw {
	case "Mobil":
		return KommunikasjonsTypeMobil, nil
	case "Telefon":
		return KommunikasjonsTypeTelefon, nil
	case "Epost":
		return KommunikasjonsTypeEpost, nil
	case "Telefax":
		return KommunikasjonsTypeTelefax, nil
	}

	return -1, fmt.Errorf("invalid value for KommunikasjonsType: '%s'", raw)

}

func (b KommunikasjonsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.String())
}

func (b *KommunikasjonsType) UnmarshalJSON(data []byte) error {
	var stringVal string
	err := json.Unmarshal(data, &stringVal)
	if err != nil {
		return err
	}
	val, err := NewKommunikasjonsTypeValue(stringVal)
	*b = val
	return err
}

type KommunikasjonsTypeWrapper struct {
	Target *KommunikasjonsType
}

func (b KommunikasjonsTypeWrapper) SetBoolean(v bool) {
	panic("Unable to assign boolean to int field")
}

func (b KommunikasjonsTypeWrapper) SetInt(v int32) {
	*(b.Target) = KommunikasjonsType(v)
}

func (b KommunikasjonsTypeWrapper) SetLong(v int64) {
	panic("Unable to assign long to int field")
}

func (b KommunikasjonsTypeWrapper) SetFloat(v float32) {
	panic("Unable to assign float to int field")
}

func (b KommunikasjonsTypeWrapper) SetUnionElem(v int64) {
	panic("Unable to assign union elem to int field")
}

func (b KommunikasjonsTypeWrapper) SetDouble(v float64) {
	panic("Unable to assign double to int field")
}

func (b KommunikasjonsTypeWrapper) SetBytes(v []byte) {
	panic("Unable to assign bytes to int field")
}

func (b KommunikasjonsTypeWrapper) SetString(v string) {
	panic("Unable to assign string to int field")
}

func (b KommunikasjonsTypeWrapper) Get(i int) types.Field {
	panic("Unable to get field from int field")
}

func (b KommunikasjonsTypeWrapper) SetDefault(i int) {
	panic("Unable to set default on int field")
}

func (b KommunikasjonsTypeWrapper) AppendMap(key string) types.Field {
	panic("Unable to append map key to from int field")
}

func (b KommunikasjonsTypeWrapper) AppendArray() types.Field {
	panic("Unable to append array element to from int field")
}

func (b KommunikasjonsTypeWrapper) NullField(int) {
	panic("Unable to null field in int field")
}

func (b KommunikasjonsTypeWrapper) HintSize(int) {
	panic("Unable to hint size in int field")
}

func (b KommunikasjonsTypeWrapper) Finalize() {}
