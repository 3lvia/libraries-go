// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100480_13.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Avtale struct {
	AvtaleId string `json:"AvtaleId"`

	FakturaAdresse Adresse `json:"FakturaAdresse"`

	Kontaktinformasjon []Kontaktinformasjon `json:"Kontaktinformasjon"`

	Kunde Kunde `json:"Kunde"`

	Leverandoerer []Leverandoer `json:"Leverandoerer"`

	MaalepunktId string `json:"MaalepunktId"`

	PostAdresse *UnionNullAdresse `json:"PostAdresse"`

	Sluttdato *UnionNullLong `json:"Sluttdato"`

	Startdato int64 `json:"Startdato"`
}

const AvtaleAvroCRC64Fingerprint = " \x8d6tI\xe4\x02W"

func NewAvtale() Avtale {
	r := Avtale{}
	r.FakturaAdresse = NewAdresse()

	r.Kontaktinformasjon = make([]Kontaktinformasjon, 0)

	r.Kunde = NewKunde()

	r.Leverandoerer = make([]Leverandoer, 0)

	r.PostAdresse = nil
	r.Sluttdato = nil
	return r
}

func DeserializeAvtale(r io.Reader) (Avtale, error) {
	t := NewAvtale()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeAvtaleFromSchema(r io.Reader, schema string) (Avtale, error) {
	t := NewAvtale()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeAvtale(r Avtale, w io.Writer) error {
	var err error
	err = vm.WriteString(r.AvtaleId, w)
	if err != nil {
		return err
	}
	err = writeAdresse(r.FakturaAdresse, w)
	if err != nil {
		return err
	}
	err = writeArrayKontaktinformasjon(r.Kontaktinformasjon, w)
	if err != nil {
		return err
	}
	err = writeKunde(r.Kunde, w)
	if err != nil {
		return err
	}
	err = writeArrayLeverandoer(r.Leverandoerer, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.MaalepunktId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullAdresse(r.PostAdresse, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.Sluttdato, w)
	if err != nil {
		return err
	}
	err = vm.WriteLong(r.Startdato, w)
	if err != nil {
		return err
	}
	return err
}

func (r Avtale) Serialize(w io.Writer) error {
	return writeAvtale(r, w)
}

func (r Avtale) Schema() string {
	return "{\"fields\":[{\"name\":\"AvtaleId\",\"type\":{\"logicalType\":\"uuid\",\"type\":\"string\"}},{\"name\":\"FakturaAdresse\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"Bruksenhetsnummer\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CoAdresse\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Etasje\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Gatenavn\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Husnummer\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Kommunenummer\",\"type\":[\"null\",\"string\"]},{\"name\":\"Landkode\",\"type\":\"string\"},{\"default\":null,\"name\":\"Postboks\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PostboksAnleggsnavn\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Postnummer\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Poststed\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PaaVegneAv\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"VedPerson\",\"type\":[\"null\",\"string\"]}],\"name\":\"Adresse\",\"type\":\"record\"}},{\"name\":\"Kontaktinformasjon\",\"type\":{\"items\":{\"fields\":[{\"default\":null,\"name\":\"Beskrivelse\",\"type\":[\"null\",\"string\"]},{\"name\":\"KommunikasjonsType\",\"type\":{\"name\":\"KommunikasjonsType\",\"symbols\":[\"Mobil\",\"Telefon\",\"Epost\",\"Telefax\"],\"type\":\"enum\"}},{\"name\":\"Verdi\",\"type\":\"string\"}],\"name\":\"Kontaktinformasjon\",\"type\":\"record\"},\"type\":\"array\"}},{\"name\":\"Kunde\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"Etternavn\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Fornavn\",\"type\":[\"null\",\"string\"]},{\"name\":\"KundeGuid\",\"type\":{\"logicalType\":\"uuid\",\"type\":\"string\"}},{\"default\":null,\"name\":\"Virksomhetsnavn\",\"type\":[\"null\",\"string\"]}],\"name\":\"Kunde\",\"type\":\"record\"}},{\"name\":\"Leverandoerer\",\"type\":{\"items\":{\"fields\":[{\"name\":\"Gln\",\"type\":\"string\"},{\"name\":\"Startdato\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}}],\"name\":\"Leverandoer\",\"type\":\"record\"},\"type\":\"array\"}},{\"name\":\"MaalepunktId\",\"type\":\"string\"},{\"default\":null,\"name\":\"PostAdresse\",\"type\":[\"null\",\"Mmm.Schemas.NettleieAvtaleHendelser.V1.Adresse\"]},{\"default\":null,\"name\":\"Sluttdato\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"Startdato\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}}],\"name\":\"Mmm.Schemas.NettleieAvtaleHendelser.V1.Avtale\",\"type\":\"record\"}"
}

func (r Avtale) SchemaName() string {
	return "Mmm.Schemas.NettleieAvtaleHendelser.V1.Avtale"
}

func (_ Avtale) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Avtale) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Avtale) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Avtale) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Avtale) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Avtale) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Avtale) SetString(v string)   { panic("Unsupported operation") }
func (_ Avtale) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Avtale) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.AvtaleId}

		return w

	case 1:
		r.FakturaAdresse = NewAdresse()

		w := types.Record{Target: &r.FakturaAdresse}

		return w

	case 2:
		r.Kontaktinformasjon = make([]Kontaktinformasjon, 0)

		w := ArrayKontaktinformasjonWrapper{Target: &r.Kontaktinformasjon}

		return w

	case 3:
		r.Kunde = NewKunde()

		w := types.Record{Target: &r.Kunde}

		return w

	case 4:
		r.Leverandoerer = make([]Leverandoer, 0)

		w := ArrayLeverandoerWrapper{Target: &r.Leverandoerer}

		return w

	case 5:
		w := types.String{Target: &r.MaalepunktId}

		return w

	case 6:
		r.PostAdresse = NewUnionNullAdresse()

		return r.PostAdresse
	case 7:
		r.Sluttdato = NewUnionNullLong()

		return r.Sluttdato
	case 8:
		w := types.Long{Target: &r.Startdato}

		return w

	}
	panic("Unknown field index")
}

func (r *Avtale) SetDefault(i int) {
	switch i {
	case 6:
		r.PostAdresse = nil
		return
	case 7:
		r.Sluttdato = nil
		return
	}
	panic("Unknown field index")
}

func (r *Avtale) NullField(i int) {
	switch i {
	case 6:
		r.PostAdresse = nil
		return
	case 7:
		r.Sluttdato = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ Avtale) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Avtale) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Avtale) HintSize(int)                     { panic("Unsupported operation") }
func (_ Avtale) Finalize()                        {}

func (_ Avtale) AvroCRC64Fingerprint() []byte {
	return []byte(AvtaleAvroCRC64Fingerprint)
}

func (r Avtale) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["AvtaleId"], err = json.Marshal(r.AvtaleId)
	if err != nil {
		return nil, err
	}
	output["FakturaAdresse"], err = json.Marshal(r.FakturaAdresse)
	if err != nil {
		return nil, err
	}
	output["Kontaktinformasjon"], err = json.Marshal(r.Kontaktinformasjon)
	if err != nil {
		return nil, err
	}
	output["Kunde"], err = json.Marshal(r.Kunde)
	if err != nil {
		return nil, err
	}
	output["Leverandoerer"], err = json.Marshal(r.Leverandoerer)
	if err != nil {
		return nil, err
	}
	output["MaalepunktId"], err = json.Marshal(r.MaalepunktId)
	if err != nil {
		return nil, err
	}
	output["PostAdresse"], err = json.Marshal(r.PostAdresse)
	if err != nil {
		return nil, err
	}
	output["Sluttdato"], err = json.Marshal(r.Sluttdato)
	if err != nil {
		return nil, err
	}
	output["Startdato"], err = json.Marshal(r.Startdato)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Avtale) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["AvtaleId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AvtaleId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for AvtaleId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FakturaAdresse"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FakturaAdresse); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FakturaAdresse")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Kontaktinformasjon"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Kontaktinformasjon); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Kontaktinformasjon")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Kunde"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Kunde); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Kunde")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Leverandoerer"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Leverandoerer); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Leverandoerer")
	}
	val = func() json.RawMessage {
		if v, ok := fields["MaalepunktId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MaalepunktId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for MaalepunktId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["PostAdresse"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PostAdresse); err != nil {
			return err
		}
	} else {
		r.PostAdresse = NewUnionNullAdresse()

		r.PostAdresse = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Sluttdato"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Sluttdato); err != nil {
			return err
		}
	} else {
		r.Sluttdato = NewUnionNullLong()

		r.Sluttdato = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Startdato"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Startdato); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Startdato")
	}
	return nil
}
