// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100396_4.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullArrayUnionNullInvoiceLineTypeEnum int

const (
	UnionNullArrayUnionNullInvoiceLineTypeEnumArrayUnionNullInvoiceLine UnionNullArrayUnionNullInvoiceLineTypeEnum = 1
)

type UnionNullArrayUnionNullInvoiceLine struct {
	Null                      *types.NullVal
	ArrayUnionNullInvoiceLine []*UnionNullInvoiceLine
	UnionType                 UnionNullArrayUnionNullInvoiceLineTypeEnum
}

func writeUnionNullArrayUnionNullInvoiceLine(r *UnionNullArrayUnionNullInvoiceLine, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullArrayUnionNullInvoiceLineTypeEnumArrayUnionNullInvoiceLine:
		return writeArrayUnionNullInvoiceLine(r.ArrayUnionNullInvoiceLine, w)
	}
	return fmt.Errorf("invalid value for *UnionNullArrayUnionNullInvoiceLine")
}

func NewUnionNullArrayUnionNullInvoiceLine() *UnionNullArrayUnionNullInvoiceLine {
	return &UnionNullArrayUnionNullInvoiceLine{}
}

func (r *UnionNullArrayUnionNullInvoiceLine) Serialize(w io.Writer) error {
	return writeUnionNullArrayUnionNullInvoiceLine(r, w)
}

func DeserializeUnionNullArrayUnionNullInvoiceLine(r io.Reader) (*UnionNullArrayUnionNullInvoiceLine, error) {
	t := NewUnionNullArrayUnionNullInvoiceLine()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullArrayUnionNullInvoiceLineFromSchema(r io.Reader, schema string) (*UnionNullArrayUnionNullInvoiceLine, error) {
	t := NewUnionNullArrayUnionNullInvoiceLine()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullArrayUnionNullInvoiceLine) Schema() string {
	return "[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Amount\",\"type\":[\"null\",{\"fields\":[{\"name\":\"Amount\",\"type\":{\"logicalType\":\"decimal\",\"precision\":29,\"scale\":14,\"type\":\"bytes\"}},{\"default\":null,\"name\":\"CurrencyCode\",\"type\":[\"null\",\"string\"]}],\"name\":\"Money\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Consumption\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"FromDate\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"GroupingAddress\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LineNo\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"NetAmount\",\"type\":[\"null\",\"Afiextensions.Schemas.InvoiceCreatedEvents.V1.Money\"]},{\"default\":null,\"name\":\"OperatingUnitId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PriceCode\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PricePerUnit\",\"type\":[\"null\",\"Afiextensions.Schemas.InvoiceCreatedEvents.V1.Money\"]},{\"default\":null,\"name\":\"ProductId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ProductType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SalesOrderSerialNo\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"SystemStatisticalCode\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ToDate\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Type\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Units\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"VatAmount\",\"type\":[\"null\",\"Afiextensions.Schemas.InvoiceCreatedEvents.V1.Money\"]},{\"default\":null,\"name\":\"VatRate\",\"type\":[\"null\",{\"logicalType\":\"decimal\",\"precision\":29,\"scale\":14,\"type\":\"bytes\"}]}],\"name\":\"InvoiceLine\",\"type\":\"record\"}],\"type\":\"array\"}]"
}

func (_ *UnionNullArrayUnionNullInvoiceLine) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullInvoiceLine) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullInvoiceLine) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullInvoiceLine) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullInvoiceLine) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullInvoiceLine) SetString(v string)  { panic("Unsupported operation") }

func (r *UnionNullArrayUnionNullInvoiceLine) SetLong(v int64) {

	r.UnionType = (UnionNullArrayUnionNullInvoiceLineTypeEnum)(v)
}

func (r *UnionNullArrayUnionNullInvoiceLine) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.ArrayUnionNullInvoiceLine = make([]*UnionNullInvoiceLine, 0)
		return &ArrayUnionNullInvoiceLineWrapper{Target: (&r.ArrayUnionNullInvoiceLine)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullArrayUnionNullInvoiceLine) NullField(i int)  { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullInvoiceLine) HintSize(i int)   { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullInvoiceLine) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullArrayUnionNullInvoiceLine) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullArrayUnionNullInvoiceLine) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullArrayUnionNullInvoiceLine) Finalize() {}

func (r *UnionNullArrayUnionNullInvoiceLine) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullArrayUnionNullInvoiceLineTypeEnumArrayUnionNullInvoiceLine:
		return json.Marshal(map[string]interface{}{"array": r.ArrayUnionNullInvoiceLine})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullArrayUnionNullInvoiceLine")
}

func (r *UnionNullArrayUnionNullInvoiceLine) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["array"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.ArrayUnionNullInvoiceLine)
	}
	return fmt.Errorf("invalid value for *UnionNullArrayUnionNullInvoiceLine")
}
