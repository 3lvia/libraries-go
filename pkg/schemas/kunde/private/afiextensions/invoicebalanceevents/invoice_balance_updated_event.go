// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100363_1.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type InvoiceBalanceUpdatedEvent struct {
	ActorId *UnionNullLong `json:"ActorId"`

	Balance *UnionNullDouble `json:"Balance"`

	Cid *UnionNullString `json:"Cid"`

	CreatedTime *UnionNullLong `json:"CreatedTime"`

	DateCredited *UnionNullLong `json:"DateCredited"`

	EventType *UnionNullString `json:"EventType"`

	ExternalCustomerGUID *UnionNullString `json:"ExternalCustomerGUID"`

	ExternalCustomerReference *UnionNullString `json:"ExternalCustomerReference"`

	Id *UnionNullString `json:"Id"`

	InvoiceAgreementId *UnionNullLong `json:"InvoiceAgreementId"`

	InvoiceNumber int64 `json:"InvoiceNumber"`
}

const InvoiceBalanceUpdatedEventAvroCRC64Fingerprint = "/\xe5\xd1\xcc\v\x88]\xee"

func NewInvoiceBalanceUpdatedEvent() InvoiceBalanceUpdatedEvent {
	r := InvoiceBalanceUpdatedEvent{}
	r.ActorId = nil
	r.Balance = nil
	r.Cid = nil
	r.CreatedTime = nil
	r.DateCredited = nil
	r.EventType = nil
	r.ExternalCustomerGUID = nil
	r.ExternalCustomerReference = nil
	r.Id = nil
	r.InvoiceAgreementId = nil
	return r
}

func DeserializeInvoiceBalanceUpdatedEvent(r io.Reader) (InvoiceBalanceUpdatedEvent, error) {
	t := NewInvoiceBalanceUpdatedEvent()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeInvoiceBalanceUpdatedEventFromSchema(r io.Reader, schema string) (InvoiceBalanceUpdatedEvent, error) {
	t := NewInvoiceBalanceUpdatedEvent()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeInvoiceBalanceUpdatedEvent(r InvoiceBalanceUpdatedEvent, w io.Writer) error {
	var err error
	err = writeUnionNullLong(r.ActorId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDouble(r.Balance, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Cid, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.CreatedTime, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.DateCredited, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EventType, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ExternalCustomerGUID, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ExternalCustomerReference, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Id, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.InvoiceAgreementId, w)
	if err != nil {
		return err
	}
	err = vm.WriteLong(r.InvoiceNumber, w)
	if err != nil {
		return err
	}
	return err
}

func (r InvoiceBalanceUpdatedEvent) Serialize(w io.Writer) error {
	return writeInvoiceBalanceUpdatedEvent(r, w)
}

func (r InvoiceBalanceUpdatedEvent) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"ActorId\",\"type\":[\"null\",\"long\"]},{\"default\":null,\"name\":\"Balance\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"Cid\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CreatedTime\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"DateCredited\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"EventType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ExternalCustomerGUID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ExternalCustomerReference\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"InvoiceAgreementId\",\"type\":[\"null\",\"long\"]},{\"name\":\"InvoiceNumber\",\"type\":\"long\"}],\"name\":\"Afiextensions.Schemas.InvoiceBalanceEvents.V1.InvoiceBalanceUpdatedEvent\",\"type\":\"record\"}"
}

func (r InvoiceBalanceUpdatedEvent) SchemaName() string {
	return "Afiextensions.Schemas.InvoiceBalanceEvents.V1.InvoiceBalanceUpdatedEvent"
}

func (_ InvoiceBalanceUpdatedEvent) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ InvoiceBalanceUpdatedEvent) SetInt(v int32)       { panic("Unsupported operation") }
func (_ InvoiceBalanceUpdatedEvent) SetLong(v int64)      { panic("Unsupported operation") }
func (_ InvoiceBalanceUpdatedEvent) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ InvoiceBalanceUpdatedEvent) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ InvoiceBalanceUpdatedEvent) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ InvoiceBalanceUpdatedEvent) SetString(v string)   { panic("Unsupported operation") }
func (_ InvoiceBalanceUpdatedEvent) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *InvoiceBalanceUpdatedEvent) Get(i int) types.Field {
	switch i {
	case 0:
		r.ActorId = NewUnionNullLong()

		return r.ActorId
	case 1:
		r.Balance = NewUnionNullDouble()

		return r.Balance
	case 2:
		r.Cid = NewUnionNullString()

		return r.Cid
	case 3:
		r.CreatedTime = NewUnionNullLong()

		return r.CreatedTime
	case 4:
		r.DateCredited = NewUnionNullLong()

		return r.DateCredited
	case 5:
		r.EventType = NewUnionNullString()

		return r.EventType
	case 6:
		r.ExternalCustomerGUID = NewUnionNullString()

		return r.ExternalCustomerGUID
	case 7:
		r.ExternalCustomerReference = NewUnionNullString()

		return r.ExternalCustomerReference
	case 8:
		r.Id = NewUnionNullString()

		return r.Id
	case 9:
		r.InvoiceAgreementId = NewUnionNullLong()

		return r.InvoiceAgreementId
	case 10:
		w := types.Long{Target: &r.InvoiceNumber}

		return w

	}
	panic("Unknown field index")
}

func (r *InvoiceBalanceUpdatedEvent) SetDefault(i int) {
	switch i {
	case 0:
		r.ActorId = nil
		return
	case 1:
		r.Balance = nil
		return
	case 2:
		r.Cid = nil
		return
	case 3:
		r.CreatedTime = nil
		return
	case 4:
		r.DateCredited = nil
		return
	case 5:
		r.EventType = nil
		return
	case 6:
		r.ExternalCustomerGUID = nil
		return
	case 7:
		r.ExternalCustomerReference = nil
		return
	case 8:
		r.Id = nil
		return
	case 9:
		r.InvoiceAgreementId = nil
		return
	}
	panic("Unknown field index")
}

func (r *InvoiceBalanceUpdatedEvent) NullField(i int) {
	switch i {
	case 0:
		r.ActorId = nil
		return
	case 1:
		r.Balance = nil
		return
	case 2:
		r.Cid = nil
		return
	case 3:
		r.CreatedTime = nil
		return
	case 4:
		r.DateCredited = nil
		return
	case 5:
		r.EventType = nil
		return
	case 6:
		r.ExternalCustomerGUID = nil
		return
	case 7:
		r.ExternalCustomerReference = nil
		return
	case 8:
		r.Id = nil
		return
	case 9:
		r.InvoiceAgreementId = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ InvoiceBalanceUpdatedEvent) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ InvoiceBalanceUpdatedEvent) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ InvoiceBalanceUpdatedEvent) HintSize(int)                     { panic("Unsupported operation") }
func (_ InvoiceBalanceUpdatedEvent) Finalize()                        {}

func (_ InvoiceBalanceUpdatedEvent) AvroCRC64Fingerprint() []byte {
	return []byte(InvoiceBalanceUpdatedEventAvroCRC64Fingerprint)
}

func (r InvoiceBalanceUpdatedEvent) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["ActorId"], err = json.Marshal(r.ActorId)
	if err != nil {
		return nil, err
	}
	output["Balance"], err = json.Marshal(r.Balance)
	if err != nil {
		return nil, err
	}
	output["Cid"], err = json.Marshal(r.Cid)
	if err != nil {
		return nil, err
	}
	output["CreatedTime"], err = json.Marshal(r.CreatedTime)
	if err != nil {
		return nil, err
	}
	output["DateCredited"], err = json.Marshal(r.DateCredited)
	if err != nil {
		return nil, err
	}
	output["EventType"], err = json.Marshal(r.EventType)
	if err != nil {
		return nil, err
	}
	output["ExternalCustomerGUID"], err = json.Marshal(r.ExternalCustomerGUID)
	if err != nil {
		return nil, err
	}
	output["ExternalCustomerReference"], err = json.Marshal(r.ExternalCustomerReference)
	if err != nil {
		return nil, err
	}
	output["Id"], err = json.Marshal(r.Id)
	if err != nil {
		return nil, err
	}
	output["InvoiceAgreementId"], err = json.Marshal(r.InvoiceAgreementId)
	if err != nil {
		return nil, err
	}
	output["InvoiceNumber"], err = json.Marshal(r.InvoiceNumber)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *InvoiceBalanceUpdatedEvent) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["ActorId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ActorId); err != nil {
			return err
		}
	} else {
		r.ActorId = NewUnionNullLong()

		r.ActorId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Balance"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Balance); err != nil {
			return err
		}
	} else {
		r.Balance = NewUnionNullDouble()

		r.Balance = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Cid"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Cid); err != nil {
			return err
		}
	} else {
		r.Cid = NewUnionNullString()

		r.Cid = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CreatedTime"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CreatedTime); err != nil {
			return err
		}
	} else {
		r.CreatedTime = NewUnionNullLong()

		r.CreatedTime = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DateCredited"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DateCredited); err != nil {
			return err
		}
	} else {
		r.DateCredited = NewUnionNullLong()

		r.DateCredited = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["EventType"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EventType); err != nil {
			return err
		}
	} else {
		r.EventType = NewUnionNullString()

		r.EventType = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ExternalCustomerGUID"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ExternalCustomerGUID); err != nil {
			return err
		}
	} else {
		r.ExternalCustomerGUID = NewUnionNullString()

		r.ExternalCustomerGUID = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ExternalCustomerReference"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ExternalCustomerReference); err != nil {
			return err
		}
	} else {
		r.ExternalCustomerReference = NewUnionNullString()

		r.ExternalCustomerReference = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Id"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Id); err != nil {
			return err
		}
	} else {
		r.Id = NewUnionNullString()

		r.Id = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["InvoiceAgreementId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.InvoiceAgreementId); err != nil {
			return err
		}
	} else {
		r.InvoiceAgreementId = NewUnionNullLong()

		r.InvoiceAgreementId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["InvoiceNumber"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.InvoiceNumber); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for InvoiceNumber")
	}
	return nil
}
