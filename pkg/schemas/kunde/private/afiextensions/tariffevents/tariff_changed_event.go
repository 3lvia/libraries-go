// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100444_4.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type TariffChangedEvent struct {
	ActorId int64 `json:"ActorId"`

	BilledToDate *UnionNullLong `json:"BilledToDate"`

	ChangedTime *UnionNullLong `json:"ChangedTime"`

	ElCertificateShare *UnionNullBytes `json:"ElCertificateShare"`

	ElFee Bytes `json:"ElFee"`

	EnovaFee *UnionNullEnovaFee `json:"EnovaFee"`

	EventId string `json:"EventId"`

	EventType string `json:"EventType"`

	ExternalCustomerGuid *UnionNullString `json:"ExternalCustomerGuid"`

	ExternalCustomerReference *UnionNullString `json:"ExternalCustomerReference"`

	FromDate int64 `json:"FromDate"`

	HasVat bool `json:"HasVat"`

	Id string `json:"Id"`

	IsOrganization bool `json:"IsOrganization"`

	LabelFields []LabelValue `json:"LabelFields"`

	MarginalLoss bool `json:"MarginalLoss"`

	MarginalLossCentralPointId *UnionNullString `json:"MarginalLossCentralPointId"`

	MarginalLossDistributionRateId *UnionNullString `json:"MarginalLossDistributionRateId"`

	MarginalLossRegionalPointId *UnionNullString `json:"MarginalLossRegionalPointId"`

	MeterPointId string `json:"MeterPointId"`

	SalesOrder SalesOrder `json:"SalesOrder"`

	SalesOrderSerialNumber int64 `json:"SalesOrderSerialNumber"`

	SerialNumber int64 `json:"SerialNumber"`

	TariffDescription *UnionNullString `json:"TariffDescription"`

	TariffId *UnionNullString `json:"TariffId"`

	TaxGroup *UnionNullTaxGroup `json:"TaxGroup"`
}

const TariffChangedEventAvroCRC64Fingerprint = "\xe0\xe1\xcePQ\x8b\xed\xf4"

func NewTariffChangedEvent() TariffChangedEvent {
	r := TariffChangedEvent{}
	r.BilledToDate = nil
	r.ChangedTime = nil
	r.ElCertificateShare = nil
	r.EnovaFee = nil
	r.ExternalCustomerGuid = nil
	r.ExternalCustomerReference = nil
	r.LabelFields = make([]LabelValue, 0)

	r.MarginalLossCentralPointId = nil
	r.MarginalLossDistributionRateId = nil
	r.MarginalLossRegionalPointId = nil
	r.SalesOrder = NewSalesOrder()

	r.TariffDescription = nil
	r.TariffId = nil
	r.TaxGroup = nil
	return r
}

func DeserializeTariffChangedEvent(r io.Reader) (TariffChangedEvent, error) {
	t := NewTariffChangedEvent()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeTariffChangedEventFromSchema(r io.Reader, schema string) (TariffChangedEvent, error) {
	t := NewTariffChangedEvent()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeTariffChangedEvent(r TariffChangedEvent, w io.Writer) error {
	var err error
	err = vm.WriteLong(r.ActorId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.BilledToDate, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.ChangedTime, w)
	if err != nil {
		return err
	}
	err = writeUnionNullBytes(r.ElCertificateShare, w)
	if err != nil {
		return err
	}
	err = vm.WriteBytes(r.ElFee, w)
	if err != nil {
		return err
	}
	err = writeUnionNullEnovaFee(r.EnovaFee, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.EventId, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.EventType, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ExternalCustomerGuid, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ExternalCustomerReference, w)
	if err != nil {
		return err
	}
	err = vm.WriteLong(r.FromDate, w)
	if err != nil {
		return err
	}
	err = vm.WriteBool(r.HasVat, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Id, w)
	if err != nil {
		return err
	}
	err = vm.WriteBool(r.IsOrganization, w)
	if err != nil {
		return err
	}
	err = writeArrayLabelValue(r.LabelFields, w)
	if err != nil {
		return err
	}
	err = vm.WriteBool(r.MarginalLoss, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.MarginalLossCentralPointId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.MarginalLossDistributionRateId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.MarginalLossRegionalPointId, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.MeterPointId, w)
	if err != nil {
		return err
	}
	err = writeSalesOrder(r.SalesOrder, w)
	if err != nil {
		return err
	}
	err = vm.WriteLong(r.SalesOrderSerialNumber, w)
	if err != nil {
		return err
	}
	err = vm.WriteLong(r.SerialNumber, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TariffDescription, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TariffId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullTaxGroup(r.TaxGroup, w)
	if err != nil {
		return err
	}
	return err
}

func (r TariffChangedEvent) Serialize(w io.Writer) error {
	return writeTariffChangedEvent(r, w)
}

func (r TariffChangedEvent) Schema() string {
	return "{\"fields\":[{\"name\":\"ActorId\",\"type\":\"long\"},{\"default\":null,\"name\":\"BilledToDate\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"ChangedTime\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"ElCertificateShare\",\"type\":[\"null\",{\"logicalType\":\"decimal\",\"precision\":29,\"scale\":14,\"type\":\"bytes\"}]},{\"name\":\"ElFee\",\"type\":{\"logicalType\":\"decimal\",\"precision\":29,\"scale\":14,\"type\":\"bytes\"}},{\"default\":null,\"name\":\"EnovaFee\",\"type\":[\"null\",{\"fields\":[{\"name\":\"Fee\",\"type\":{\"logicalType\":\"decimal\",\"precision\":29,\"scale\":14,\"type\":\"bytes\"}},{\"name\":\"Type\",\"type\":{\"name\":\"EnovaFeeType\",\"symbols\":[\"Fixed\",\"ConsumptionDependent\"],\"type\":\"enum\"}}],\"name\":\"EnovaFee\",\"type\":\"record\"}]},{\"name\":\"EventId\",\"type\":\"string\"},{\"name\":\"EventType\",\"type\":\"string\"},{\"default\":null,\"name\":\"ExternalCustomerGuid\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ExternalCustomerReference\",\"type\":[\"null\",\"string\"]},{\"name\":\"FromDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"name\":\"HasVat\",\"type\":\"boolean\"},{\"name\":\"Id\",\"type\":\"string\"},{\"name\":\"IsOrganization\",\"type\":\"boolean\"},{\"name\":\"LabelFields\",\"type\":{\"items\":{\"fields\":[{\"name\":\"Field\",\"type\":\"string\"},{\"name\":\"Label\",\"type\":\"string\"},{\"name\":\"Value\",\"type\":\"string\"}],\"name\":\"LabelValue\",\"type\":\"record\"},\"type\":\"array\"}},{\"name\":\"MarginalLoss\",\"type\":\"boolean\"},{\"default\":null,\"name\":\"MarginalLossCentralPointId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MarginalLossDistributionRateId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MarginalLossRegionalPointId\",\"type\":[\"null\",\"string\"]},{\"name\":\"MeterPointId\",\"type\":\"string\"},{\"name\":\"SalesOrder\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"ActorId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Balance\",\"type\":[\"null\",{\"fields\":[{\"name\":\"Amount\",\"type\":{\"logicalType\":\"decimal\",\"precision\":29,\"scale\":14,\"type\":\"bytes\"}},{\"default\":null,\"name\":\"CurrencyCode\",\"type\":[\"null\",\"string\"]}],\"name\":\"Money\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"BilledToDate\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"BillingGroupId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"BillingGroupTermId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"BillingStatus\",\"type\":[\"null\",{\"name\":\"BillingStatus\",\"symbols\":[\"Open\",\"BlockedForBilling\",\"ManualFinalBilling\",\"ManualFinalBillingAndBlockedForBilling\",\"ManualFinalBillingAndBlockedForBatchBilling\",\"ManualFinalBillingAndBlockedForAllBilling\",\"ManualBlockingBatchBilling\",\"BlockedForAllBilling\",\"BlockedByTakeoverWithoutSupplierChange\",\"BlockedByOutsideThresholdValue\",\"BlockedByOutsideThresholdValueVolumePercent\",\"ApprovedOutsideThresholdValueForBilling\",\"ApprovedOutsideThresholdValueForBillingToManualFinalBilling\"],\"type\":\"enum\"}]},{\"default\":null,\"name\":\"BillingType\",\"type\":[\"null\",{\"name\":\"BillingType\",\"symbols\":[\"SettlementOrOnAccount\",\"Settlement\",\"EnergySettlement\",\"OnAccountInvoicing\",\"AnnualSettlementAfterEnergySettlement\",\"SettlementOfAdditionalOrders\"],\"type\":\"enum\"}]},{\"name\":\"ClosedForInvoicingChanges\",\"type\":{\"items\":{\"fields\":[{\"default\":null,\"name\":\"CreatedDate\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Subject\",\"type\":[\"null\",\"string\"]}],\"name\":\"ClosedForInvoicingChange\",\"type\":\"record\"},\"type\":\"array\"}},{\"default\":null,\"name\":\"ConsumptionCode\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]}],\"name\":\"ConsumptionCode\",\"type\":\"record\"}]},{\"name\":\"Counters\",\"type\":{\"items\":{\"fields\":[{\"default\":null,\"name\":\"DeliveryPointCounterId\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"Directionn\",\"type\":[\"null\",{\"name\":\"Direction\",\"symbols\":[\"Production\",\"Consumption\"],\"type\":\"enum\"}]},{\"default\":null,\"name\":\"FromDate\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LastReadingDate\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NumberOfDecimals\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"NumberOfDigits\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"PendingApproval\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"Product\",\"type\":[\"null\",{\"name\":\"ProductType\",\"symbols\":[\"ActiveEnergy\",\"ActivePower\",\"ReactiveEnergy\",\"ReactivePower\",\"DistrictHeatingEnergy\",\"DistrictHeatingPower\",\"DistrictHeatingWaterVolume\",\"DistrictHeatingWaterDelivered\",\"NaturalGasEnergy\",\"NaturalGasVolume\",\"NaturalGasNormalizedVolume\",\"CapacitiveReactiveEnergy\",\"CapacitiveReactivePower\",\"InductiveReactiveEnergy\",\"InductiveReactivePower\",\"ActualProduction\",\"PlannedProduction\",\"ReviewedProductionInElSpot\",\"ActualConsumption\",\"ReviewedConsumptionInElSpot\",\"ConcessionPower\",\"ReplacementPower\",\"IndustryContracts\",\"RKImbalanceAsBalanceResponsibleForGridOwner\",\"EnergyPart\",\"MarginalLossRates\",\"NaturalGasControlVolume\",\"NaturalGasCorrectedVolume\",\"ActiveEnergyPPC\",\"ActiveEnergyFPC\",\"DistrictHeatingSteppedMeasured\",\"DistrictHeatingTemperatureInlet\",\"DistrictHeatingTemperatureOutlet\",\"DistrictHeatingVolBasedAvgTempIn\",\"DistrictHeatingVolBasedAvgTempOut\",\"DistrictCoolingEnergy\",\"DistrictCoolingWaterVolume\",\"DistrictCoolingTemperatureInlet\",\"DistrictCoolingTemperatureOutlet\",\"DistrictCoolingVolBasedAvgTempIn\",\"DistrictCoolingVolBasedAvgTempOut\",\"InvoiceShareElectricity\",\"InvoiceShareCooling\",\"InvoiceShareGasEnergy\",\"InvoiceShareGasVolume\",\"DistrictHeatingVolumeBasedAverageTemperatureInlet\",\"DistrictHeatingVolumeBasedAverageTemperatureOutlet\",\"DistrictCoolingVolumeBasedAverageTemperatureInlet\",\"DistrictCoolingVolumeBasedAverageTemperatureOutlet\",\"ActiveEnergyControl\",\"CustomProduct\"],\"type\":\"enum\"}]},{\"default\":null,\"name\":\"ReadingType\",\"type\":[\"null\",{\"name\":\"ReadingType\",\"symbols\":[\"Hourly\",\"Manual\"],\"type\":\"enum\"}]},{\"default\":null,\"name\":\"ToDate\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Unit\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"YearlyConsumption\",\"type\":[\"null\",\"int\"]}],\"name\":\"Counter\",\"type\":\"record\"},\"type\":\"array\"}},{\"default\":null,\"name\":\"DeliveryPointId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DeliveryToDate\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"FreeFieldsId\",\"type\":[\"null\",{\"items\":\"string\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"FreePowerReflected\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"FromDate\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IndustryCode\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SsbStandard\",\"type\":[\"null\",\"int\"]}],\"name\":\"IndustryCode\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"InvoiceAgreementId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ItemSalesId\",\"type\":[\"null\",{\"items\":\"string\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"LocationAddress\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"AddressFreeForm\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"City\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CountryCode\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"HouseNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MunicipalityId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PropertyUnitNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"StreetName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ZipCode\",\"type\":[\"null\",\"string\"]}],\"name\":\"LocationAddress\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"MeterId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MonitoringStatus\",\"type\":[\"null\",{\"name\":\"MonitoringStatus\",\"symbols\":[\"OnTheWatchList\",\"ApprovedForBilling\",\"NotOnTheWatchList\"],\"type\":\"enum\"}]},{\"default\":null,\"name\":\"NotificationChannel\",\"type\":[\"null\",{\"name\":\"CommunicationChannelType\",\"symbols\":[\"Casehandling\",\"Chat\",\"ISCustomer\",\"EMail\",\"Facebook\",\"Fax\",\"PersonalAttendance\",\"Letter\",\"Sms\",\"Phone\",\"Web\",\"ISChange\",\"Elhub\",\"Power\",\"Net\",\"DSF\",\"ISSafe\"],\"type\":\"enum\"}]},{\"default\":null,\"name\":\"NotificationEffectLimit\",\"type\":[\"null\",{\"logicalType\":\"decimal\",\"precision\":29,\"scale\":14,\"type\":\"bytes\"}]},{\"default\":null,\"name\":\"NotificationInterval\",\"type\":[\"null\",{\"name\":\"NotificationInterval\",\"symbols\":[\"Never\",\"Daily\",\"Weekly\",\"Monthly\"],\"type\":\"enum\"}]},{\"default\":null,\"name\":\"OperatingUnitId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"OperatingUnitSubType\",\"type\":[\"null\",{\"name\":\"SalesOrderOperatingUnitSubType\",\"symbols\":[\"Distribution\",\"Sales\",\"SalesAndDistribution\"],\"type\":\"enum\"}]},{\"default\":null,\"name\":\"OrderSupplier\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"FromDate\",\"type\":[\"null\",\"string\"]},{\"name\":\"HourlyRead\",\"type\":\"boolean\"},{\"default\":null,\"name\":\"SettlementMethod\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SupplierId\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"ToDate\",\"type\":[\"null\",\"string\"]}],\"name\":\"OrderSupplier\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"ProductionPercentage\",\"type\":[\"null\",{\"logicalType\":\"decimal\",\"precision\":29,\"scale\":14,\"type\":\"bytes\"}]},{\"default\":null,\"name\":\"ReadyToBeInvoiced\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"SerialNumber\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"ShortTermSubscription\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Status\",\"type\":[\"null\",{\"name\":\"SalesOrderStatus\",\"symbols\":[\"All\",\"Active\",\"Anulled\",\"NeedsPriceChange\",\"HandOverInProgress\",\"AboutToBeClosed\",\"Closed\",\"InCloseProcess\",\"AnullmentInitialised\",\"ActivationInitialised\"],\"type\":\"enum\"}]},{\"default\":null,\"name\":\"SundryExpenceSalesId\",\"type\":[\"null\",{\"items\":\"string\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"SupplementaryProductSalesId\",\"type\":[\"null\",{\"items\":\"string\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"TariffSalesId\",\"type\":[\"null\",{\"items\":\"string\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"TermNumber\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"TermYear\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"ThresholdValueSum\",\"type\":[\"null\",\"Afiextensions.Schemas.TariffEvents.V1.Money\"]},{\"default\":null,\"name\":\"ThresholdValueUpperLimit\",\"type\":[\"null\",\"Afiextensions.Schemas.TariffEvents.V1.Money\"]},{\"default\":null,\"name\":\"ToDate\",\"type\":[\"null\",\"string\"]}],\"name\":\"SalesOrder\",\"type\":\"record\"}},{\"name\":\"SalesOrderSerialNumber\",\"type\":\"long\"},{\"name\":\"SerialNumber\",\"type\":\"long\"},{\"default\":null,\"name\":\"TariffDescription\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TariffId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxGroup\",\"type\":[\"null\",{\"fields\":[{\"name\":\"Description\",\"type\":\"string\"},{\"name\":\"TaxGroupId\",\"type\":\"string\"},{\"name\":\"TaxGroupLines\",\"type\":{\"items\":{\"fields\":[{\"default\":null,\"name\":\"Formula\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LineNumber\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"ParameterLabel\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ParameterNumber\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"PercentOfTheBasis\",\"type\":[\"null\",\"float\"]},{\"default\":null,\"name\":\"PriceCode\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"StandardPriceId\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"TaxGroupId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxGroupPrices\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"default\":null,\"name\":\"AlternativaTaxGroupPrice\",\"type\":[\"null\",{\"logicalType\":\"decimal\",\"precision\":29,\"scale\":14,\"type\":\"bytes\"}]},{\"default\":null,\"name\":\"FromDate\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LimitValue\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"LineNumber\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"Price\",\"type\":[\"null\",{\"logicalType\":\"decimal\",\"precision\":29,\"scale\":14,\"type\":\"bytes\"}]}],\"name\":\"TaxGroupPrice\",\"type\":\"record\"},\"type\":\"array\"}]},{\"default\":null,\"name\":\"VatId\",\"type\":[\"null\",\"string\"]}],\"name\":\"TaxGroupLine\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"TaxGroup\",\"type\":\"record\"}]}],\"name\":\"Afiextensions.Schemas.TariffEvents.V1.TariffChangedEvent\",\"type\":\"record\"}"
}

func (r TariffChangedEvent) SchemaName() string {
	return "Afiextensions.Schemas.TariffEvents.V1.TariffChangedEvent"
}

func (_ TariffChangedEvent) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ TariffChangedEvent) SetInt(v int32)       { panic("Unsupported operation") }
func (_ TariffChangedEvent) SetLong(v int64)      { panic("Unsupported operation") }
func (_ TariffChangedEvent) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ TariffChangedEvent) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ TariffChangedEvent) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ TariffChangedEvent) SetString(v string)   { panic("Unsupported operation") }
func (_ TariffChangedEvent) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *TariffChangedEvent) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.Long{Target: &r.ActorId}

		return w

	case 1:
		r.BilledToDate = NewUnionNullLong()

		return r.BilledToDate
	case 2:
		r.ChangedTime = NewUnionNullLong()

		return r.ChangedTime
	case 3:
		r.ElCertificateShare = NewUnionNullBytes()

		return r.ElCertificateShare
	case 4:
		w := BytesWrapper{Target: &r.ElFee}

		return w

	case 5:
		r.EnovaFee = NewUnionNullEnovaFee()

		return r.EnovaFee
	case 6:
		w := types.String{Target: &r.EventId}

		return w

	case 7:
		w := types.String{Target: &r.EventType}

		return w

	case 8:
		r.ExternalCustomerGuid = NewUnionNullString()

		return r.ExternalCustomerGuid
	case 9:
		r.ExternalCustomerReference = NewUnionNullString()

		return r.ExternalCustomerReference
	case 10:
		w := types.Long{Target: &r.FromDate}

		return w

	case 11:
		w := types.Boolean{Target: &r.HasVat}

		return w

	case 12:
		w := types.String{Target: &r.Id}

		return w

	case 13:
		w := types.Boolean{Target: &r.IsOrganization}

		return w

	case 14:
		r.LabelFields = make([]LabelValue, 0)

		w := ArrayLabelValueWrapper{Target: &r.LabelFields}

		return w

	case 15:
		w := types.Boolean{Target: &r.MarginalLoss}

		return w

	case 16:
		r.MarginalLossCentralPointId = NewUnionNullString()

		return r.MarginalLossCentralPointId
	case 17:
		r.MarginalLossDistributionRateId = NewUnionNullString()

		return r.MarginalLossDistributionRateId
	case 18:
		r.MarginalLossRegionalPointId = NewUnionNullString()

		return r.MarginalLossRegionalPointId
	case 19:
		w := types.String{Target: &r.MeterPointId}

		return w

	case 20:
		r.SalesOrder = NewSalesOrder()

		w := types.Record{Target: &r.SalesOrder}

		return w

	case 21:
		w := types.Long{Target: &r.SalesOrderSerialNumber}

		return w

	case 22:
		w := types.Long{Target: &r.SerialNumber}

		return w

	case 23:
		r.TariffDescription = NewUnionNullString()

		return r.TariffDescription
	case 24:
		r.TariffId = NewUnionNullString()

		return r.TariffId
	case 25:
		r.TaxGroup = NewUnionNullTaxGroup()

		return r.TaxGroup
	}
	panic("Unknown field index")
}

func (r *TariffChangedEvent) SetDefault(i int) {
	switch i {
	case 1:
		r.BilledToDate = nil
		return
	case 2:
		r.ChangedTime = nil
		return
	case 3:
		r.ElCertificateShare = nil
		return
	case 5:
		r.EnovaFee = nil
		return
	case 8:
		r.ExternalCustomerGuid = nil
		return
	case 9:
		r.ExternalCustomerReference = nil
		return
	case 16:
		r.MarginalLossCentralPointId = nil
		return
	case 17:
		r.MarginalLossDistributionRateId = nil
		return
	case 18:
		r.MarginalLossRegionalPointId = nil
		return
	case 23:
		r.TariffDescription = nil
		return
	case 24:
		r.TariffId = nil
		return
	case 25:
		r.TaxGroup = nil
		return
	}
	panic("Unknown field index")
}

func (r *TariffChangedEvent) NullField(i int) {
	switch i {
	case 1:
		r.BilledToDate = nil
		return
	case 2:
		r.ChangedTime = nil
		return
	case 3:
		r.ElCertificateShare = nil
		return
	case 5:
		r.EnovaFee = nil
		return
	case 8:
		r.ExternalCustomerGuid = nil
		return
	case 9:
		r.ExternalCustomerReference = nil
		return
	case 16:
		r.MarginalLossCentralPointId = nil
		return
	case 17:
		r.MarginalLossDistributionRateId = nil
		return
	case 18:
		r.MarginalLossRegionalPointId = nil
		return
	case 23:
		r.TariffDescription = nil
		return
	case 24:
		r.TariffId = nil
		return
	case 25:
		r.TaxGroup = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ TariffChangedEvent) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ TariffChangedEvent) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ TariffChangedEvent) HintSize(int)                     { panic("Unsupported operation") }
func (_ TariffChangedEvent) Finalize()                        {}

func (_ TariffChangedEvent) AvroCRC64Fingerprint() []byte {
	return []byte(TariffChangedEventAvroCRC64Fingerprint)
}

func (r TariffChangedEvent) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["ActorId"], err = json.Marshal(r.ActorId)
	if err != nil {
		return nil, err
	}
	output["BilledToDate"], err = json.Marshal(r.BilledToDate)
	if err != nil {
		return nil, err
	}
	output["ChangedTime"], err = json.Marshal(r.ChangedTime)
	if err != nil {
		return nil, err
	}
	output["ElCertificateShare"], err = json.Marshal(r.ElCertificateShare)
	if err != nil {
		return nil, err
	}
	output["ElFee"], err = json.Marshal(r.ElFee)
	if err != nil {
		return nil, err
	}
	output["EnovaFee"], err = json.Marshal(r.EnovaFee)
	if err != nil {
		return nil, err
	}
	output["EventId"], err = json.Marshal(r.EventId)
	if err != nil {
		return nil, err
	}
	output["EventType"], err = json.Marshal(r.EventType)
	if err != nil {
		return nil, err
	}
	output["ExternalCustomerGuid"], err = json.Marshal(r.ExternalCustomerGuid)
	if err != nil {
		return nil, err
	}
	output["ExternalCustomerReference"], err = json.Marshal(r.ExternalCustomerReference)
	if err != nil {
		return nil, err
	}
	output["FromDate"], err = json.Marshal(r.FromDate)
	if err != nil {
		return nil, err
	}
	output["HasVat"], err = json.Marshal(r.HasVat)
	if err != nil {
		return nil, err
	}
	output["Id"], err = json.Marshal(r.Id)
	if err != nil {
		return nil, err
	}
	output["IsOrganization"], err = json.Marshal(r.IsOrganization)
	if err != nil {
		return nil, err
	}
	output["LabelFields"], err = json.Marshal(r.LabelFields)
	if err != nil {
		return nil, err
	}
	output["MarginalLoss"], err = json.Marshal(r.MarginalLoss)
	if err != nil {
		return nil, err
	}
	output["MarginalLossCentralPointId"], err = json.Marshal(r.MarginalLossCentralPointId)
	if err != nil {
		return nil, err
	}
	output["MarginalLossDistributionRateId"], err = json.Marshal(r.MarginalLossDistributionRateId)
	if err != nil {
		return nil, err
	}
	output["MarginalLossRegionalPointId"], err = json.Marshal(r.MarginalLossRegionalPointId)
	if err != nil {
		return nil, err
	}
	output["MeterPointId"], err = json.Marshal(r.MeterPointId)
	if err != nil {
		return nil, err
	}
	output["SalesOrder"], err = json.Marshal(r.SalesOrder)
	if err != nil {
		return nil, err
	}
	output["SalesOrderSerialNumber"], err = json.Marshal(r.SalesOrderSerialNumber)
	if err != nil {
		return nil, err
	}
	output["SerialNumber"], err = json.Marshal(r.SerialNumber)
	if err != nil {
		return nil, err
	}
	output["TariffDescription"], err = json.Marshal(r.TariffDescription)
	if err != nil {
		return nil, err
	}
	output["TariffId"], err = json.Marshal(r.TariffId)
	if err != nil {
		return nil, err
	}
	output["TaxGroup"], err = json.Marshal(r.TaxGroup)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *TariffChangedEvent) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["ActorId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ActorId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ActorId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["BilledToDate"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.BilledToDate); err != nil {
			return err
		}
	} else {
		r.BilledToDate = NewUnionNullLong()

		r.BilledToDate = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ChangedTime"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ChangedTime); err != nil {
			return err
		}
	} else {
		r.ChangedTime = NewUnionNullLong()

		r.ChangedTime = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ElCertificateShare"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ElCertificateShare); err != nil {
			return err
		}
	} else {
		r.ElCertificateShare = NewUnionNullBytes()

		r.ElCertificateShare = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ElFee"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ElFee); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ElFee")
	}
	val = func() json.RawMessage {
		if v, ok := fields["EnovaFee"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EnovaFee); err != nil {
			return err
		}
	} else {
		r.EnovaFee = NewUnionNullEnovaFee()

		r.EnovaFee = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["EventId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EventId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for EventId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["EventType"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EventType); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for EventType")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ExternalCustomerGuid"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ExternalCustomerGuid); err != nil {
			return err
		}
	} else {
		r.ExternalCustomerGuid = NewUnionNullString()

		r.ExternalCustomerGuid = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ExternalCustomerReference"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ExternalCustomerReference); err != nil {
			return err
		}
	} else {
		r.ExternalCustomerReference = NewUnionNullString()

		r.ExternalCustomerReference = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FromDate"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FromDate); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FromDate")
	}
	val = func() json.RawMessage {
		if v, ok := fields["HasVat"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.HasVat); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for HasVat")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Id"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Id); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Id")
	}
	val = func() json.RawMessage {
		if v, ok := fields["IsOrganization"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IsOrganization); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for IsOrganization")
	}
	val = func() json.RawMessage {
		if v, ok := fields["LabelFields"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.LabelFields); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for LabelFields")
	}
	val = func() json.RawMessage {
		if v, ok := fields["MarginalLoss"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MarginalLoss); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for MarginalLoss")
	}
	val = func() json.RawMessage {
		if v, ok := fields["MarginalLossCentralPointId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MarginalLossCentralPointId); err != nil {
			return err
		}
	} else {
		r.MarginalLossCentralPointId = NewUnionNullString()

		r.MarginalLossCentralPointId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["MarginalLossDistributionRateId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MarginalLossDistributionRateId); err != nil {
			return err
		}
	} else {
		r.MarginalLossDistributionRateId = NewUnionNullString()

		r.MarginalLossDistributionRateId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["MarginalLossRegionalPointId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MarginalLossRegionalPointId); err != nil {
			return err
		}
	} else {
		r.MarginalLossRegionalPointId = NewUnionNullString()

		r.MarginalLossRegionalPointId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["MeterPointId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MeterPointId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for MeterPointId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SalesOrder"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SalesOrder); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for SalesOrder")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SalesOrderSerialNumber"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SalesOrderSerialNumber); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for SalesOrderSerialNumber")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SerialNumber"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SerialNumber); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for SerialNumber")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TariffDescription"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TariffDescription); err != nil {
			return err
		}
	} else {
		r.TariffDescription = NewUnionNullString()

		r.TariffDescription = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TariffId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TariffId); err != nil {
			return err
		}
	} else {
		r.TariffId = NewUnionNullString()

		r.TariffId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TaxGroup"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TaxGroup); err != nil {
			return err
		}
	} else {
		r.TaxGroup = NewUnionNullTaxGroup()

		r.TaxGroup = nil
	}
	return nil
}
