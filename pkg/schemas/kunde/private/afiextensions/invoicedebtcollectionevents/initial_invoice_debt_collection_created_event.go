// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100395_1.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type InitialInvoiceDebtCollectionCreatedEvent struct {
	ActorId *UnionNullLong `json:"ActorId"`

	ActorType *UnionNullString `json:"ActorType"`

	AddressLine *UnionNullString `json:"AddressLine"`

	AddressLine2 *UnionNullString `json:"AddressLine2"`

	Amount float64 `json:"Amount"`

	CaseNumber *UnionNullString `json:"CaseNumber"`

	Cid *UnionNullString `json:"Cid"`

	City *UnionNullString `json:"City"`

	CompanyName *UnionNullString `json:"CompanyName"`

	ContactPersonName *UnionNullString `json:"ContactPersonName"`

	Country *UnionNullString `json:"Country"`

	DebtCollectionAgency int32 `json:"DebtCollectionAgency"`

	Description *UnionNullString `json:"Description"`

	DueDate *UnionNullLong `json:"DueDate"`

	DunningFeeAmount *UnionNullDouble `json:"DunningFeeAmount"`

	Email *UnionNullString `json:"Email"`

	EventType string `json:"EventType"`

	ExternalCustomerGUID *UnionNullString `json:"ExternalCustomerGUID"`

	ExternalCustomerReference *UnionNullString `json:"ExternalCustomerReference"`

	FirstName *UnionNullString `json:"FirstName"`

	Id string `json:"Id"`

	IdentityNumber *UnionNullString `json:"IdentityNumber"`

	InterestAmount *UnionNullDouble `json:"InterestAmount"`

	InvoiceAgreementId *UnionNullLong `json:"InvoiceAgreementId"`

	InvoiceDebtCollectionEventType *UnionNullString `json:"InvoiceDebtCollectionEventType"`

	InvoiceId int64 `json:"InvoiceId"`

	LastName *UnionNullString `json:"LastName"`

	MeterId *UnionNullString `json:"MeterId"`

	MeterPointAddress *UnionNullString `json:"MeterPointAddress"`

	MeterPointId *UnionNullString `json:"MeterPointId"`

	PhoneCell *UnionNullString `json:"PhoneCell"`

	PhonePrivate *UnionNullString `json:"PhonePrivate"`

	PhoneWork *UnionNullString `json:"PhoneWork"`

	ProductLineStatus *UnionNullSalesOrderStatus `json:"ProductLineStatus"`

	SourceId *UnionNullLong `json:"SourceId"`

	SourceType *UnionNullString `json:"SourceType"`

	TransactionDate *UnionNullLong `json:"TransactionDate"`

	ZipCode *UnionNullString `json:"ZipCode"`
}

const InitialInvoiceDebtCollectionCreatedEventAvroCRC64Fingerprint = "Ò–2[\x01\v\f\x16"

func NewInitialInvoiceDebtCollectionCreatedEvent() InitialInvoiceDebtCollectionCreatedEvent {
	r := InitialInvoiceDebtCollectionCreatedEvent{}
	r.ActorId = nil
	r.ActorType = nil
	r.AddressLine = nil
	r.AddressLine2 = nil
	r.CaseNumber = nil
	r.Cid = nil
	r.City = nil
	r.CompanyName = nil
	r.ContactPersonName = nil
	r.Country = nil
	r.Description = nil
	r.DueDate = nil
	r.DunningFeeAmount = nil
	r.Email = nil
	r.ExternalCustomerGUID = nil
	r.ExternalCustomerReference = nil
	r.FirstName = nil
	r.IdentityNumber = nil
	r.InterestAmount = nil
	r.InvoiceAgreementId = nil
	r.InvoiceDebtCollectionEventType = nil
	r.LastName = nil
	r.MeterId = nil
	r.MeterPointAddress = nil
	r.MeterPointId = nil
	r.PhoneCell = nil
	r.PhonePrivate = nil
	r.PhoneWork = nil
	r.ProductLineStatus = nil
	r.SourceId = nil
	r.SourceType = nil
	r.TransactionDate = nil
	r.ZipCode = nil
	return r
}

func DeserializeInitialInvoiceDebtCollectionCreatedEvent(r io.Reader) (InitialInvoiceDebtCollectionCreatedEvent, error) {
	t := NewInitialInvoiceDebtCollectionCreatedEvent()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeInitialInvoiceDebtCollectionCreatedEventFromSchema(r io.Reader, schema string) (InitialInvoiceDebtCollectionCreatedEvent, error) {
	t := NewInitialInvoiceDebtCollectionCreatedEvent()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeInitialInvoiceDebtCollectionCreatedEvent(r InitialInvoiceDebtCollectionCreatedEvent, w io.Writer) error {
	var err error
	err = writeUnionNullLong(r.ActorId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ActorType, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.AddressLine, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.AddressLine2, w)
	if err != nil {
		return err
	}
	err = vm.WriteDouble(r.Amount, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CaseNumber, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Cid, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.City, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CompanyName, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ContactPersonName, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Country, w)
	if err != nil {
		return err
	}
	err = vm.WriteInt(r.DebtCollectionAgency, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Description, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.DueDate, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDouble(r.DunningFeeAmount, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Email, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.EventType, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ExternalCustomerGUID, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ExternalCustomerReference, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FirstName, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Id, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.IdentityNumber, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDouble(r.InterestAmount, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.InvoiceAgreementId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.InvoiceDebtCollectionEventType, w)
	if err != nil {
		return err
	}
	err = vm.WriteLong(r.InvoiceId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.LastName, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.MeterId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.MeterPointAddress, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.MeterPointId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.PhoneCell, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.PhonePrivate, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.PhoneWork, w)
	if err != nil {
		return err
	}
	err = writeUnionNullSalesOrderStatus(r.ProductLineStatus, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.SourceId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SourceType, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.TransactionDate, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ZipCode, w)
	if err != nil {
		return err
	}
	return err
}

func (r InitialInvoiceDebtCollectionCreatedEvent) Serialize(w io.Writer) error {
	return writeInitialInvoiceDebtCollectionCreatedEvent(r, w)
}

func (r InitialInvoiceDebtCollectionCreatedEvent) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"ActorId\",\"type\":[\"null\",\"long\"]},{\"default\":null,\"name\":\"ActorType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"AddressLine\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"AddressLine2\",\"type\":[\"null\",\"string\"]},{\"name\":\"Amount\",\"type\":\"double\"},{\"default\":null,\"name\":\"CaseNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Cid\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"City\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CompanyName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ContactPersonName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Country\",\"type\":[\"null\",\"string\"]},{\"name\":\"DebtCollectionAgency\",\"type\":\"int\"},{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DueDate\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"DunningFeeAmount\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"Email\",\"type\":[\"null\",\"string\"]},{\"name\":\"EventType\",\"type\":\"string\"},{\"default\":null,\"name\":\"ExternalCustomerGUID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ExternalCustomerReference\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"FirstName\",\"type\":[\"null\",\"string\"]},{\"name\":\"Id\",\"type\":\"string\"},{\"default\":null,\"name\":\"IdentityNumber\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"InterestAmount\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"InvoiceAgreementId\",\"type\":[\"null\",\"long\"]},{\"default\":null,\"name\":\"InvoiceDebtCollectionEventType\",\"type\":[\"null\",\"string\"]},{\"name\":\"InvoiceId\",\"type\":\"long\"},{\"default\":null,\"name\":\"LastName\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MeterId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MeterPointAddress\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MeterPointId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PhoneCell\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PhonePrivate\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PhoneWork\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ProductLineStatus\",\"type\":[\"null\",{\"name\":\"SalesOrderStatus\",\"symbols\":[\"All\",\"Active\",\"Anulled\",\"NeedsPriceChange\",\"HandOverInProgress\",\"AboutToBeClosed\",\"Closed\",\"InCloseProcess\",\"AnullmentInitialised\",\"ActivationInitialised\"],\"type\":\"enum\"}]},{\"default\":null,\"name\":\"SourceId\",\"type\":[\"null\",\"long\"]},{\"default\":null,\"name\":\"SourceType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TransactionDate\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"ZipCode\",\"type\":[\"null\",\"string\"]}],\"name\":\"Afiextensions.Schemas.InvoiceDebtCollectionEvents.V1.InitialInvoiceDebtCollectionCreatedEvent\",\"type\":\"record\"}"
}

func (r InitialInvoiceDebtCollectionCreatedEvent) SchemaName() string {
	return "Afiextensions.Schemas.InvoiceDebtCollectionEvents.V1.InitialInvoiceDebtCollectionCreatedEvent"
}

func (_ InitialInvoiceDebtCollectionCreatedEvent) SetBoolean(v bool)  { panic("Unsupported operation") }
func (_ InitialInvoiceDebtCollectionCreatedEvent) SetInt(v int32)     { panic("Unsupported operation") }
func (_ InitialInvoiceDebtCollectionCreatedEvent) SetLong(v int64)    { panic("Unsupported operation") }
func (_ InitialInvoiceDebtCollectionCreatedEvent) SetFloat(v float32) { panic("Unsupported operation") }
func (_ InitialInvoiceDebtCollectionCreatedEvent) SetDouble(v float64) {
	panic("Unsupported operation")
}
func (_ InitialInvoiceDebtCollectionCreatedEvent) SetBytes(v []byte)  { panic("Unsupported operation") }
func (_ InitialInvoiceDebtCollectionCreatedEvent) SetString(v string) { panic("Unsupported operation") }
func (_ InitialInvoiceDebtCollectionCreatedEvent) SetUnionElem(v int64) {
	panic("Unsupported operation")
}

func (r *InitialInvoiceDebtCollectionCreatedEvent) Get(i int) types.Field {
	switch i {
	case 0:
		r.ActorId = NewUnionNullLong()

		return r.ActorId
	case 1:
		r.ActorType = NewUnionNullString()

		return r.ActorType
	case 2:
		r.AddressLine = NewUnionNullString()

		return r.AddressLine
	case 3:
		r.AddressLine2 = NewUnionNullString()

		return r.AddressLine2
	case 4:
		w := types.Double{Target: &r.Amount}

		return w

	case 5:
		r.CaseNumber = NewUnionNullString()

		return r.CaseNumber
	case 6:
		r.Cid = NewUnionNullString()

		return r.Cid
	case 7:
		r.City = NewUnionNullString()

		return r.City
	case 8:
		r.CompanyName = NewUnionNullString()

		return r.CompanyName
	case 9:
		r.ContactPersonName = NewUnionNullString()

		return r.ContactPersonName
	case 10:
		r.Country = NewUnionNullString()

		return r.Country
	case 11:
		w := types.Int{Target: &r.DebtCollectionAgency}

		return w

	case 12:
		r.Description = NewUnionNullString()

		return r.Description
	case 13:
		r.DueDate = NewUnionNullLong()

		return r.DueDate
	case 14:
		r.DunningFeeAmount = NewUnionNullDouble()

		return r.DunningFeeAmount
	case 15:
		r.Email = NewUnionNullString()

		return r.Email
	case 16:
		w := types.String{Target: &r.EventType}

		return w

	case 17:
		r.ExternalCustomerGUID = NewUnionNullString()

		return r.ExternalCustomerGUID
	case 18:
		r.ExternalCustomerReference = NewUnionNullString()

		return r.ExternalCustomerReference
	case 19:
		r.FirstName = NewUnionNullString()

		return r.FirstName
	case 20:
		w := types.String{Target: &r.Id}

		return w

	case 21:
		r.IdentityNumber = NewUnionNullString()

		return r.IdentityNumber
	case 22:
		r.InterestAmount = NewUnionNullDouble()

		return r.InterestAmount
	case 23:
		r.InvoiceAgreementId = NewUnionNullLong()

		return r.InvoiceAgreementId
	case 24:
		r.InvoiceDebtCollectionEventType = NewUnionNullString()

		return r.InvoiceDebtCollectionEventType
	case 25:
		w := types.Long{Target: &r.InvoiceId}

		return w

	case 26:
		r.LastName = NewUnionNullString()

		return r.LastName
	case 27:
		r.MeterId = NewUnionNullString()

		return r.MeterId
	case 28:
		r.MeterPointAddress = NewUnionNullString()

		return r.MeterPointAddress
	case 29:
		r.MeterPointId = NewUnionNullString()

		return r.MeterPointId
	case 30:
		r.PhoneCell = NewUnionNullString()

		return r.PhoneCell
	case 31:
		r.PhonePrivate = NewUnionNullString()

		return r.PhonePrivate
	case 32:
		r.PhoneWork = NewUnionNullString()

		return r.PhoneWork
	case 33:
		r.ProductLineStatus = NewUnionNullSalesOrderStatus()

		return r.ProductLineStatus
	case 34:
		r.SourceId = NewUnionNullLong()

		return r.SourceId
	case 35:
		r.SourceType = NewUnionNullString()

		return r.SourceType
	case 36:
		r.TransactionDate = NewUnionNullLong()

		return r.TransactionDate
	case 37:
		r.ZipCode = NewUnionNullString()

		return r.ZipCode
	}
	panic("Unknown field index")
}

func (r *InitialInvoiceDebtCollectionCreatedEvent) SetDefault(i int) {
	switch i {
	case 0:
		r.ActorId = nil
		return
	case 1:
		r.ActorType = nil
		return
	case 2:
		r.AddressLine = nil
		return
	case 3:
		r.AddressLine2 = nil
		return
	case 5:
		r.CaseNumber = nil
		return
	case 6:
		r.Cid = nil
		return
	case 7:
		r.City = nil
		return
	case 8:
		r.CompanyName = nil
		return
	case 9:
		r.ContactPersonName = nil
		return
	case 10:
		r.Country = nil
		return
	case 12:
		r.Description = nil
		return
	case 13:
		r.DueDate = nil
		return
	case 14:
		r.DunningFeeAmount = nil
		return
	case 15:
		r.Email = nil
		return
	case 17:
		r.ExternalCustomerGUID = nil
		return
	case 18:
		r.ExternalCustomerReference = nil
		return
	case 19:
		r.FirstName = nil
		return
	case 21:
		r.IdentityNumber = nil
		return
	case 22:
		r.InterestAmount = nil
		return
	case 23:
		r.InvoiceAgreementId = nil
		return
	case 24:
		r.InvoiceDebtCollectionEventType = nil
		return
	case 26:
		r.LastName = nil
		return
	case 27:
		r.MeterId = nil
		return
	case 28:
		r.MeterPointAddress = nil
		return
	case 29:
		r.MeterPointId = nil
		return
	case 30:
		r.PhoneCell = nil
		return
	case 31:
		r.PhonePrivate = nil
		return
	case 32:
		r.PhoneWork = nil
		return
	case 33:
		r.ProductLineStatus = nil
		return
	case 34:
		r.SourceId = nil
		return
	case 35:
		r.SourceType = nil
		return
	case 36:
		r.TransactionDate = nil
		return
	case 37:
		r.ZipCode = nil
		return
	}
	panic("Unknown field index")
}

func (r *InitialInvoiceDebtCollectionCreatedEvent) NullField(i int) {
	switch i {
	case 0:
		r.ActorId = nil
		return
	case 1:
		r.ActorType = nil
		return
	case 2:
		r.AddressLine = nil
		return
	case 3:
		r.AddressLine2 = nil
		return
	case 5:
		r.CaseNumber = nil
		return
	case 6:
		r.Cid = nil
		return
	case 7:
		r.City = nil
		return
	case 8:
		r.CompanyName = nil
		return
	case 9:
		r.ContactPersonName = nil
		return
	case 10:
		r.Country = nil
		return
	case 12:
		r.Description = nil
		return
	case 13:
		r.DueDate = nil
		return
	case 14:
		r.DunningFeeAmount = nil
		return
	case 15:
		r.Email = nil
		return
	case 17:
		r.ExternalCustomerGUID = nil
		return
	case 18:
		r.ExternalCustomerReference = nil
		return
	case 19:
		r.FirstName = nil
		return
	case 21:
		r.IdentityNumber = nil
		return
	case 22:
		r.InterestAmount = nil
		return
	case 23:
		r.InvoiceAgreementId = nil
		return
	case 24:
		r.InvoiceDebtCollectionEventType = nil
		return
	case 26:
		r.LastName = nil
		return
	case 27:
		r.MeterId = nil
		return
	case 28:
		r.MeterPointAddress = nil
		return
	case 29:
		r.MeterPointId = nil
		return
	case 30:
		r.PhoneCell = nil
		return
	case 31:
		r.PhonePrivate = nil
		return
	case 32:
		r.PhoneWork = nil
		return
	case 33:
		r.ProductLineStatus = nil
		return
	case 34:
		r.SourceId = nil
		return
	case 35:
		r.SourceType = nil
		return
	case 36:
		r.TransactionDate = nil
		return
	case 37:
		r.ZipCode = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ InitialInvoiceDebtCollectionCreatedEvent) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ InitialInvoiceDebtCollectionCreatedEvent) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ InitialInvoiceDebtCollectionCreatedEvent) HintSize(int) { panic("Unsupported operation") }
func (_ InitialInvoiceDebtCollectionCreatedEvent) Finalize()    {}

func (_ InitialInvoiceDebtCollectionCreatedEvent) AvroCRC64Fingerprint() []byte {
	return []byte(InitialInvoiceDebtCollectionCreatedEventAvroCRC64Fingerprint)
}

func (r InitialInvoiceDebtCollectionCreatedEvent) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["ActorId"], err = json.Marshal(r.ActorId)
	if err != nil {
		return nil, err
	}
	output["ActorType"], err = json.Marshal(r.ActorType)
	if err != nil {
		return nil, err
	}
	output["AddressLine"], err = json.Marshal(r.AddressLine)
	if err != nil {
		return nil, err
	}
	output["AddressLine2"], err = json.Marshal(r.AddressLine2)
	if err != nil {
		return nil, err
	}
	output["Amount"], err = json.Marshal(r.Amount)
	if err != nil {
		return nil, err
	}
	output["CaseNumber"], err = json.Marshal(r.CaseNumber)
	if err != nil {
		return nil, err
	}
	output["Cid"], err = json.Marshal(r.Cid)
	if err != nil {
		return nil, err
	}
	output["City"], err = json.Marshal(r.City)
	if err != nil {
		return nil, err
	}
	output["CompanyName"], err = json.Marshal(r.CompanyName)
	if err != nil {
		return nil, err
	}
	output["ContactPersonName"], err = json.Marshal(r.ContactPersonName)
	if err != nil {
		return nil, err
	}
	output["Country"], err = json.Marshal(r.Country)
	if err != nil {
		return nil, err
	}
	output["DebtCollectionAgency"], err = json.Marshal(r.DebtCollectionAgency)
	if err != nil {
		return nil, err
	}
	output["Description"], err = json.Marshal(r.Description)
	if err != nil {
		return nil, err
	}
	output["DueDate"], err = json.Marshal(r.DueDate)
	if err != nil {
		return nil, err
	}
	output["DunningFeeAmount"], err = json.Marshal(r.DunningFeeAmount)
	if err != nil {
		return nil, err
	}
	output["Email"], err = json.Marshal(r.Email)
	if err != nil {
		return nil, err
	}
	output["EventType"], err = json.Marshal(r.EventType)
	if err != nil {
		return nil, err
	}
	output["ExternalCustomerGUID"], err = json.Marshal(r.ExternalCustomerGUID)
	if err != nil {
		return nil, err
	}
	output["ExternalCustomerReference"], err = json.Marshal(r.ExternalCustomerReference)
	if err != nil {
		return nil, err
	}
	output["FirstName"], err = json.Marshal(r.FirstName)
	if err != nil {
		return nil, err
	}
	output["Id"], err = json.Marshal(r.Id)
	if err != nil {
		return nil, err
	}
	output["IdentityNumber"], err = json.Marshal(r.IdentityNumber)
	if err != nil {
		return nil, err
	}
	output["InterestAmount"], err = json.Marshal(r.InterestAmount)
	if err != nil {
		return nil, err
	}
	output["InvoiceAgreementId"], err = json.Marshal(r.InvoiceAgreementId)
	if err != nil {
		return nil, err
	}
	output["InvoiceDebtCollectionEventType"], err = json.Marshal(r.InvoiceDebtCollectionEventType)
	if err != nil {
		return nil, err
	}
	output["InvoiceId"], err = json.Marshal(r.InvoiceId)
	if err != nil {
		return nil, err
	}
	output["LastName"], err = json.Marshal(r.LastName)
	if err != nil {
		return nil, err
	}
	output["MeterId"], err = json.Marshal(r.MeterId)
	if err != nil {
		return nil, err
	}
	output["MeterPointAddress"], err = json.Marshal(r.MeterPointAddress)
	if err != nil {
		return nil, err
	}
	output["MeterPointId"], err = json.Marshal(r.MeterPointId)
	if err != nil {
		return nil, err
	}
	output["PhoneCell"], err = json.Marshal(r.PhoneCell)
	if err != nil {
		return nil, err
	}
	output["PhonePrivate"], err = json.Marshal(r.PhonePrivate)
	if err != nil {
		return nil, err
	}
	output["PhoneWork"], err = json.Marshal(r.PhoneWork)
	if err != nil {
		return nil, err
	}
	output["ProductLineStatus"], err = json.Marshal(r.ProductLineStatus)
	if err != nil {
		return nil, err
	}
	output["SourceId"], err = json.Marshal(r.SourceId)
	if err != nil {
		return nil, err
	}
	output["SourceType"], err = json.Marshal(r.SourceType)
	if err != nil {
		return nil, err
	}
	output["TransactionDate"], err = json.Marshal(r.TransactionDate)
	if err != nil {
		return nil, err
	}
	output["ZipCode"], err = json.Marshal(r.ZipCode)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *InitialInvoiceDebtCollectionCreatedEvent) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["ActorId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ActorId); err != nil {
			return err
		}
	} else {
		r.ActorId = NewUnionNullLong()

		r.ActorId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ActorType"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ActorType); err != nil {
			return err
		}
	} else {
		r.ActorType = NewUnionNullString()

		r.ActorType = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["AddressLine"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AddressLine); err != nil {
			return err
		}
	} else {
		r.AddressLine = NewUnionNullString()

		r.AddressLine = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["AddressLine2"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AddressLine2); err != nil {
			return err
		}
	} else {
		r.AddressLine2 = NewUnionNullString()

		r.AddressLine2 = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Amount"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Amount); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Amount")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CaseNumber"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CaseNumber); err != nil {
			return err
		}
	} else {
		r.CaseNumber = NewUnionNullString()

		r.CaseNumber = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Cid"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Cid); err != nil {
			return err
		}
	} else {
		r.Cid = NewUnionNullString()

		r.Cid = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["City"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.City); err != nil {
			return err
		}
	} else {
		r.City = NewUnionNullString()

		r.City = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CompanyName"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CompanyName); err != nil {
			return err
		}
	} else {
		r.CompanyName = NewUnionNullString()

		r.CompanyName = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ContactPersonName"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ContactPersonName); err != nil {
			return err
		}
	} else {
		r.ContactPersonName = NewUnionNullString()

		r.ContactPersonName = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Country"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Country); err != nil {
			return err
		}
	} else {
		r.Country = NewUnionNullString()

		r.Country = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DebtCollectionAgency"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DebtCollectionAgency); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DebtCollectionAgency")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Description"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Description); err != nil {
			return err
		}
	} else {
		r.Description = NewUnionNullString()

		r.Description = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DueDate"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DueDate); err != nil {
			return err
		}
	} else {
		r.DueDate = NewUnionNullLong()

		r.DueDate = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DunningFeeAmount"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DunningFeeAmount); err != nil {
			return err
		}
	} else {
		r.DunningFeeAmount = NewUnionNullDouble()

		r.DunningFeeAmount = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Email"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Email); err != nil {
			return err
		}
	} else {
		r.Email = NewUnionNullString()

		r.Email = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["EventType"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EventType); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for EventType")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ExternalCustomerGUID"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ExternalCustomerGUID); err != nil {
			return err
		}
	} else {
		r.ExternalCustomerGUID = NewUnionNullString()

		r.ExternalCustomerGUID = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ExternalCustomerReference"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ExternalCustomerReference); err != nil {
			return err
		}
	} else {
		r.ExternalCustomerReference = NewUnionNullString()

		r.ExternalCustomerReference = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FirstName"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FirstName); err != nil {
			return err
		}
	} else {
		r.FirstName = NewUnionNullString()

		r.FirstName = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Id"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Id); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Id")
	}
	val = func() json.RawMessage {
		if v, ok := fields["IdentityNumber"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IdentityNumber); err != nil {
			return err
		}
	} else {
		r.IdentityNumber = NewUnionNullString()

		r.IdentityNumber = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["InterestAmount"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.InterestAmount); err != nil {
			return err
		}
	} else {
		r.InterestAmount = NewUnionNullDouble()

		r.InterestAmount = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["InvoiceAgreementId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.InvoiceAgreementId); err != nil {
			return err
		}
	} else {
		r.InvoiceAgreementId = NewUnionNullLong()

		r.InvoiceAgreementId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["InvoiceDebtCollectionEventType"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.InvoiceDebtCollectionEventType); err != nil {
			return err
		}
	} else {
		r.InvoiceDebtCollectionEventType = NewUnionNullString()

		r.InvoiceDebtCollectionEventType = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["InvoiceId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.InvoiceId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for InvoiceId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["LastName"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.LastName); err != nil {
			return err
		}
	} else {
		r.LastName = NewUnionNullString()

		r.LastName = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["MeterId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MeterId); err != nil {
			return err
		}
	} else {
		r.MeterId = NewUnionNullString()

		r.MeterId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["MeterPointAddress"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MeterPointAddress); err != nil {
			return err
		}
	} else {
		r.MeterPointAddress = NewUnionNullString()

		r.MeterPointAddress = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["MeterPointId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MeterPointId); err != nil {
			return err
		}
	} else {
		r.MeterPointId = NewUnionNullString()

		r.MeterPointId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["PhoneCell"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PhoneCell); err != nil {
			return err
		}
	} else {
		r.PhoneCell = NewUnionNullString()

		r.PhoneCell = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["PhonePrivate"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PhonePrivate); err != nil {
			return err
		}
	} else {
		r.PhonePrivate = NewUnionNullString()

		r.PhonePrivate = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["PhoneWork"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PhoneWork); err != nil {
			return err
		}
	} else {
		r.PhoneWork = NewUnionNullString()

		r.PhoneWork = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ProductLineStatus"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ProductLineStatus); err != nil {
			return err
		}
	} else {
		r.ProductLineStatus = NewUnionNullSalesOrderStatus()

		r.ProductLineStatus = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SourceId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SourceId); err != nil {
			return err
		}
	} else {
		r.SourceId = NewUnionNullLong()

		r.SourceId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SourceType"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SourceType); err != nil {
			return err
		}
	} else {
		r.SourceType = NewUnionNullString()

		r.SourceType = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TransactionDate"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TransactionDate); err != nil {
			return err
		}
	} else {
		r.TransactionDate = NewUnionNullLong()

		r.TransactionDate = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ZipCode"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ZipCode); err != nil {
			return err
		}
	} else {
		r.ZipCode = NewUnionNullString()

		r.ZipCode = nil
	}
	return nil
}
