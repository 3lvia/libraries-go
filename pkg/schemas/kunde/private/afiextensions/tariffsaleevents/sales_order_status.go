// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100346_2.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type SalesOrderStatus int32

const (
	SalesOrderStatusAll                   SalesOrderStatus = 0
	SalesOrderStatusActive                SalesOrderStatus = 1
	SalesOrderStatusAnulled               SalesOrderStatus = 2
	SalesOrderStatusNeedsPriceChange      SalesOrderStatus = 3
	SalesOrderStatusHandOverInProgress    SalesOrderStatus = 4
	SalesOrderStatusAboutToBeClosed       SalesOrderStatus = 5
	SalesOrderStatusClosed                SalesOrderStatus = 6
	SalesOrderStatusInCloseProcess        SalesOrderStatus = 7
	SalesOrderStatusAnullmentInitialised  SalesOrderStatus = 8
	SalesOrderStatusActivationInitialised SalesOrderStatus = 9
)

func (e SalesOrderStatus) String() string {
	switch e {
	case SalesOrderStatusAll:
		return "All"
	case SalesOrderStatusActive:
		return "Active"
	case SalesOrderStatusAnulled:
		return "Anulled"
	case SalesOrderStatusNeedsPriceChange:
		return "NeedsPriceChange"
	case SalesOrderStatusHandOverInProgress:
		return "HandOverInProgress"
	case SalesOrderStatusAboutToBeClosed:
		return "AboutToBeClosed"
	case SalesOrderStatusClosed:
		return "Closed"
	case SalesOrderStatusInCloseProcess:
		return "InCloseProcess"
	case SalesOrderStatusAnullmentInitialised:
		return "AnullmentInitialised"
	case SalesOrderStatusActivationInitialised:
		return "ActivationInitialised"
	}
	return "unknown"
}

func writeSalesOrderStatus(r SalesOrderStatus, w io.Writer) error {
	return vm.WriteInt(int32(r), w)
}

func NewSalesOrderStatusValue(raw string) (r SalesOrderStatus, err error) {
	switch raw {
	case "All":
		return SalesOrderStatusAll, nil
	case "Active":
		return SalesOrderStatusActive, nil
	case "Anulled":
		return SalesOrderStatusAnulled, nil
	case "NeedsPriceChange":
		return SalesOrderStatusNeedsPriceChange, nil
	case "HandOverInProgress":
		return SalesOrderStatusHandOverInProgress, nil
	case "AboutToBeClosed":
		return SalesOrderStatusAboutToBeClosed, nil
	case "Closed":
		return SalesOrderStatusClosed, nil
	case "InCloseProcess":
		return SalesOrderStatusInCloseProcess, nil
	case "AnullmentInitialised":
		return SalesOrderStatusAnullmentInitialised, nil
	case "ActivationInitialised":
		return SalesOrderStatusActivationInitialised, nil
	}

	return -1, fmt.Errorf("invalid value for SalesOrderStatus: '%s'", raw)

}

func (b SalesOrderStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.String())
}

func (b *SalesOrderStatus) UnmarshalJSON(data []byte) error {
	var stringVal string
	err := json.Unmarshal(data, &stringVal)
	if err != nil {
		return err
	}
	val, err := NewSalesOrderStatusValue(stringVal)
	*b = val
	return err
}

type SalesOrderStatusWrapper struct {
	Target *SalesOrderStatus
}

func (b SalesOrderStatusWrapper) SetBoolean(v bool) {
	panic("Unable to assign boolean to int field")
}

func (b SalesOrderStatusWrapper) SetInt(v int32) {
	*(b.Target) = SalesOrderStatus(v)
}

func (b SalesOrderStatusWrapper) SetLong(v int64) {
	panic("Unable to assign long to int field")
}

func (b SalesOrderStatusWrapper) SetFloat(v float32) {
	panic("Unable to assign float to int field")
}

func (b SalesOrderStatusWrapper) SetUnionElem(v int64) {
	panic("Unable to assign union elem to int field")
}

func (b SalesOrderStatusWrapper) SetDouble(v float64) {
	panic("Unable to assign double to int field")
}

func (b SalesOrderStatusWrapper) SetBytes(v []byte) {
	panic("Unable to assign bytes to int field")
}

func (b SalesOrderStatusWrapper) SetString(v string) {
	panic("Unable to assign string to int field")
}

func (b SalesOrderStatusWrapper) Get(i int) types.Field {
	panic("Unable to get field from int field")
}

func (b SalesOrderStatusWrapper) SetDefault(i int) {
	panic("Unable to set default on int field")
}

func (b SalesOrderStatusWrapper) AppendMap(key string) types.Field {
	panic("Unable to append map key to from int field")
}

func (b SalesOrderStatusWrapper) AppendArray() types.Field {
	panic("Unable to append array element to from int field")
}

func (b SalesOrderStatusWrapper) NullField(int) {
	panic("Unable to null field in int field")
}

func (b SalesOrderStatusWrapper) HintSize(int) {
	panic("Unable to hint size in int field")
}

func (b SalesOrderStatusWrapper) Finalize() {}
