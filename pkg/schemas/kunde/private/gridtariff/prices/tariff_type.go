// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100242_2.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type TariffType struct {
	ConsumptionFlag bool `json:"ConsumptionFlag"`

	Description *UnionNullString `json:"Description"`

	FixedPriceConfiguration *UnionNullFixedPriceConfiguration `json:"FixedPriceConfiguration"`

	LastUpdated int64 `json:"LastUpdated"`

	PowerPriceConfiguration *UnionNullPowerPriceConfiguration `json:"PowerPriceConfiguration"`

	Product *UnionNullString `json:"Product"`

	Resolution int32 `json:"Resolution"`

	TariffKey *UnionNullString `json:"TariffKey"`

	TariffPrices *UnionNullArrayUnionNullTariffPrice `json:"TariffPrices"`

	Title *UnionNullString `json:"Title"`

	UsePowerPriceConfiguration bool `json:"UsePowerPriceConfiguration"`

	UsePublicHolidayOverride *UnionNullString `json:"UsePublicHolidayOverride"`

	UseWeekendPriceOverride *UnionNullString `json:"UseWeekendPriceOverride"`
}

const TariffTypeAvroCRC64Fingerprint = "\"I\xefLI?\xf42"

func NewTariffType() TariffType {
	r := TariffType{}
	r.Description = nil
	r.FixedPriceConfiguration = nil
	r.PowerPriceConfiguration = nil
	r.Product = nil
	r.TariffKey = nil
	r.TariffPrices = nil
	r.Title = nil
	r.UsePublicHolidayOverride = nil
	r.UseWeekendPriceOverride = nil
	return r
}

func DeserializeTariffType(r io.Reader) (TariffType, error) {
	t := NewTariffType()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeTariffTypeFromSchema(r io.Reader, schema string) (TariffType, error) {
	t := NewTariffType()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeTariffType(r TariffType, w io.Writer) error {
	var err error
	err = vm.WriteBool(r.ConsumptionFlag, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Description, w)
	if err != nil {
		return err
	}
	err = writeUnionNullFixedPriceConfiguration(r.FixedPriceConfiguration, w)
	if err != nil {
		return err
	}
	err = vm.WriteLong(r.LastUpdated, w)
	if err != nil {
		return err
	}
	err = writeUnionNullPowerPriceConfiguration(r.PowerPriceConfiguration, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Product, w)
	if err != nil {
		return err
	}
	err = vm.WriteInt(r.Resolution, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TariffKey, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayUnionNullTariffPrice(r.TariffPrices, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Title, w)
	if err != nil {
		return err
	}
	err = vm.WriteBool(r.UsePowerPriceConfiguration, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.UsePublicHolidayOverride, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.UseWeekendPriceOverride, w)
	if err != nil {
		return err
	}
	return err
}

func (r TariffType) Serialize(w io.Writer) error {
	return writeTariffType(r, w)
}

func (r TariffType) Schema() string {
	return "{\"fields\":[{\"name\":\"ConsumptionFlag\",\"type\":\"boolean\"},{\"default\":null,\"name\":\"Description\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"FixedPriceConfiguration\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"AdditionalProperties\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",{\"fields\":[],\"name\":\"Object\",\"namespace\":\"System\",\"type\":\"record\"}]}]},{\"default\":null,\"name\":\"AllDaysPerMonth\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"Basis\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DaysPerMonth\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"MaxhoursPerDay\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"MaxhoursPerMonth\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"Months\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"MonthsOffset\",\"type\":[\"null\",\"int\"]}],\"name\":\"FixedPriceConfiguration\",\"type\":\"record\"}]},{\"name\":\"LastUpdated\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"default\":null,\"name\":\"PowerPriceConfiguration\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"AdditionalProperties\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",\"System.Object\"]}]},{\"default\":null,\"name\":\"PowerFactorPercentage\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"ReactivePowerPricing\",\"type\":[\"null\",\"boolean\"]}],\"name\":\"PowerPriceConfiguration\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Product\",\"type\":[\"null\",\"string\"]},{\"name\":\"Resolution\",\"type\":\"int\"},{\"default\":null,\"name\":\"TariffKey\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TariffPrices\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"name\":\"EndDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"default\":null,\"name\":\"FixedPrices\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"FixedPriceLevel\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Currency\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LevelInfo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MonetaryUnitOfMeasure\",\"type\":[\"null\",\"string\"]},{\"name\":\"MonthlyFixedExTaxes\",\"type\":\"double\"},{\"default\":null,\"name\":\"MonthlyUnitOfMeasure\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NextIdDown\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NextIdUp\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ValueMax\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"ValueMin\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"ValueUnitOfMeasure\",\"type\":[\"null\",\"string\"]}],\"name\":\"FixedPriceLevel\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]}],\"name\":\"FixedPrices\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Seasons\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"EnergyPrice\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Currency\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"EnergyPriceLevel\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"EnergyExTaxes\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"Hours\",\"type\":[\"null\",{\"items\":\"int\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Level\",\"type\":[\"null\",\"string\"]}],\"name\":\"EnergyPrice\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"MonetaryUnitOfMeasure\",\"type\":[\"null\",\"string\"]}],\"name\":\"EnergyPrice2\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Months\",\"type\":[\"null\",{\"items\":\"int\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"Name\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PowerPrices\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"PowerPriceLevel\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Currency\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LevelInfo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MonetaryUnitOfMeasure\",\"type\":[\"null\",\"string\"]},{\"name\":\"MonthlyActivePowerExTaxes\",\"type\":\"double\"},{\"default\":null,\"name\":\"MonthlyReactivePowerExTaxes\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"MonthlyUnitOfMeasure\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NextIdDown\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NextIdUp\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ValueMax\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"ValueMin\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"ValueUnitOfMeasure\",\"type\":[\"null\",\"string\"]}],\"name\":\"PowerPrice\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"PowerPrice2\",\"type\":\"record\"}]}],\"name\":\"Season\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"name\":\"StartDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"default\":null,\"name\":\"Taxes\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"EnergyPriceTaxes\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"name\":\"EndDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"name\":\"StartDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"default\":null,\"name\":\"TaxType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxTypeDescription\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxUom\",\"type\":[\"null\",\"string\"]},{\"name\":\"TaxValue\",\"type\":\"double\"}],\"name\":\"TaxConfigEnergy\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"FixedPriceTaxes\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"name\":\"EndDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"name\":\"StartDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"default\":null,\"name\":\"TaxType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxTypeDescription\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxUom\",\"type\":[\"null\",\"string\"]},{\"name\":\"TaxValue\",\"type\":\"double\"}],\"name\":\"TaxConfigFixed\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"PowerPriceTaxes\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"name\":\"EndDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"name\":\"StartDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"default\":null,\"name\":\"TaxType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxTypeDescription\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxUom\",\"type\":[\"null\",\"string\"]},{\"name\":\"TaxValue\",\"type\":\"double\"}],\"name\":\"TaxConfigPower\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"Taxes\",\"type\":\"record\"}]}],\"name\":\"TariffPrice\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"Title\",\"type\":[\"null\",\"string\"]},{\"name\":\"UsePowerPriceConfiguration\",\"type\":\"boolean\"},{\"default\":null,\"name\":\"UsePublicHolidayOverride\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"UseWeekendPriceOverride\",\"type\":[\"null\",\"string\"]}],\"name\":\"GridTariff.Events.V1.TariffType\",\"type\":\"record\"}"
}

func (r TariffType) SchemaName() string {
	return "GridTariff.Events.V1.TariffType"
}

func (_ TariffType) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ TariffType) SetInt(v int32)       { panic("Unsupported operation") }
func (_ TariffType) SetLong(v int64)      { panic("Unsupported operation") }
func (_ TariffType) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ TariffType) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ TariffType) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ TariffType) SetString(v string)   { panic("Unsupported operation") }
func (_ TariffType) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *TariffType) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.Boolean{Target: &r.ConsumptionFlag}

		return w

	case 1:
		r.Description = NewUnionNullString()

		return r.Description
	case 2:
		r.FixedPriceConfiguration = NewUnionNullFixedPriceConfiguration()

		return r.FixedPriceConfiguration
	case 3:
		w := types.Long{Target: &r.LastUpdated}

		return w

	case 4:
		r.PowerPriceConfiguration = NewUnionNullPowerPriceConfiguration()

		return r.PowerPriceConfiguration
	case 5:
		r.Product = NewUnionNullString()

		return r.Product
	case 6:
		w := types.Int{Target: &r.Resolution}

		return w

	case 7:
		r.TariffKey = NewUnionNullString()

		return r.TariffKey
	case 8:
		r.TariffPrices = NewUnionNullArrayUnionNullTariffPrice()

		return r.TariffPrices
	case 9:
		r.Title = NewUnionNullString()

		return r.Title
	case 10:
		w := types.Boolean{Target: &r.UsePowerPriceConfiguration}

		return w

	case 11:
		r.UsePublicHolidayOverride = NewUnionNullString()

		return r.UsePublicHolidayOverride
	case 12:
		r.UseWeekendPriceOverride = NewUnionNullString()

		return r.UseWeekendPriceOverride
	}
	panic("Unknown field index")
}

func (r *TariffType) SetDefault(i int) {
	switch i {
	case 1:
		r.Description = nil
		return
	case 2:
		r.FixedPriceConfiguration = nil
		return
	case 4:
		r.PowerPriceConfiguration = nil
		return
	case 5:
		r.Product = nil
		return
	case 7:
		r.TariffKey = nil
		return
	case 8:
		r.TariffPrices = nil
		return
	case 9:
		r.Title = nil
		return
	case 11:
		r.UsePublicHolidayOverride = nil
		return
	case 12:
		r.UseWeekendPriceOverride = nil
		return
	}
	panic("Unknown field index")
}

func (r *TariffType) NullField(i int) {
	switch i {
	case 1:
		r.Description = nil
		return
	case 2:
		r.FixedPriceConfiguration = nil
		return
	case 4:
		r.PowerPriceConfiguration = nil
		return
	case 5:
		r.Product = nil
		return
	case 7:
		r.TariffKey = nil
		return
	case 8:
		r.TariffPrices = nil
		return
	case 9:
		r.Title = nil
		return
	case 11:
		r.UsePublicHolidayOverride = nil
		return
	case 12:
		r.UseWeekendPriceOverride = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ TariffType) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ TariffType) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ TariffType) HintSize(int)                     { panic("Unsupported operation") }
func (_ TariffType) Finalize()                        {}

func (_ TariffType) AvroCRC64Fingerprint() []byte {
	return []byte(TariffTypeAvroCRC64Fingerprint)
}

func (r TariffType) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["ConsumptionFlag"], err = json.Marshal(r.ConsumptionFlag)
	if err != nil {
		return nil, err
	}
	output["Description"], err = json.Marshal(r.Description)
	if err != nil {
		return nil, err
	}
	output["FixedPriceConfiguration"], err = json.Marshal(r.FixedPriceConfiguration)
	if err != nil {
		return nil, err
	}
	output["LastUpdated"], err = json.Marshal(r.LastUpdated)
	if err != nil {
		return nil, err
	}
	output["PowerPriceConfiguration"], err = json.Marshal(r.PowerPriceConfiguration)
	if err != nil {
		return nil, err
	}
	output["Product"], err = json.Marshal(r.Product)
	if err != nil {
		return nil, err
	}
	output["Resolution"], err = json.Marshal(r.Resolution)
	if err != nil {
		return nil, err
	}
	output["TariffKey"], err = json.Marshal(r.TariffKey)
	if err != nil {
		return nil, err
	}
	output["TariffPrices"], err = json.Marshal(r.TariffPrices)
	if err != nil {
		return nil, err
	}
	output["Title"], err = json.Marshal(r.Title)
	if err != nil {
		return nil, err
	}
	output["UsePowerPriceConfiguration"], err = json.Marshal(r.UsePowerPriceConfiguration)
	if err != nil {
		return nil, err
	}
	output["UsePublicHolidayOverride"], err = json.Marshal(r.UsePublicHolidayOverride)
	if err != nil {
		return nil, err
	}
	output["UseWeekendPriceOverride"], err = json.Marshal(r.UseWeekendPriceOverride)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *TariffType) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["ConsumptionFlag"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ConsumptionFlag); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ConsumptionFlag")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Description"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Description); err != nil {
			return err
		}
	} else {
		r.Description = NewUnionNullString()

		r.Description = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FixedPriceConfiguration"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FixedPriceConfiguration); err != nil {
			return err
		}
	} else {
		r.FixedPriceConfiguration = NewUnionNullFixedPriceConfiguration()

		r.FixedPriceConfiguration = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["LastUpdated"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.LastUpdated); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for LastUpdated")
	}
	val = func() json.RawMessage {
		if v, ok := fields["PowerPriceConfiguration"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PowerPriceConfiguration); err != nil {
			return err
		}
	} else {
		r.PowerPriceConfiguration = NewUnionNullPowerPriceConfiguration()

		r.PowerPriceConfiguration = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Product"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Product); err != nil {
			return err
		}
	} else {
		r.Product = NewUnionNullString()

		r.Product = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Resolution"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Resolution); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Resolution")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TariffKey"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TariffKey); err != nil {
			return err
		}
	} else {
		r.TariffKey = NewUnionNullString()

		r.TariffKey = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TariffPrices"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TariffPrices); err != nil {
			return err
		}
	} else {
		r.TariffPrices = NewUnionNullArrayUnionNullTariffPrice()

		r.TariffPrices = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Title"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Title); err != nil {
			return err
		}
	} else {
		r.Title = NewUnionNullString()

		r.Title = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["UsePowerPriceConfiguration"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.UsePowerPriceConfiguration); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for UsePowerPriceConfiguration")
	}
	val = func() json.RawMessage {
		if v, ok := fields["UsePublicHolidayOverride"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.UsePublicHolidayOverride); err != nil {
			return err
		}
	} else {
		r.UsePublicHolidayOverride = NewUnionNullString()

		r.UsePublicHolidayOverride = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["UseWeekendPriceOverride"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.UseWeekendPriceOverride); err != nil {
			return err
		}
	} else {
		r.UseWeekendPriceOverride = NewUnionNullString()

		r.UseWeekendPriceOverride = nil
	}
	return nil
}
