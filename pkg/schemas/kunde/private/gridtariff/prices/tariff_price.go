// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100242_2.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type TariffPrice struct {
	EndDate int64 `json:"EndDate"`

	FixedPrices *UnionNullFixedPrices `json:"FixedPrices"`

	Seasons *UnionNullArrayUnionNullSeason `json:"Seasons"`

	StartDate int64 `json:"StartDate"`

	Taxes *UnionNullTaxes `json:"Taxes"`
}

const TariffPriceAvroCRC64Fingerprint = "H\x81\xff\x1a<\x90\x8a\xe0"

func NewTariffPrice() TariffPrice {
	r := TariffPrice{}
	r.FixedPrices = nil
	r.Seasons = nil
	r.Taxes = nil
	return r
}

func DeserializeTariffPrice(r io.Reader) (TariffPrice, error) {
	t := NewTariffPrice()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeTariffPriceFromSchema(r io.Reader, schema string) (TariffPrice, error) {
	t := NewTariffPrice()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeTariffPrice(r TariffPrice, w io.Writer) error {
	var err error
	err = vm.WriteLong(r.EndDate, w)
	if err != nil {
		return err
	}
	err = writeUnionNullFixedPrices(r.FixedPrices, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayUnionNullSeason(r.Seasons, w)
	if err != nil {
		return err
	}
	err = vm.WriteLong(r.StartDate, w)
	if err != nil {
		return err
	}
	err = writeUnionNullTaxes(r.Taxes, w)
	if err != nil {
		return err
	}
	return err
}

func (r TariffPrice) Serialize(w io.Writer) error {
	return writeTariffPrice(r, w)
}

func (r TariffPrice) Schema() string {
	return "{\"fields\":[{\"name\":\"EndDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"default\":null,\"name\":\"FixedPrices\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"FixedPriceLevel\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Currency\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LevelInfo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MonetaryUnitOfMeasure\",\"type\":[\"null\",\"string\"]},{\"name\":\"MonthlyFixedExTaxes\",\"type\":\"double\"},{\"default\":null,\"name\":\"MonthlyUnitOfMeasure\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NextIdDown\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NextIdUp\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ValueMax\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"ValueMin\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"ValueUnitOfMeasure\",\"type\":[\"null\",\"string\"]}],\"name\":\"FixedPriceLevel\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]}],\"name\":\"FixedPrices\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Seasons\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"EnergyPrice\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Currency\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"EnergyPriceLevel\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"EnergyExTaxes\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"Hours\",\"type\":[\"null\",{\"items\":\"int\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Level\",\"type\":[\"null\",\"string\"]}],\"name\":\"EnergyPrice\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"MonetaryUnitOfMeasure\",\"type\":[\"null\",\"string\"]}],\"name\":\"EnergyPrice2\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"Months\",\"type\":[\"null\",{\"items\":\"int\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"Name\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PowerPrices\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"PowerPriceLevel\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Currency\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LevelInfo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MonetaryUnitOfMeasure\",\"type\":[\"null\",\"string\"]},{\"name\":\"MonthlyActivePowerExTaxes\",\"type\":\"double\"},{\"default\":null,\"name\":\"MonthlyReactivePowerExTaxes\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"MonthlyUnitOfMeasure\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NextIdDown\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NextIdUp\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ValueMax\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"ValueMin\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"ValueUnitOfMeasure\",\"type\":[\"null\",\"string\"]}],\"name\":\"PowerPrice\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"PowerPrice2\",\"type\":\"record\"}]}],\"name\":\"Season\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"name\":\"StartDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"default\":null,\"name\":\"Taxes\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"EnergyPriceTaxes\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"name\":\"EndDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"name\":\"StartDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"default\":null,\"name\":\"TaxType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxTypeDescription\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxUom\",\"type\":[\"null\",\"string\"]},{\"name\":\"TaxValue\",\"type\":\"double\"}],\"name\":\"TaxConfigEnergy\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"FixedPriceTaxes\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"name\":\"EndDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"name\":\"StartDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"default\":null,\"name\":\"TaxType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxTypeDescription\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxUom\",\"type\":[\"null\",\"string\"]},{\"name\":\"TaxValue\",\"type\":\"double\"}],\"name\":\"TaxConfigFixed\",\"type\":\"record\"}],\"type\":\"array\"}]},{\"default\":null,\"name\":\"PowerPriceTaxes\",\"type\":[\"null\",{\"items\":[\"null\",{\"fields\":[{\"name\":\"EndDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"name\":\"StartDate\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"default\":null,\"name\":\"TaxType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxTypeDescription\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TaxUom\",\"type\":[\"null\",\"string\"]},{\"name\":\"TaxValue\",\"type\":\"double\"}],\"name\":\"TaxConfigPower\",\"type\":\"record\"}],\"type\":\"array\"}]}],\"name\":\"Taxes\",\"type\":\"record\"}]}],\"name\":\"GridTariff.Events.V1.TariffPrice\",\"type\":\"record\"}"
}

func (r TariffPrice) SchemaName() string {
	return "GridTariff.Events.V1.TariffPrice"
}

func (_ TariffPrice) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ TariffPrice) SetInt(v int32)       { panic("Unsupported operation") }
func (_ TariffPrice) SetLong(v int64)      { panic("Unsupported operation") }
func (_ TariffPrice) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ TariffPrice) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ TariffPrice) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ TariffPrice) SetString(v string)   { panic("Unsupported operation") }
func (_ TariffPrice) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *TariffPrice) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.Long{Target: &r.EndDate}

		return w

	case 1:
		r.FixedPrices = NewUnionNullFixedPrices()

		return r.FixedPrices
	case 2:
		r.Seasons = NewUnionNullArrayUnionNullSeason()

		return r.Seasons
	case 3:
		w := types.Long{Target: &r.StartDate}

		return w

	case 4:
		r.Taxes = NewUnionNullTaxes()

		return r.Taxes
	}
	panic("Unknown field index")
}

func (r *TariffPrice) SetDefault(i int) {
	switch i {
	case 1:
		r.FixedPrices = nil
		return
	case 2:
		r.Seasons = nil
		return
	case 4:
		r.Taxes = nil
		return
	}
	panic("Unknown field index")
}

func (r *TariffPrice) NullField(i int) {
	switch i {
	case 1:
		r.FixedPrices = nil
		return
	case 2:
		r.Seasons = nil
		return
	case 4:
		r.Taxes = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ TariffPrice) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ TariffPrice) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ TariffPrice) HintSize(int)                     { panic("Unsupported operation") }
func (_ TariffPrice) Finalize()                        {}

func (_ TariffPrice) AvroCRC64Fingerprint() []byte {
	return []byte(TariffPriceAvroCRC64Fingerprint)
}

func (r TariffPrice) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["EndDate"], err = json.Marshal(r.EndDate)
	if err != nil {
		return nil, err
	}
	output["FixedPrices"], err = json.Marshal(r.FixedPrices)
	if err != nil {
		return nil, err
	}
	output["Seasons"], err = json.Marshal(r.Seasons)
	if err != nil {
		return nil, err
	}
	output["StartDate"], err = json.Marshal(r.StartDate)
	if err != nil {
		return nil, err
	}
	output["Taxes"], err = json.Marshal(r.Taxes)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *TariffPrice) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["EndDate"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EndDate); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for EndDate")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FixedPrices"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FixedPrices); err != nil {
			return err
		}
	} else {
		r.FixedPrices = NewUnionNullFixedPrices()

		r.FixedPrices = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Seasons"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Seasons); err != nil {
			return err
		}
	} else {
		r.Seasons = NewUnionNullArrayUnionNullSeason()

		r.Seasons = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["StartDate"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.StartDate); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for StartDate")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Taxes"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Taxes); err != nil {
			return err
		}
	} else {
		r.Taxes = NewUnionNullTaxes()

		r.Taxes = nil
	}
	return nil
}
