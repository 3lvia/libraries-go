// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100412_1.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type CustomerAccessRole int32

const (
	CustomerAccessRoleOwner           CustomerAccessRole = 0
	CustomerAccessRoleCoOwner         CustomerAccessRole = 1
	CustomerAccessRoleCompanyReader   CustomerAccessRole = 2
	CustomerAccessRoleMachineReader   CustomerAccessRole = 3
	CustomerAccessRoleCustomerService CustomerAccessRole = 4
)

func (e CustomerAccessRole) String() string {
	switch e {
	case CustomerAccessRoleOwner:
		return "Owner"
	case CustomerAccessRoleCoOwner:
		return "CoOwner"
	case CustomerAccessRoleCompanyReader:
		return "CompanyReader"
	case CustomerAccessRoleMachineReader:
		return "MachineReader"
	case CustomerAccessRoleCustomerService:
		return "CustomerService"
	}
	return "unknown"
}

func writeCustomerAccessRole(r CustomerAccessRole, w io.Writer) error {
	return vm.WriteInt(int32(r), w)
}

func NewCustomerAccessRoleValue(raw string) (r CustomerAccessRole, err error) {
	switch raw {
	case "Owner":
		return CustomerAccessRoleOwner, nil
	case "CoOwner":
		return CustomerAccessRoleCoOwner, nil
	case "CompanyReader":
		return CustomerAccessRoleCompanyReader, nil
	case "MachineReader":
		return CustomerAccessRoleMachineReader, nil
	case "CustomerService":
		return CustomerAccessRoleCustomerService, nil
	}

	return -1, fmt.Errorf("invalid value for CustomerAccessRole: '%s'", raw)

}

func (b CustomerAccessRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.String())
}

func (b *CustomerAccessRole) UnmarshalJSON(data []byte) error {
	var stringVal string
	err := json.Unmarshal(data, &stringVal)
	if err != nil {
		return err
	}
	val, err := NewCustomerAccessRoleValue(stringVal)
	*b = val
	return err
}

type CustomerAccessRoleWrapper struct {
	Target *CustomerAccessRole
}

func (b CustomerAccessRoleWrapper) SetBoolean(v bool) {
	panic("Unable to assign boolean to int field")
}

func (b CustomerAccessRoleWrapper) SetInt(v int32) {
	*(b.Target) = CustomerAccessRole(v)
}

func (b CustomerAccessRoleWrapper) SetLong(v int64) {
	panic("Unable to assign long to int field")
}

func (b CustomerAccessRoleWrapper) SetFloat(v float32) {
	panic("Unable to assign float to int field")
}

func (b CustomerAccessRoleWrapper) SetUnionElem(v int64) {
	panic("Unable to assign union elem to int field")
}

func (b CustomerAccessRoleWrapper) SetDouble(v float64) {
	panic("Unable to assign double to int field")
}

func (b CustomerAccessRoleWrapper) SetBytes(v []byte) {
	panic("Unable to assign bytes to int field")
}

func (b CustomerAccessRoleWrapper) SetString(v string) {
	panic("Unable to assign string to int field")
}

func (b CustomerAccessRoleWrapper) Get(i int) types.Field {
	panic("Unable to get field from int field")
}

func (b CustomerAccessRoleWrapper) SetDefault(i int) {
	panic("Unable to set default on int field")
}

func (b CustomerAccessRoleWrapper) AppendMap(key string) types.Field {
	panic("Unable to append map key to from int field")
}

func (b CustomerAccessRoleWrapper) AppendArray() types.Field {
	panic("Unable to append array element to from int field")
}

func (b CustomerAccessRoleWrapper) NullField(int) {
	panic("Unable to null field in int field")
}

func (b CustomerAccessRoleWrapper) HintSize(int) {
	panic("Unable to hint size in int field")
}

func (b CustomerAccessRoleWrapper) Finalize() {}
