// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     100058_21.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type SettlementMethod int32

const (
	SettlementMethodHourly  SettlementMethod = 0
	SettlementMethodProfile SettlementMethod = 1
)

func (e SettlementMethod) String() string {
	switch e {
	case SettlementMethodHourly:
		return "Hourly"
	case SettlementMethodProfile:
		return "Profile"
	}
	return "unknown"
}

func writeSettlementMethod(r SettlementMethod, w io.Writer) error {
	return vm.WriteInt(int32(r), w)
}

func NewSettlementMethodValue(raw string) (r SettlementMethod, err error) {
	switch raw {
	case "Hourly":
		return SettlementMethodHourly, nil
	case "Profile":
		return SettlementMethodProfile, nil
	}

	return -1, fmt.Errorf("invalid value for SettlementMethod: '%s'", raw)

}

func (b SettlementMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.String())
}

func (b *SettlementMethod) UnmarshalJSON(data []byte) error {
	var stringVal string
	err := json.Unmarshal(data, &stringVal)
	if err != nil {
		return err
	}
	val, err := NewSettlementMethodValue(stringVal)
	*b = val
	return err
}

type SettlementMethodWrapper struct {
	Target *SettlementMethod
}

func (b SettlementMethodWrapper) SetBoolean(v bool) {
	panic("Unable to assign boolean to int field")
}

func (b SettlementMethodWrapper) SetInt(v int32) {
	*(b.Target) = SettlementMethod(v)
}

func (b SettlementMethodWrapper) SetLong(v int64) {
	panic("Unable to assign long to int field")
}

func (b SettlementMethodWrapper) SetFloat(v float32) {
	panic("Unable to assign float to int field")
}

func (b SettlementMethodWrapper) SetUnionElem(v int64) {
	panic("Unable to assign union elem to int field")
}

func (b SettlementMethodWrapper) SetDouble(v float64) {
	panic("Unable to assign double to int field")
}

func (b SettlementMethodWrapper) SetBytes(v []byte) {
	panic("Unable to assign bytes to int field")
}

func (b SettlementMethodWrapper) SetString(v string) {
	panic("Unable to assign string to int field")
}

func (b SettlementMethodWrapper) Get(i int) types.Field {
	panic("Unable to get field from int field")
}

func (b SettlementMethodWrapper) SetDefault(i int) {
	panic("Unable to set default on int field")
}

func (b SettlementMethodWrapper) AppendMap(key string) types.Field {
	panic("Unable to append map key to from int field")
}

func (b SettlementMethodWrapper) AppendArray() types.Field {
	panic("Unable to append array element to from int field")
}

func (b SettlementMethodWrapper) NullField(int) {
	panic("Unable to null field in int field")
}

func (b SettlementMethodWrapper) HintSize(int) {
	panic("Unable to hint size in int field")
}

func (b SettlementMethodWrapper) Finalize() {}
